pyio$(OBJ_SUFFIX): pyio.c pyproc.h pieces/walks/vectors.h pieces/pieces.h \
 utilities/boolean.h stipulation/goals/goals.h position/board.h \
 utilities/bitmask.h stipulation/stipulation.h stipulation/goals/goals.h \
 stipulation/slice_type.h utilities/enumeration.h position/position.h \
 pieces/pieces.h pieces/walks/vectors.h output/mode.h \
 input/plaintext/token.h pylang.h input/plaintext/line.h \
 utilities/boolean.h options/options.h conditions/conditions.h pymsg.h \
 pylang.h solving/solve.h stipulation/stipulation.h solving/castling.h \
 solving/solve.h solving/castling_rights.h solving/move_effect_journal.h \
 solving/ply.h position/pieceid.h solving/proofgames.h stipulation/pipe.h \
 stipulation/structure_traversal.h stipulation/slice.h \
 stipulation/traversal.h output/output.h output/plaintext/plaintext.h \
 output/plaintext/language_dependant.h conditions/conditions.h \
 options/options.h input/plaintext/twin.h input/plaintext/token.h \
 conditions/mummer.h output/latex/latex.h input/plaintext/problem.h \
 input/plaintext/line.h input/plaintext/pieces.h \
 input/plaintext/input_stack.h input/plaintext/stipulation.h \
 pieces/walks/hunters.h solving/observation.h \
 pieces/attributes/neutral/neutral.h stipulation/has_solution_type.h \
 stipulation/proxy.h stipulation/pipe.h stipulation/branch.h \
 stipulation/move_inverter.h stipulation/if_then_else.h \
 stipulation/boolean/or.h stipulation/boolean/and.h \
 stipulation/boolean/not.h stipulation/boolean/true.h \
 stipulation/goals/reached_tester.h \
 stipulation/goals/mate/reached_tester.h \
 stipulation/goals/stalemate/reached_tester.h \
 stipulation/goals/doublestalemate/reached_tester.h \
 stipulation/goals/target/reached_tester.h \
 stipulation/goals/check/reached_tester.h \
 stipulation/goals/capture/reached_tester.h \
 stipulation/goals/steingewinn/reached_tester.h \
 stipulation/goals/enpassant/reached_tester.h \
 stipulation/goals/doublemate/reached_tester.h \
 stipulation/goals/countermate/reached_tester.h \
 stipulation/goals/castling/reached_tester.h \
 stipulation/goals/autostalemate/reached_tester.h \
 stipulation/goals/circuit/reached_tester.h \
 stipulation/goals/exchange/reached_tester.h \
 stipulation/goals/circuit_by_rebirth/reached_tester.h \
 stipulation/goals/exchange_by_rebirth/reached_tester.h \
 stipulation/goals/any/reached_tester.h \
 stipulation/goals/proofgame/reached_tester.h \
 stipulation/goals/atob/reached_tester.h \
 stipulation/goals/immobile/reached_tester.h \
 stipulation/goals/chess81/reached_tester.h \
 stipulation/battle_play/branch.h \
 stipulation/battle_play/defense_adapter.h stipulation/help_play/branch.h \
 stipulation/help_play/adapter.h solving/find_shortest.h \
 solving/play_suppressor.h solving/battle_play/continuation.h \
 solving/battle_play/try.h utilities/table.h solving/move_generator.h \
 pieces/walks/pawns/en_passant.h solving/moving_pawn_promotion.h \
 pieces/walks/pawns/promotion.h solving/move_effect_journal.h \
 conditions/isardam.h conditions/synchronous.h conditions/protean.h \
 conditions/madrasi.h conditions/circe/rex_inclusive.h \
 conditions/republican.h conditions/bgl.h conditions/grid.h \
 conditions/check_zigzag.h conditions/patience.h conditions/sat.h \
 conditions/oscillating_kings.h conditions/kobul.h \
 conditions/circe/circe.h conditions/circe/april.h \
 conditions/circe/chameleon.h conditions/marscirce/marscirce.h \
 conditions/anticirce/anticirce.h conditions/anticirce/cheylan.h \
 conditions/sentinelles.h conditions/magic_square.h conditions/mummer.h \
 conditions/transmuting_kings/super.h conditions/immune.h \
 conditions/geneva.h conditions/koeko/koeko.h conditions/koeko/anti.h \
 conditions/koeko/koeko.h conditions/phantom.h conditions/annan.h \
 conditions/transmuting_kings/transmuting_kings.h \
 conditions/vaulting_kings.h conditions/imitator.h conditions/messigny.h \
 conditions/woozles.h conditions/football.h conditions/singlebox/type1.h \
 options/degenerate_tree.h options/nontrivial.h options/maxthreatlength.h \
 options/maxflightsquares.h options/movenumbers.h \
 options/maxsolutions/maxsolutions.h \
 options/stoponshortsolutions/stoponshortsolutions.h \
 optimisations/intelligent/intelligent.h \
 optimisations/intelligent/limit_nr_solutions_per_target.h \
 platform/beep.h platform/maxtime.h platform/maxmem.h debugging/trace.h

pyproc.h:

pieces/walks/vectors.h:

pieces/pieces.h:

utilities/boolean.h:

stipulation/goals/goals.h:

position/board.h:

utilities/bitmask.h:

stipulation/stipulation.h:

stipulation/goals/goals.h:

stipulation/slice_type.h:

utilities/enumeration.h:

position/position.h:

pieces/pieces.h:

pieces/walks/vectors.h:

output/mode.h:

input/plaintext/token.h:

pylang.h:

input/plaintext/line.h:

utilities/boolean.h:

options/options.h:

conditions/conditions.h:

pymsg.h:

pylang.h:

solving/solve.h:

stipulation/stipulation.h:

solving/castling.h:

solving/solve.h:

solving/castling_rights.h:

solving/move_effect_journal.h:

solving/ply.h:

position/pieceid.h:

solving/proofgames.h:

stipulation/pipe.h:

stipulation/structure_traversal.h:

stipulation/slice.h:

stipulation/traversal.h:

output/output.h:

output/plaintext/plaintext.h:

output/plaintext/language_dependant.h:

conditions/conditions.h:

options/options.h:

input/plaintext/twin.h:

input/plaintext/token.h:

conditions/mummer.h:

output/latex/latex.h:

input/plaintext/problem.h:

input/plaintext/line.h:

input/plaintext/pieces.h:

input/plaintext/input_stack.h:

input/plaintext/stipulation.h:

pieces/walks/hunters.h:

solving/observation.h:

pieces/attributes/neutral/neutral.h:

stipulation/has_solution_type.h:

stipulation/proxy.h:

stipulation/pipe.h:

stipulation/branch.h:

stipulation/move_inverter.h:

stipulation/if_then_else.h:

stipulation/boolean/or.h:

stipulation/boolean/and.h:

stipulation/boolean/not.h:

stipulation/boolean/true.h:

stipulation/goals/reached_tester.h:

stipulation/goals/mate/reached_tester.h:

stipulation/goals/stalemate/reached_tester.h:

stipulation/goals/doublestalemate/reached_tester.h:

stipulation/goals/target/reached_tester.h:

stipulation/goals/check/reached_tester.h:

stipulation/goals/capture/reached_tester.h:

stipulation/goals/steingewinn/reached_tester.h:

stipulation/goals/enpassant/reached_tester.h:

stipulation/goals/doublemate/reached_tester.h:

stipulation/goals/countermate/reached_tester.h:

stipulation/goals/castling/reached_tester.h:

stipulation/goals/autostalemate/reached_tester.h:

stipulation/goals/circuit/reached_tester.h:

stipulation/goals/exchange/reached_tester.h:

stipulation/goals/circuit_by_rebirth/reached_tester.h:

stipulation/goals/exchange_by_rebirth/reached_tester.h:

stipulation/goals/any/reached_tester.h:

stipulation/goals/proofgame/reached_tester.h:

stipulation/goals/atob/reached_tester.h:

stipulation/goals/immobile/reached_tester.h:

stipulation/goals/chess81/reached_tester.h:

stipulation/battle_play/branch.h:

stipulation/battle_play/defense_adapter.h:

stipulation/help_play/branch.h:

stipulation/help_play/adapter.h:

solving/find_shortest.h:

solving/play_suppressor.h:

solving/battle_play/continuation.h:

solving/battle_play/try.h:

utilities/table.h:

solving/move_generator.h:

pieces/walks/pawns/en_passant.h:

solving/moving_pawn_promotion.h:

pieces/walks/pawns/promotion.h:

solving/move_effect_journal.h:

conditions/isardam.h:

conditions/synchronous.h:

conditions/protean.h:

conditions/madrasi.h:

conditions/circe/rex_inclusive.h:

conditions/republican.h:

conditions/bgl.h:

conditions/grid.h:

conditions/check_zigzag.h:

conditions/patience.h:

conditions/sat.h:

conditions/oscillating_kings.h:

conditions/kobul.h:

conditions/circe/circe.h:

conditions/circe/april.h:

conditions/circe/chameleon.h:

conditions/marscirce/marscirce.h:

conditions/anticirce/anticirce.h:

conditions/anticirce/cheylan.h:

conditions/sentinelles.h:

conditions/magic_square.h:

conditions/mummer.h:

conditions/transmuting_kings/super.h:

conditions/immune.h:

conditions/geneva.h:

conditions/koeko/koeko.h:

conditions/koeko/anti.h:

conditions/koeko/koeko.h:

conditions/phantom.h:

conditions/annan.h:

conditions/transmuting_kings/transmuting_kings.h:

conditions/vaulting_kings.h:

conditions/imitator.h:

conditions/messigny.h:

conditions/woozles.h:

conditions/football.h:

conditions/singlebox/type1.h:

options/degenerate_tree.h:

options/nontrivial.h:

options/maxthreatlength.h:

options/maxflightsquares.h:

options/movenumbers.h:

options/maxsolutions/maxsolutions.h:

options/stoponshortsolutions/stoponshortsolutions.h:

optimisations/intelligent/intelligent.h:

optimisations/intelligent/limit_nr_solutions_per_target.h:

platform/beep.h:

platform/maxtime.h:

platform/maxmem.h:

debugging/trace.h:
pymsg$(OBJ_SUFFIX): pymsg.c pyproc.h pieces/walks/vectors.h pieces/pieces.h \
 utilities/boolean.h stipulation/goals/goals.h position/board.h \
 utilities/bitmask.h stipulation/stipulation.h stipulation/goals/goals.h \
 stipulation/slice_type.h utilities/enumeration.h position/position.h \
 pieces/pieces.h pieces/walks/vectors.h output/mode.h \
 input/plaintext/token.h pylang.h input/plaintext/line.h \
 utilities/boolean.h pymsg.h pylang.h output/output.h \
 stipulation/stipulation.h output/plaintext/plaintext.h platform/pytime.h \
 pyallmsg.h

pyproc.h:

pieces/walks/vectors.h:

pieces/pieces.h:

utilities/boolean.h:

stipulation/goals/goals.h:

position/board.h:

utilities/bitmask.h:

stipulation/stipulation.h:

stipulation/goals/goals.h:

stipulation/slice_type.h:

utilities/enumeration.h:

position/position.h:

pieces/pieces.h:

pieces/walks/vectors.h:

output/mode.h:

input/plaintext/token.h:

pylang.h:

input/plaintext/line.h:

utilities/boolean.h:

pymsg.h:

pylang.h:

output/output.h:

stipulation/stipulation.h:

output/plaintext/plaintext.h:

platform/pytime.h:

pyallmsg.h:
pylang$(OBJ_SUFFIX): pylang.c pylang.h

pylang.h:
gengmarr$(OBJ_SUFFIX): gengmarr.c position/position.h position/board.h \
 utilities/bitmask.h pieces/pieces.h utilities/boolean.h \
 pieces/walks/vectors.h utilities/enumeration.h

position/position.h:

position/board.h:

utilities/bitmask.h:

pieces/pieces.h:

utilities/boolean.h:

pieces/walks/vectors.h:

utilities/enumeration.h:
