conditions/einstein/einstein$(OBJ_SUFFIX): conditions/einstein/einstein.c \
 conditions/einstein/einstein.h solving/solve.h py.h utilities/boolean.h \
 position/position.h position/board.h utilities/bitmask.h \
 pieces/walks/vectors.h utilities/boolean.h utilities/enumeration.h \
 pylang.h pydata.h pyproc.h pieces/walks/vectors.h \
 stipulation/goals/goals.h stipulation/pipe.h \
 stipulation/structure_traversal.h stipulation/slice.h \
 stipulation/slice_type.h stipulation/traversal.h \
 stipulation/stipulation.h stipulation/goals/goals.h output/mode.h \
 stipulation/has_solution_type.h stipulation/move.h \
 solving/move_effect_journal.h solving/castling_rights.h \
 position/pieceid.h debugging/trace.h

conditions/einstein/einstein.h:

solving/solve.h:

py.h:

utilities/boolean.h:

position/position.h:

position/board.h:

utilities/bitmask.h:

pieces/walks/vectors.h:

utilities/boolean.h:

utilities/enumeration.h:

pylang.h:

pydata.h:

pyproc.h:

pieces/walks/vectors.h:

stipulation/goals/goals.h:

stipulation/pipe.h:

stipulation/structure_traversal.h:

stipulation/slice.h:

stipulation/slice_type.h:

stipulation/traversal.h:

stipulation/stipulation.h:

stipulation/goals/goals.h:

output/mode.h:

stipulation/has_solution_type.h:

stipulation/move.h:

solving/move_effect_journal.h:

solving/castling_rights.h:

position/pieceid.h:

debugging/trace.h:
conditions/einstein/reverse$(OBJ_SUFFIX): conditions/einstein/reverse.c \
 conditions/einstein/reverse.h solving/solve.h py.h utilities/boolean.h \
 position/position.h position/board.h utilities/bitmask.h \
 pieces/walks/vectors.h utilities/boolean.h utilities/enumeration.h \
 pylang.h pydata.h pyproc.h pieces/walks/vectors.h \
 stipulation/goals/goals.h conditions/einstein/einstein.h \
 stipulation/pipe.h stipulation/structure_traversal.h stipulation/slice.h \
 stipulation/slice_type.h stipulation/traversal.h \
 stipulation/stipulation.h stipulation/goals/goals.h output/mode.h \
 stipulation/has_solution_type.h stipulation/move.h \
 solving/move_effect_journal.h solving/castling_rights.h \
 position/pieceid.h debugging/trace.h

conditions/einstein/reverse.h:

solving/solve.h:

py.h:

utilities/boolean.h:

position/position.h:

position/board.h:

utilities/bitmask.h:

pieces/walks/vectors.h:

utilities/boolean.h:

utilities/enumeration.h:

pylang.h:

pydata.h:

pyproc.h:

pieces/walks/vectors.h:

stipulation/goals/goals.h:

conditions/einstein/einstein.h:

stipulation/pipe.h:

stipulation/structure_traversal.h:

stipulation/slice.h:

stipulation/slice_type.h:

stipulation/traversal.h:

stipulation/stipulation.h:

stipulation/goals/goals.h:

output/mode.h:

stipulation/has_solution_type.h:

stipulation/move.h:

solving/move_effect_journal.h:

solving/castling_rights.h:

position/pieceid.h:

debugging/trace.h:
conditions/einstein/anti$(OBJ_SUFFIX): conditions/einstein/anti.c \
 conditions/einstein/anti.h solving/solve.h py.h utilities/boolean.h \
 position/position.h position/board.h utilities/bitmask.h \
 pieces/walks/vectors.h utilities/boolean.h utilities/enumeration.h \
 pylang.h pydata.h pyproc.h pieces/walks/vectors.h \
 stipulation/goals/goals.h conditions/einstein/einstein.h \
 conditions/circe/circe.h stipulation/slice_type.h \
 solving/move_effect_journal.h solving/castling_rights.h \
 position/pieceid.h stipulation/pipe.h stipulation/structure_traversal.h \
 stipulation/slice.h stipulation/traversal.h stipulation/stipulation.h \
 stipulation/goals/goals.h output/mode.h stipulation/has_solution_type.h \
 stipulation/move.h debugging/trace.h

conditions/einstein/anti.h:

solving/solve.h:

py.h:

utilities/boolean.h:

position/position.h:

position/board.h:

utilities/bitmask.h:

pieces/walks/vectors.h:

utilities/boolean.h:

utilities/enumeration.h:

pylang.h:

pydata.h:

pyproc.h:

pieces/walks/vectors.h:

stipulation/goals/goals.h:

conditions/einstein/einstein.h:

conditions/circe/circe.h:

stipulation/slice_type.h:

solving/move_effect_journal.h:

solving/castling_rights.h:

position/pieceid.h:

stipulation/pipe.h:

stipulation/structure_traversal.h:

stipulation/slice.h:

stipulation/traversal.h:

stipulation/stipulation.h:

stipulation/goals/goals.h:

output/mode.h:

stipulation/has_solution_type.h:

stipulation/move.h:

debugging/trace.h:
conditions/einstein/en_passant$(OBJ_SUFFIX): conditions/einstein/en_passant.c \
 conditions/einstein/en_passant.h solving/solve.h py.h \
 utilities/boolean.h position/position.h position/board.h \
 utilities/bitmask.h pieces/walks/vectors.h utilities/boolean.h \
 utilities/enumeration.h pylang.h pieces/walks/pawns/en_passant.h \
 pyproc.h pieces/walks/vectors.h stipulation/goals/goals.h \
 solving/move_effect_journal.h solving/castling_rights.h \
 position/pieceid.h pieces/walks/classification.h position/position.h \
 stipulation/pipe.h stipulation/structure_traversal.h stipulation/slice.h \
 stipulation/slice_type.h stipulation/traversal.h \
 stipulation/has_solution_type.h stipulation/stipulation.h \
 stipulation/goals/goals.h output/mode.h stipulation/move.h \
 debugging/trace.h pydata.h pyproc.h

conditions/einstein/en_passant.h:

solving/solve.h:

py.h:

utilities/boolean.h:

position/position.h:

position/board.h:

utilities/bitmask.h:

pieces/walks/vectors.h:

utilities/boolean.h:

utilities/enumeration.h:

pylang.h:

pieces/walks/pawns/en_passant.h:

pyproc.h:

pieces/walks/vectors.h:

stipulation/goals/goals.h:

solving/move_effect_journal.h:

solving/castling_rights.h:

position/pieceid.h:

pieces/walks/classification.h:

position/position.h:

stipulation/pipe.h:

stipulation/structure_traversal.h:

stipulation/slice.h:

stipulation/slice_type.h:

stipulation/traversal.h:

stipulation/has_solution_type.h:

stipulation/stipulation.h:

stipulation/goals/goals.h:

output/mode.h:

stipulation/move.h:

debugging/trace.h:

pydata.h:

pyproc.h:
