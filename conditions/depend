conditions/exclusive$(OBJ_SUFFIX): conditions/exclusive.c conditions/exclusive.h \
 utilities/boolean.h utilities/table.h position/position.h \
 position/board.h utilities/bitmask.h pieces/walks/vectors.h \
 utilities/enumeration.h solving/solve.h py.h utilities/boolean.h \
 position/position.h solving/ply.h pylang.h solving/ply.h \
 stipulation/stipulation.h stipulation/slice.h stipulation/slice_type.h \
 stipulation/structure_traversal.h stipulation/traversal.h \
 stipulation/goals/goals.h output/mode.h \
 optimisations/detect_retraction.h pymsg.h pydata.h py.h \
 stipulation/pipe.h stipulation/has_solution_type.h \
 stipulation/temporary_hacks.h stipulation/branch.h debugging/trace.h

conditions/exclusive.h:

utilities/boolean.h:

utilities/table.h:

position/position.h:

position/board.h:

utilities/bitmask.h:

pieces/walks/vectors.h:

utilities/enumeration.h:

solving/solve.h:

py.h:

utilities/boolean.h:

position/position.h:

solving/ply.h:

pylang.h:

solving/ply.h:

stipulation/stipulation.h:

stipulation/slice.h:

stipulation/slice_type.h:

stipulation/structure_traversal.h:

stipulation/traversal.h:

stipulation/goals/goals.h:

output/mode.h:

optimisations/detect_retraction.h:

pymsg.h:

pydata.h:

py.h:

stipulation/pipe.h:

stipulation/has_solution_type.h:

stipulation/temporary_hacks.h:

stipulation/branch.h:

debugging/trace.h:
conditions/republican$(OBJ_SUFFIX): conditions/republican.c conditions/republican.h \
 solving/solve.h py.h utilities/boolean.h position/position.h \
 position/board.h utilities/bitmask.h pieces/walks/vectors.h \
 utilities/boolean.h utilities/enumeration.h solving/ply.h \
 position/position.h pylang.h stipulation/stipulation.h \
 stipulation/slice.h stipulation/slice_type.h \
 stipulation/structure_traversal.h stipulation/traversal.h \
 stipulation/goals/goals.h output/mode.h pydata.h py.h pylang.h \
 stipulation/has_solution_type.h pymsg.h \
 optimisations/orthodox_mating_moves/orthodox_mating_moves_generation.h \
 optimisations/detect_retraction.h stipulation/pipe.h \
 stipulation/branch.h stipulation/battle_play/branch.h \
 stipulation/help_play/branch.h stipulation/temporary_hacks.h \
 solving/post_move_iteration.h solving/ply.h \
 solving/move_effect_journal.h solving/castling_rights.h \
 position/pieceid.h output/plaintext/language_dependant.h \
 debugging/trace.h

conditions/republican.h:

solving/solve.h:

py.h:

utilities/boolean.h:

position/position.h:

position/board.h:

utilities/bitmask.h:

pieces/walks/vectors.h:

utilities/boolean.h:

utilities/enumeration.h:

solving/ply.h:

position/position.h:

pylang.h:

stipulation/stipulation.h:

stipulation/slice.h:

stipulation/slice_type.h:

stipulation/structure_traversal.h:

stipulation/traversal.h:

stipulation/goals/goals.h:

output/mode.h:

pydata.h:

py.h:

pylang.h:

stipulation/has_solution_type.h:

pymsg.h:

optimisations/orthodox_mating_moves/orthodox_mating_moves_generation.h:

optimisations/detect_retraction.h:

stipulation/pipe.h:

stipulation/branch.h:

stipulation/battle_play/branch.h:

stipulation/help_play/branch.h:

stipulation/temporary_hacks.h:

solving/post_move_iteration.h:

solving/ply.h:

solving/move_effect_journal.h:

solving/castling_rights.h:

position/pieceid.h:

output/plaintext/language_dependant.h:

debugging/trace.h:
conditions/bgl$(OBJ_SUFFIX): conditions/bgl.c conditions/bgl.h solving/solve.h py.h \
 utilities/boolean.h position/position.h position/board.h \
 utilities/bitmask.h pieces/walks/vectors.h utilities/boolean.h \
 utilities/enumeration.h solving/ply.h position/position.h pylang.h \
 solving/move_effect_journal.h solving/castling_rights.h solving/ply.h \
 position/pieceid.h pydata.h py.h solving/observation.h \
 stipulation/slice_type.h solving/move_generator.h \
 stipulation/stipulation.h stipulation/slice.h \
 stipulation/structure_traversal.h stipulation/traversal.h \
 stipulation/goals/goals.h output/mode.h stipulation/pipe.h \
 stipulation/branch.h stipulation/has_solution_type.h stipulation/move.h \
 debugging/trace.h

conditions/bgl.h:

solving/solve.h:

py.h:

utilities/boolean.h:

position/position.h:

position/board.h:

utilities/bitmask.h:

pieces/walks/vectors.h:

utilities/boolean.h:

utilities/enumeration.h:

solving/ply.h:

position/position.h:

pylang.h:

solving/move_effect_journal.h:

solving/castling_rights.h:

solving/ply.h:

position/pieceid.h:

pydata.h:

py.h:

solving/observation.h:

stipulation/slice_type.h:

solving/move_generator.h:

stipulation/stipulation.h:

stipulation/slice.h:

stipulation/structure_traversal.h:

stipulation/traversal.h:

stipulation/goals/goals.h:

output/mode.h:

stipulation/pipe.h:

stipulation/branch.h:

stipulation/has_solution_type.h:

stipulation/move.h:

debugging/trace.h:
conditions/check_zigzag$(OBJ_SUFFIX): conditions/check_zigzag.c \
 conditions/check_zigzag.h py.h utilities/boolean.h position/position.h \
 position/board.h utilities/bitmask.h pieces/walks/vectors.h \
 utilities/boolean.h utilities/enumeration.h solving/ply.h \
 position/position.h pylang.h stipulation/if_then_else.h \
 stipulation/structure_traversal.h stipulation/slice.h \
 stipulation/slice_type.h stipulation/traversal.h solving/solve.h \
 stipulation/branch.h stipulation/dummy_move.h stipulation/move_played.h \
 stipulation/proxy.h stipulation/pipe.h stipulation/battle_play/branch.h \
 stipulation/stipulation.h stipulation/goals/goals.h output/mode.h \
 stipulation/help_play/branch.h stipulation/boolean/true.h \
 stipulation/has_solution_type.h stipulation/goals/check/reached_tester.h \
 debugging/trace.h

conditions/check_zigzag.h:

py.h:

utilities/boolean.h:

position/position.h:

position/board.h:

utilities/bitmask.h:

pieces/walks/vectors.h:

utilities/boolean.h:

utilities/enumeration.h:

solving/ply.h:

position/position.h:

pylang.h:

stipulation/if_then_else.h:

stipulation/structure_traversal.h:

stipulation/slice.h:

stipulation/slice_type.h:

stipulation/traversal.h:

solving/solve.h:

stipulation/branch.h:

stipulation/dummy_move.h:

stipulation/move_played.h:

stipulation/proxy.h:

stipulation/pipe.h:

stipulation/battle_play/branch.h:

stipulation/stipulation.h:

stipulation/goals/goals.h:

output/mode.h:

stipulation/help_play/branch.h:

stipulation/boolean/true.h:

stipulation/has_solution_type.h:

stipulation/goals/check/reached_tester.h:

debugging/trace.h:
conditions/blackchecks$(OBJ_SUFFIX): conditions/blackchecks.c \
 conditions/blackchecks.h solving/solve.h py.h utilities/boolean.h \
 position/position.h position/board.h utilities/bitmask.h \
 pieces/walks/vectors.h utilities/boolean.h utilities/enumeration.h \
 solving/ply.h position/position.h pylang.h solving/move_generator.h \
 solving/ply.h stipulation/slice_type.h solving/move_effect_journal.h \
 solving/castling_rights.h position/pieceid.h solving/check.h \
 stipulation/stipulation.h stipulation/slice.h \
 stipulation/structure_traversal.h stipulation/traversal.h \
 stipulation/goals/goals.h output/mode.h stipulation/has_solution_type.h \
 stipulation/proxy.h stipulation/pipe.h stipulation/fork.h \
 stipulation/branch.h stipulation/battle_play/branch.h \
 stipulation/help_play/branch.h debugging/trace.h pydata.h py.h

conditions/blackchecks.h:

solving/solve.h:

py.h:

utilities/boolean.h:

position/position.h:

position/board.h:

utilities/bitmask.h:

pieces/walks/vectors.h:

utilities/boolean.h:

utilities/enumeration.h:

solving/ply.h:

position/position.h:

pylang.h:

solving/move_generator.h:

solving/ply.h:

stipulation/slice_type.h:

solving/move_effect_journal.h:

solving/castling_rights.h:

position/pieceid.h:

solving/check.h:

stipulation/stipulation.h:

stipulation/slice.h:

stipulation/structure_traversal.h:

stipulation/traversal.h:

stipulation/goals/goals.h:

output/mode.h:

stipulation/has_solution_type.h:

stipulation/proxy.h:

stipulation/pipe.h:

stipulation/fork.h:

stipulation/branch.h:

stipulation/battle_play/branch.h:

stipulation/help_play/branch.h:

debugging/trace.h:

pydata.h:

py.h:
conditions/extinction$(OBJ_SUFFIX): conditions/extinction.c conditions/extinction.h \
 solving/solve.h py.h utilities/boolean.h position/position.h \
 position/board.h utilities/bitmask.h pieces/walks/vectors.h \
 utilities/boolean.h utilities/enumeration.h solving/ply.h \
 position/position.h pylang.h pydata.h py.h solving/check.h \
 stipulation/stipulation.h stipulation/slice.h stipulation/slice_type.h \
 stipulation/structure_traversal.h stipulation/traversal.h \
 stipulation/goals/goals.h output/mode.h solving/observation.h \
 solving/ply.h solving/move_generator.h stipulation/has_solution_type.h \
 stipulation/move.h debugging/trace.h pyproc.h pieces/walks/vectors.h \
 stipulation/goals/goals.h

conditions/extinction.h:

solving/solve.h:

py.h:

utilities/boolean.h:

position/position.h:

position/board.h:

utilities/bitmask.h:

pieces/walks/vectors.h:

utilities/boolean.h:

utilities/enumeration.h:

solving/ply.h:

position/position.h:

pylang.h:

pydata.h:

py.h:

solving/check.h:

stipulation/stipulation.h:

stipulation/slice.h:

stipulation/slice_type.h:

stipulation/structure_traversal.h:

stipulation/traversal.h:

stipulation/goals/goals.h:

output/mode.h:

solving/observation.h:

solving/ply.h:

solving/move_generator.h:

stipulation/has_solution_type.h:

stipulation/move.h:

debugging/trace.h:

pyproc.h:

pieces/walks/vectors.h:

stipulation/goals/goals.h:
conditions/patience$(OBJ_SUFFIX): conditions/patience.c conditions/patience.h \
 solving/solve.h py.h utilities/boolean.h position/position.h \
 position/board.h utilities/bitmask.h pieces/walks/vectors.h \
 utilities/boolean.h utilities/enumeration.h solving/ply.h \
 position/position.h pylang.h pydata.h py.h solving/castling.h \
 stipulation/slice_type.h solving/castling_rights.h \
 solving/move_effect_journal.h solving/ply.h position/pieceid.h \
 stipulation/stipulation.h stipulation/slice.h \
 stipulation/structure_traversal.h stipulation/traversal.h \
 stipulation/goals/goals.h output/mode.h stipulation/has_solution_type.h \
 stipulation/pipe.h stipulation/move.h debugging/trace.h

conditions/patience.h:

solving/solve.h:

py.h:

utilities/boolean.h:

position/position.h:

position/board.h:

utilities/bitmask.h:

pieces/walks/vectors.h:

utilities/boolean.h:

utilities/enumeration.h:

solving/ply.h:

position/position.h:

pylang.h:

pydata.h:

py.h:

solving/castling.h:

stipulation/slice_type.h:

solving/castling_rights.h:

solving/move_effect_journal.h:

solving/ply.h:

position/pieceid.h:

stipulation/stipulation.h:

stipulation/slice.h:

stipulation/structure_traversal.h:

stipulation/traversal.h:

stipulation/goals/goals.h:

output/mode.h:

stipulation/has_solution_type.h:

stipulation/pipe.h:

stipulation/move.h:

debugging/trace.h:
conditions/madrasi$(OBJ_SUFFIX): conditions/madrasi.c conditions/madrasi.h \
 utilities/boolean.h py.h utilities/boolean.h position/position.h \
 position/board.h utilities/bitmask.h pieces/walks/vectors.h \
 utilities/enumeration.h solving/ply.h position/position.h pylang.h \
 pydata.h py.h solving/move_generator.h solving/solve.h solving/ply.h \
 stipulation/slice_type.h solving/observation.h \
 solving/find_square_observer_tracking_back_from_target.h \
 stipulation/stipulation.h stipulation/slice.h \
 stipulation/structure_traversal.h stipulation/traversal.h \
 stipulation/goals/goals.h output/mode.h pyproc.h pieces/walks/vectors.h \
 stipulation/goals/goals.h debugging/trace.h

conditions/madrasi.h:

utilities/boolean.h:

py.h:

utilities/boolean.h:

position/position.h:

position/board.h:

utilities/bitmask.h:

pieces/walks/vectors.h:

utilities/enumeration.h:

solving/ply.h:

position/position.h:

pylang.h:

pydata.h:

py.h:

solving/move_generator.h:

solving/solve.h:

solving/ply.h:

stipulation/slice_type.h:

solving/observation.h:

solving/find_square_observer_tracking_back_from_target.h:

stipulation/stipulation.h:

stipulation/slice.h:

stipulation/structure_traversal.h:

stipulation/traversal.h:

stipulation/goals/goals.h:

output/mode.h:

pyproc.h:

pieces/walks/vectors.h:

stipulation/goals/goals.h:

debugging/trace.h:
conditions/isardam$(OBJ_SUFFIX): conditions/isardam.c conditions/isardam.h \
 solving/solve.h py.h utilities/boolean.h position/position.h \
 position/board.h utilities/bitmask.h pieces/walks/vectors.h \
 utilities/boolean.h utilities/enumeration.h solving/ply.h \
 position/position.h pylang.h pydata.h py.h stipulation/stipulation.h \
 stipulation/slice.h stipulation/slice_type.h \
 stipulation/structure_traversal.h stipulation/traversal.h \
 stipulation/goals/goals.h output/mode.h stipulation/has_solution_type.h \
 stipulation/pipe.h stipulation/move.h stipulation/temporary_hacks.h \
 conditions/madrasi.h solving/observation.h solving/ply.h \
 debugging/trace.h

conditions/isardam.h:

solving/solve.h:

py.h:

utilities/boolean.h:

position/position.h:

position/board.h:

utilities/bitmask.h:

pieces/walks/vectors.h:

utilities/boolean.h:

utilities/enumeration.h:

solving/ply.h:

position/position.h:

pylang.h:

pydata.h:

py.h:

stipulation/stipulation.h:

stipulation/slice.h:

stipulation/slice_type.h:

stipulation/structure_traversal.h:

stipulation/traversal.h:

stipulation/goals/goals.h:

output/mode.h:

stipulation/has_solution_type.h:

stipulation/pipe.h:

stipulation/move.h:

stipulation/temporary_hacks.h:

conditions/madrasi.h:

solving/observation.h:

solving/ply.h:

debugging/trace.h:
conditions/disparate$(OBJ_SUFFIX): conditions/disparate.c conditions/disparate.h \
 utilities/boolean.h py.h utilities/boolean.h position/position.h \
 position/board.h utilities/bitmask.h pieces/walks/vectors.h \
 utilities/enumeration.h solving/ply.h position/position.h pylang.h \
 solving/move_generator.h solving/solve.h solving/ply.h \
 stipulation/slice_type.h solving/observation.h \
 solving/move_effect_journal.h solving/castling_rights.h \
 position/pieceid.h stipulation/stipulation.h stipulation/slice.h \
 stipulation/structure_traversal.h stipulation/traversal.h \
 stipulation/goals/goals.h output/mode.h debugging/trace.h pydata.h py.h

conditions/disparate.h:

utilities/boolean.h:

py.h:

utilities/boolean.h:

position/position.h:

position/board.h:

utilities/bitmask.h:

pieces/walks/vectors.h:

utilities/enumeration.h:

solving/ply.h:

position/position.h:

pylang.h:

solving/move_generator.h:

solving/solve.h:

solving/ply.h:

stipulation/slice_type.h:

solving/observation.h:

solving/move_effect_journal.h:

solving/castling_rights.h:

position/pieceid.h:

stipulation/stipulation.h:

stipulation/slice.h:

stipulation/structure_traversal.h:

stipulation/traversal.h:

stipulation/goals/goals.h:

output/mode.h:

debugging/trace.h:

pydata.h:

py.h:
conditions/eiffel$(OBJ_SUFFIX): conditions/eiffel.c conditions/eiffel.h \
 utilities/boolean.h py.h utilities/boolean.h position/position.h \
 position/board.h utilities/bitmask.h pieces/walks/vectors.h \
 utilities/enumeration.h solving/ply.h position/position.h pylang.h \
 solving/move_generator.h solving/solve.h solving/ply.h \
 stipulation/slice_type.h solving/observation.h \
 solving/find_square_observer_tracking_back_from_target.h \
 stipulation/stipulation.h stipulation/slice.h \
 stipulation/structure_traversal.h stipulation/traversal.h \
 stipulation/goals/goals.h output/mode.h pydata.h py.h pyproc.h \
 pieces/walks/vectors.h stipulation/goals/goals.h debugging/trace.h

conditions/eiffel.h:

utilities/boolean.h:

py.h:

utilities/boolean.h:

position/position.h:

position/board.h:

utilities/bitmask.h:

pieces/walks/vectors.h:

utilities/enumeration.h:

solving/ply.h:

position/position.h:

pylang.h:

solving/move_generator.h:

solving/solve.h:

solving/ply.h:

stipulation/slice_type.h:

solving/observation.h:

solving/find_square_observer_tracking_back_from_target.h:

stipulation/stipulation.h:

stipulation/slice.h:

stipulation/structure_traversal.h:

stipulation/traversal.h:

stipulation/goals/goals.h:

output/mode.h:

pydata.h:

py.h:

pyproc.h:

pieces/walks/vectors.h:

stipulation/goals/goals.h:

debugging/trace.h:
conditions/sat$(OBJ_SUFFIX): conditions/sat.c conditions/sat.h solving/solve.h py.h \
 utilities/boolean.h position/position.h position/board.h \
 utilities/bitmask.h pieces/walks/vectors.h utilities/boolean.h \
 utilities/enumeration.h solving/ply.h position/position.h pylang.h \
 solving/move_effect_journal.h solving/castling_rights.h solving/ply.h \
 position/pieceid.h pydata.h py.h stipulation/has_solution_type.h \
 stipulation/stipulation.h stipulation/slice.h stipulation/slice_type.h \
 stipulation/structure_traversal.h stipulation/traversal.h \
 stipulation/goals/goals.h output/mode.h stipulation/pipe.h \
 stipulation/branch.h stipulation/move.h stipulation/temporary_hacks.h \
 solving/legal_move_counter.h solving/check.h debugging/trace.h

conditions/sat.h:

solving/solve.h:

py.h:

utilities/boolean.h:

position/position.h:

position/board.h:

utilities/bitmask.h:

pieces/walks/vectors.h:

utilities/boolean.h:

utilities/enumeration.h:

solving/ply.h:

position/position.h:

pylang.h:

solving/move_effect_journal.h:

solving/castling_rights.h:

solving/ply.h:

position/pieceid.h:

pydata.h:

py.h:

stipulation/has_solution_type.h:

stipulation/stipulation.h:

stipulation/slice.h:

stipulation/slice_type.h:

stipulation/structure_traversal.h:

stipulation/traversal.h:

stipulation/goals/goals.h:

output/mode.h:

stipulation/pipe.h:

stipulation/branch.h:

stipulation/move.h:

stipulation/temporary_hacks.h:

solving/legal_move_counter.h:

solving/check.h:

debugging/trace.h:
conditions/masand$(OBJ_SUFFIX): conditions/masand.c conditions/masand.h \
 solving/solve.h py.h utilities/boolean.h position/position.h \
 position/board.h utilities/bitmask.h pieces/walks/vectors.h \
 utilities/boolean.h utilities/enumeration.h solving/ply.h \
 position/position.h pylang.h pieces/attributes/neutral/neutral.h \
 solving/move_effect_journal.h solving/castling_rights.h solving/ply.h \
 position/pieceid.h solving/observation.h stipulation/slice_type.h \
 solving/check.h stipulation/stipulation.h stipulation/slice.h \
 stipulation/structure_traversal.h stipulation/traversal.h \
 stipulation/goals/goals.h output/mode.h solving/move_generator.h \
 stipulation/has_solution_type.h stipulation/move.h debugging/trace.h \
 pydata.h py.h pyproc.h pieces/walks/vectors.h stipulation/goals/goals.h

conditions/masand.h:

solving/solve.h:

py.h:

utilities/boolean.h:

position/position.h:

position/board.h:

utilities/bitmask.h:

pieces/walks/vectors.h:

utilities/boolean.h:

utilities/enumeration.h:

solving/ply.h:

position/position.h:

pylang.h:

pieces/attributes/neutral/neutral.h:

solving/move_effect_journal.h:

solving/castling_rights.h:

solving/ply.h:

position/pieceid.h:

solving/observation.h:

stipulation/slice_type.h:

solving/check.h:

stipulation/stipulation.h:

stipulation/slice.h:

stipulation/structure_traversal.h:

stipulation/traversal.h:

stipulation/goals/goals.h:

output/mode.h:

solving/move_generator.h:

stipulation/has_solution_type.h:

stipulation/move.h:

debugging/trace.h:

pydata.h:

py.h:

pyproc.h:

pieces/walks/vectors.h:

stipulation/goals/goals.h:
conditions/dynasty$(OBJ_SUFFIX): conditions/dynasty.c conditions/dynasty.h \
 solving/solve.h py.h utilities/boolean.h position/position.h \
 position/board.h utilities/bitmask.h pieces/walks/vectors.h \
 utilities/boolean.h utilities/enumeration.h solving/ply.h \
 position/position.h pylang.h pydata.h py.h \
 stipulation/has_solution_type.h stipulation/stipulation.h \
 stipulation/slice.h stipulation/slice_type.h \
 stipulation/structure_traversal.h stipulation/traversal.h \
 stipulation/goals/goals.h output/mode.h stipulation/move.h \
 solving/castling.h solving/castling_rights.h \
 solving/move_effect_journal.h solving/ply.h position/pieceid.h \
 debugging/trace.h

conditions/dynasty.h:

solving/solve.h:

py.h:

utilities/boolean.h:

position/position.h:

position/board.h:

utilities/bitmask.h:

pieces/walks/vectors.h:

utilities/boolean.h:

utilities/enumeration.h:

solving/ply.h:

position/position.h:

pylang.h:

pydata.h:

py.h:

stipulation/has_solution_type.h:

stipulation/stipulation.h:

stipulation/slice.h:

stipulation/slice_type.h:

stipulation/structure_traversal.h:

stipulation/traversal.h:

stipulation/goals/goals.h:

output/mode.h:

stipulation/move.h:

solving/castling.h:

solving/castling_rights.h:

solving/move_effect_journal.h:

solving/ply.h:

position/pieceid.h:

debugging/trace.h:
conditions/oscillating_kings$(OBJ_SUFFIX): conditions/oscillating_kings.c \
 conditions/oscillating_kings.h solving/solve.h py.h utilities/boolean.h \
 position/position.h position/board.h utilities/bitmask.h \
 pieces/walks/vectors.h utilities/boolean.h utilities/enumeration.h \
 solving/ply.h position/position.h pylang.h pydata.h py.h \
 stipulation/has_solution_type.h stipulation/stipulation.h \
 stipulation/slice.h stipulation/slice_type.h \
 stipulation/structure_traversal.h stipulation/traversal.h \
 stipulation/goals/goals.h output/mode.h stipulation/pipe.h \
 stipulation/branch.h stipulation/battle_play/branch.h \
 stipulation/help_play/branch.h solving/move_effect_journal.h \
 solving/castling_rights.h solving/ply.h position/pieceid.h \
 solving/check.h debugging/trace.h

conditions/oscillating_kings.h:

solving/solve.h:

py.h:

utilities/boolean.h:

position/position.h:

position/board.h:

utilities/bitmask.h:

pieces/walks/vectors.h:

utilities/boolean.h:

utilities/enumeration.h:

solving/ply.h:

position/position.h:

pylang.h:

pydata.h:

py.h:

stipulation/has_solution_type.h:

stipulation/stipulation.h:

stipulation/slice.h:

stipulation/slice_type.h:

stipulation/structure_traversal.h:

stipulation/traversal.h:

stipulation/goals/goals.h:

output/mode.h:

stipulation/pipe.h:

stipulation/branch.h:

stipulation/battle_play/branch.h:

stipulation/help_play/branch.h:

solving/move_effect_journal.h:

solving/castling_rights.h:

solving/ply.h:

position/pieceid.h:

solving/check.h:

debugging/trace.h:
conditions/messigny$(OBJ_SUFFIX): conditions/messigny.c conditions/messigny.h \
 solving/solve.h py.h utilities/boolean.h position/position.h \
 position/board.h utilities/bitmask.h pieces/walks/vectors.h \
 utilities/boolean.h utilities/enumeration.h solving/ply.h \
 position/position.h pylang.h pydata.h py.h solving/castling.h \
 stipulation/slice_type.h solving/castling_rights.h \
 solving/move_effect_journal.h solving/ply.h position/pieceid.h \
 solving/move_generator.h stipulation/stipulation.h stipulation/slice.h \
 stipulation/structure_traversal.h stipulation/traversal.h \
 stipulation/goals/goals.h output/mode.h stipulation/pipe.h \
 stipulation/branch.h debugging/trace.h

conditions/messigny.h:

solving/solve.h:

py.h:

utilities/boolean.h:

position/position.h:

position/board.h:

utilities/bitmask.h:

pieces/walks/vectors.h:

utilities/boolean.h:

utilities/enumeration.h:

solving/ply.h:

position/position.h:

pylang.h:

pydata.h:

py.h:

solving/castling.h:

stipulation/slice_type.h:

solving/castling_rights.h:

solving/move_effect_journal.h:

solving/ply.h:

position/pieceid.h:

solving/move_generator.h:

stipulation/stipulation.h:

stipulation/slice.h:

stipulation/structure_traversal.h:

stipulation/traversal.h:

stipulation/goals/goals.h:

output/mode.h:

stipulation/pipe.h:

stipulation/branch.h:

debugging/trace.h:
conditions/actuated_revolving_centre$(OBJ_SUFFIX): \
 conditions/actuated_revolving_centre.c \
 conditions/actuated_revolving_centre.h solving/solve.h py.h \
 utilities/boolean.h position/position.h position/board.h \
 utilities/bitmask.h pieces/walks/vectors.h utilities/boolean.h \
 utilities/enumeration.h solving/ply.h position/position.h pylang.h \
 solving/move_effect_journal.h solving/castling_rights.h solving/ply.h \
 position/pieceid.h solving/move_generator.h stipulation/slice_type.h \
 stipulation/stipulation.h stipulation/slice.h \
 stipulation/structure_traversal.h stipulation/traversal.h \
 stipulation/goals/goals.h output/mode.h stipulation/has_solution_type.h \
 stipulation/move.h debugging/trace.h pydata.h py.h

conditions/actuated_revolving_centre.h:

solving/solve.h:

py.h:

utilities/boolean.h:

position/position.h:

position/board.h:

utilities/bitmask.h:

pieces/walks/vectors.h:

utilities/boolean.h:

utilities/enumeration.h:

solving/ply.h:

position/position.h:

pylang.h:

solving/move_effect_journal.h:

solving/castling_rights.h:

solving/ply.h:

position/pieceid.h:

solving/move_generator.h:

stipulation/slice_type.h:

stipulation/stipulation.h:

stipulation/slice.h:

stipulation/structure_traversal.h:

stipulation/traversal.h:

stipulation/goals/goals.h:

output/mode.h:

stipulation/has_solution_type.h:

stipulation/move.h:

debugging/trace.h:

pydata.h:

py.h:
conditions/actuated_revolving_board$(OBJ_SUFFIX): \
 conditions/actuated_revolving_board.c \
 conditions/actuated_revolving_board.h solving/solve.h py.h \
 utilities/boolean.h position/position.h position/board.h \
 utilities/bitmask.h pieces/walks/vectors.h utilities/boolean.h \
 utilities/enumeration.h solving/ply.h position/position.h pylang.h \
 pydata.h py.h stipulation/stipulation.h stipulation/slice.h \
 stipulation/slice_type.h stipulation/structure_traversal.h \
 stipulation/traversal.h stipulation/goals/goals.h output/mode.h \
 stipulation/has_solution_type.h stipulation/move.h \
 solving/move_effect_journal.h solving/castling_rights.h solving/ply.h \
 position/pieceid.h debugging/trace.h

conditions/actuated_revolving_board.h:

solving/solve.h:

py.h:

utilities/boolean.h:

position/position.h:

position/board.h:

utilities/bitmask.h:

pieces/walks/vectors.h:

utilities/boolean.h:

utilities/enumeration.h:

solving/ply.h:

position/position.h:

pylang.h:

pydata.h:

py.h:

stipulation/stipulation.h:

stipulation/slice.h:

stipulation/slice_type.h:

stipulation/structure_traversal.h:

stipulation/traversal.h:

stipulation/goals/goals.h:

output/mode.h:

stipulation/has_solution_type.h:

stipulation/move.h:

solving/move_effect_journal.h:

solving/castling_rights.h:

solving/ply.h:

position/pieceid.h:

debugging/trace.h:
conditions/sentinelles$(OBJ_SUFFIX): conditions/sentinelles.c \
 conditions/sentinelles.h solving/solve.h py.h utilities/boolean.h \
 position/position.h position/board.h utilities/bitmask.h \
 pieces/walks/vectors.h utilities/boolean.h utilities/enumeration.h \
 solving/ply.h position/position.h pylang.h \
 pieces/attributes/neutral/neutral.h pieces/walks/classification.h \
 stipulation/stipulation.h stipulation/slice.h stipulation/slice_type.h \
 stipulation/structure_traversal.h stipulation/traversal.h \
 stipulation/goals/goals.h output/mode.h stipulation/move.h \
 stipulation/has_solution_type.h solving/move_effect_journal.h \
 solving/castling_rights.h solving/ply.h position/pieceid.h \
 debugging/trace.h pydata.h py.h

conditions/sentinelles.h:

solving/solve.h:

py.h:

utilities/boolean.h:

position/position.h:

position/board.h:

utilities/bitmask.h:

pieces/walks/vectors.h:

utilities/boolean.h:

utilities/enumeration.h:

solving/ply.h:

position/position.h:

pylang.h:

pieces/attributes/neutral/neutral.h:

pieces/walks/classification.h:

stipulation/stipulation.h:

stipulation/slice.h:

stipulation/slice_type.h:

stipulation/structure_traversal.h:

stipulation/traversal.h:

stipulation/goals/goals.h:

output/mode.h:

stipulation/move.h:

stipulation/has_solution_type.h:

solving/move_effect_journal.h:

solving/castling_rights.h:

solving/ply.h:

position/pieceid.h:

debugging/trace.h:

pydata.h:

py.h:
conditions/duellists$(OBJ_SUFFIX): conditions/duellists.c conditions/duellists.h \
 solving/solve.h py.h utilities/boolean.h position/position.h \
 position/board.h utilities/bitmask.h pieces/walks/vectors.h \
 utilities/boolean.h utilities/enumeration.h solving/ply.h \
 position/position.h pylang.h solving/move_effect_journal.h \
 solving/castling_rights.h solving/ply.h position/pieceid.h \
 solving/move_generator.h stipulation/slice_type.h \
 stipulation/has_solution_type.h stipulation/stipulation.h \
 stipulation/slice.h stipulation/structure_traversal.h \
 stipulation/traversal.h stipulation/goals/goals.h output/mode.h \
 stipulation/move.h debugging/trace.h pydata.h py.h

conditions/duellists.h:

solving/solve.h:

py.h:

utilities/boolean.h:

position/position.h:

position/board.h:

utilities/bitmask.h:

pieces/walks/vectors.h:

utilities/boolean.h:

utilities/enumeration.h:

solving/ply.h:

position/position.h:

pylang.h:

solving/move_effect_journal.h:

solving/castling_rights.h:

solving/ply.h:

position/pieceid.h:

solving/move_generator.h:

stipulation/slice_type.h:

stipulation/has_solution_type.h:

stipulation/stipulation.h:

stipulation/slice.h:

stipulation/structure_traversal.h:

stipulation/traversal.h:

stipulation/goals/goals.h:

output/mode.h:

stipulation/move.h:

debugging/trace.h:

pydata.h:

py.h:
conditions/haunted_chess$(OBJ_SUFFIX): conditions/haunted_chess.c \
 conditions/haunted_chess.h solving/solve.h py.h utilities/boolean.h \
 position/position.h position/board.h utilities/bitmask.h \
 pieces/walks/vectors.h utilities/boolean.h utilities/enumeration.h \
 solving/ply.h position/position.h pylang.h solving/move_effect_journal.h \
 solving/castling_rights.h solving/ply.h position/pieceid.h pydata.h py.h \
 stipulation/stipulation.h stipulation/slice.h stipulation/slice_type.h \
 stipulation/structure_traversal.h stipulation/traversal.h \
 stipulation/goals/goals.h output/mode.h stipulation/pipe.h \
 stipulation/has_solution_type.h stipulation/move.h \
 solving/move_generator.h debugging/trace.h

conditions/haunted_chess.h:

solving/solve.h:

py.h:

utilities/boolean.h:

position/position.h:

position/board.h:

utilities/bitmask.h:

pieces/walks/vectors.h:

utilities/boolean.h:

utilities/enumeration.h:

solving/ply.h:

position/position.h:

pylang.h:

solving/move_effect_journal.h:

solving/castling_rights.h:

solving/ply.h:

position/pieceid.h:

pydata.h:

py.h:

stipulation/stipulation.h:

stipulation/slice.h:

stipulation/slice_type.h:

stipulation/structure_traversal.h:

stipulation/traversal.h:

stipulation/goals/goals.h:

output/mode.h:

stipulation/pipe.h:

stipulation/has_solution_type.h:

stipulation/move.h:

solving/move_generator.h:

debugging/trace.h:
conditions/ghost_chess$(OBJ_SUFFIX): conditions/ghost_chess.c \
 conditions/ghost_chess.h solving/solve.h py.h utilities/boolean.h \
 position/position.h position/board.h utilities/bitmask.h \
 pieces/walks/vectors.h utilities/boolean.h utilities/enumeration.h \
 solving/ply.h position/position.h pylang.h pydata.h py.h \
 stipulation/stipulation.h stipulation/slice.h stipulation/slice_type.h \
 stipulation/structure_traversal.h stipulation/traversal.h \
 stipulation/goals/goals.h output/mode.h stipulation/pipe.h \
 stipulation/has_solution_type.h stipulation/move.h \
 solving/move_effect_journal.h solving/castling_rights.h solving/ply.h \
 position/pieceid.h conditions/haunted_chess.h debugging/trace.h

conditions/ghost_chess.h:

solving/solve.h:

py.h:

utilities/boolean.h:

position/position.h:

position/board.h:

utilities/bitmask.h:

pieces/walks/vectors.h:

utilities/boolean.h:

utilities/enumeration.h:

solving/ply.h:

position/position.h:

pylang.h:

pydata.h:

py.h:

stipulation/stipulation.h:

stipulation/slice.h:

stipulation/slice_type.h:

stipulation/structure_traversal.h:

stipulation/traversal.h:

stipulation/goals/goals.h:

output/mode.h:

stipulation/pipe.h:

stipulation/has_solution_type.h:

stipulation/move.h:

solving/move_effect_journal.h:

solving/castling_rights.h:

solving/ply.h:

position/pieceid.h:

conditions/haunted_chess.h:

debugging/trace.h:
conditions/kobul$(OBJ_SUFFIX): conditions/kobul.c conditions/kobul.h solving/solve.h \
 py.h utilities/boolean.h position/position.h position/board.h \
 utilities/bitmask.h pieces/walks/vectors.h utilities/boolean.h \
 utilities/enumeration.h solving/ply.h position/position.h pylang.h \
 pieces/walks/classification.h stipulation/stipulation.h \
 stipulation/slice.h stipulation/slice_type.h \
 stipulation/structure_traversal.h stipulation/traversal.h \
 stipulation/goals/goals.h output/mode.h stipulation/has_solution_type.h \
 stipulation/move.h solving/move_effect_journal.h \
 solving/castling_rights.h solving/ply.h position/pieceid.h \
 debugging/trace.h pydata.h py.h

conditions/kobul.h:

solving/solve.h:

py.h:

utilities/boolean.h:

position/position.h:

position/board.h:

utilities/bitmask.h:

pieces/walks/vectors.h:

utilities/boolean.h:

utilities/enumeration.h:

solving/ply.h:

position/position.h:

pylang.h:

pieces/walks/classification.h:

stipulation/stipulation.h:

stipulation/slice.h:

stipulation/slice_type.h:

stipulation/structure_traversal.h:

stipulation/traversal.h:

stipulation/goals/goals.h:

output/mode.h:

stipulation/has_solution_type.h:

stipulation/move.h:

solving/move_effect_journal.h:

solving/castling_rights.h:

solving/ply.h:

position/pieceid.h:

debugging/trace.h:

pydata.h:

py.h:
conditions/andernach$(OBJ_SUFFIX): conditions/andernach.c conditions/andernach.h \
 solving/solve.h py.h utilities/boolean.h position/position.h \
 position/board.h utilities/bitmask.h pieces/walks/vectors.h \
 utilities/boolean.h utilities/enumeration.h solving/ply.h \
 position/position.h pylang.h pydata.h py.h stipulation/pipe.h \
 stipulation/structure_traversal.h stipulation/slice.h \
 stipulation/slice_type.h stipulation/traversal.h \
 stipulation/has_solution_type.h stipulation/stipulation.h \
 stipulation/goals/goals.h output/mode.h stipulation/move.h \
 solving/move_effect_journal.h solving/castling_rights.h solving/ply.h \
 position/pieceid.h debugging/trace.h

conditions/andernach.h:

solving/solve.h:

py.h:

utilities/boolean.h:

position/position.h:

position/board.h:

utilities/bitmask.h:

pieces/walks/vectors.h:

utilities/boolean.h:

utilities/enumeration.h:

solving/ply.h:

position/position.h:

pylang.h:

pydata.h:

py.h:

stipulation/pipe.h:

stipulation/structure_traversal.h:

stipulation/slice.h:

stipulation/slice_type.h:

stipulation/traversal.h:

stipulation/has_solution_type.h:

stipulation/stipulation.h:

stipulation/goals/goals.h:

output/mode.h:

stipulation/move.h:

solving/move_effect_journal.h:

solving/castling_rights.h:

solving/ply.h:

position/pieceid.h:

debugging/trace.h:
conditions/antiandernach$(OBJ_SUFFIX): conditions/antiandernach.c \
 conditions/antiandernach.h solving/solve.h py.h utilities/boolean.h \
 position/position.h position/board.h utilities/bitmask.h \
 pieces/walks/vectors.h utilities/boolean.h utilities/enumeration.h \
 solving/ply.h position/position.h pylang.h pydata.h py.h \
 stipulation/pipe.h stipulation/structure_traversal.h stipulation/slice.h \
 stipulation/slice_type.h stipulation/traversal.h \
 stipulation/has_solution_type.h stipulation/stipulation.h \
 stipulation/goals/goals.h output/mode.h stipulation/move.h \
 solving/move_effect_journal.h solving/castling_rights.h solving/ply.h \
 position/pieceid.h conditions/andernach.h debugging/trace.h

conditions/antiandernach.h:

solving/solve.h:

py.h:

utilities/boolean.h:

position/position.h:

position/board.h:

utilities/bitmask.h:

pieces/walks/vectors.h:

utilities/boolean.h:

utilities/enumeration.h:

solving/ply.h:

position/position.h:

pylang.h:

pydata.h:

py.h:

stipulation/pipe.h:

stipulation/structure_traversal.h:

stipulation/slice.h:

stipulation/slice_type.h:

stipulation/traversal.h:

stipulation/has_solution_type.h:

stipulation/stipulation.h:

stipulation/goals/goals.h:

output/mode.h:

stipulation/move.h:

solving/move_effect_journal.h:

solving/castling_rights.h:

solving/ply.h:

position/pieceid.h:

conditions/andernach.h:

debugging/trace.h:
conditions/chameleon_pursuit$(OBJ_SUFFIX): conditions/chameleon_pursuit.c \
 conditions/chameleon_pursuit.h solving/solve.h py.h utilities/boolean.h \
 position/position.h position/board.h utilities/bitmask.h \
 pieces/walks/vectors.h utilities/boolean.h utilities/enumeration.h \
 solving/ply.h position/position.h pylang.h conditions/andernach.h \
 solving/move_effect_journal.h solving/castling_rights.h solving/ply.h \
 position/pieceid.h solving/move_generator.h stipulation/slice_type.h \
 stipulation/pipe.h stipulation/structure_traversal.h stipulation/slice.h \
 stipulation/traversal.h stipulation/has_solution_type.h \
 stipulation/stipulation.h stipulation/goals/goals.h output/mode.h \
 stipulation/move.h debugging/trace.h pydata.h py.h

conditions/chameleon_pursuit.h:

solving/solve.h:

py.h:

utilities/boolean.h:

position/position.h:

position/board.h:

utilities/bitmask.h:

pieces/walks/vectors.h:

utilities/boolean.h:

utilities/enumeration.h:

solving/ply.h:

position/position.h:

pylang.h:

conditions/andernach.h:

solving/move_effect_journal.h:

solving/castling_rights.h:

solving/ply.h:

position/pieceid.h:

solving/move_generator.h:

stipulation/slice_type.h:

stipulation/pipe.h:

stipulation/structure_traversal.h:

stipulation/slice.h:

stipulation/traversal.h:

stipulation/has_solution_type.h:

stipulation/stipulation.h:

stipulation/goals/goals.h:

output/mode.h:

stipulation/move.h:

debugging/trace.h:

pydata.h:

py.h:
conditions/norsk$(OBJ_SUFFIX): conditions/norsk.c conditions/norsk.h solving/solve.h \
 py.h utilities/boolean.h position/position.h position/board.h \
 utilities/bitmask.h pieces/walks/vectors.h utilities/boolean.h \
 utilities/enumeration.h solving/ply.h position/position.h pylang.h \
 pieces/walks/walks.h solving/moving_pawn_promotion.h solving/ply.h \
 pieces/walks/pawns/promotion.h solving/move_effect_journal.h \
 solving/castling_rights.h position/pieceid.h solving/move_generator.h \
 stipulation/slice_type.h stipulation/has_solution_type.h \
 stipulation/stipulation.h stipulation/slice.h \
 stipulation/structure_traversal.h stipulation/traversal.h \
 stipulation/goals/goals.h output/mode.h stipulation/pipe.h \
 stipulation/branch.h stipulation/move.h debugging/trace.h pydata.h py.h

conditions/norsk.h:

solving/solve.h:

py.h:

utilities/boolean.h:

position/position.h:

position/board.h:

utilities/bitmask.h:

pieces/walks/vectors.h:

utilities/boolean.h:

utilities/enumeration.h:

solving/ply.h:

position/position.h:

pylang.h:

pieces/walks/walks.h:

solving/moving_pawn_promotion.h:

solving/ply.h:

pieces/walks/pawns/promotion.h:

solving/move_effect_journal.h:

solving/castling_rights.h:

position/pieceid.h:

solving/move_generator.h:

stipulation/slice_type.h:

stipulation/has_solution_type.h:

stipulation/stipulation.h:

stipulation/slice.h:

stipulation/structure_traversal.h:

stipulation/traversal.h:

stipulation/goals/goals.h:

output/mode.h:

stipulation/pipe.h:

stipulation/branch.h:

stipulation/move.h:

debugging/trace.h:

pydata.h:

py.h:
conditions/protean$(OBJ_SUFFIX): conditions/protean.c conditions/protean.h \
 solving/solve.h py.h utilities/boolean.h position/position.h \
 position/board.h utilities/bitmask.h pieces/walks/vectors.h \
 utilities/boolean.h utilities/enumeration.h solving/ply.h \
 position/position.h pylang.h pydata.h py.h stipulation/pipe.h \
 stipulation/structure_traversal.h stipulation/slice.h \
 stipulation/slice_type.h stipulation/traversal.h \
 stipulation/has_solution_type.h stipulation/stipulation.h \
 stipulation/goals/goals.h output/mode.h stipulation/move.h \
 solving/move_effect_journal.h solving/castling_rights.h solving/ply.h \
 position/pieceid.h debugging/trace.h

conditions/protean.h:

solving/solve.h:

py.h:

utilities/boolean.h:

position/position.h:

position/board.h:

utilities/bitmask.h:

pieces/walks/vectors.h:

utilities/boolean.h:

utilities/enumeration.h:

solving/ply.h:

position/position.h:

pylang.h:

pydata.h:

py.h:

stipulation/pipe.h:

stipulation/structure_traversal.h:

stipulation/slice.h:

stipulation/slice_type.h:

stipulation/traversal.h:

stipulation/has_solution_type.h:

stipulation/stipulation.h:

stipulation/goals/goals.h:

output/mode.h:

stipulation/move.h:

solving/move_effect_journal.h:

solving/castling_rights.h:

solving/ply.h:

position/pieceid.h:

debugging/trace.h:
conditions/traitor$(OBJ_SUFFIX): conditions/traitor.c conditions/traitor.h \
 solving/solve.h py.h utilities/boolean.h position/position.h \
 position/board.h utilities/bitmask.h pieces/walks/vectors.h \
 utilities/boolean.h utilities/enumeration.h solving/ply.h \
 position/position.h pylang.h pieces/attributes/neutral/neutral.h \
 solving/move_effect_journal.h solving/castling_rights.h solving/ply.h \
 position/pieceid.h stipulation/pipe.h stipulation/structure_traversal.h \
 stipulation/slice.h stipulation/slice_type.h stipulation/traversal.h \
 stipulation/has_solution_type.h stipulation/stipulation.h \
 stipulation/goals/goals.h output/mode.h stipulation/move.h \
 debugging/trace.h pydata.h py.h

conditions/traitor.h:

solving/solve.h:

py.h:

utilities/boolean.h:

position/position.h:

position/board.h:

utilities/bitmask.h:

pieces/walks/vectors.h:

utilities/boolean.h:

utilities/enumeration.h:

solving/ply.h:

position/position.h:

pylang.h:

pieces/attributes/neutral/neutral.h:

solving/move_effect_journal.h:

solving/castling_rights.h:

solving/ply.h:

position/pieceid.h:

stipulation/pipe.h:

stipulation/structure_traversal.h:

stipulation/slice.h:

stipulation/slice_type.h:

stipulation/traversal.h:

stipulation/has_solution_type.h:

stipulation/stipulation.h:

stipulation/goals/goals.h:

output/mode.h:

stipulation/move.h:

debugging/trace.h:

pydata.h:

py.h:
conditions/volage$(OBJ_SUFFIX): conditions/volage.c conditions/volage.h \
 solving/solve.h py.h utilities/boolean.h position/position.h \
 position/board.h utilities/bitmask.h pieces/walks/vectors.h \
 utilities/boolean.h utilities/enumeration.h solving/ply.h \
 position/position.h pylang.h solving/move_effect_journal.h \
 solving/castling_rights.h solving/ply.h position/pieceid.h \
 stipulation/pipe.h stipulation/structure_traversal.h stipulation/slice.h \
 stipulation/slice_type.h stipulation/traversal.h \
 stipulation/has_solution_type.h stipulation/stipulation.h \
 stipulation/goals/goals.h output/mode.h stipulation/move.h \
 debugging/trace.h pydata.h py.h

conditions/volage.h:

solving/solve.h:

py.h:

utilities/boolean.h:

position/position.h:

position/board.h:

utilities/bitmask.h:

pieces/walks/vectors.h:

utilities/boolean.h:

utilities/enumeration.h:

solving/ply.h:

position/position.h:

pylang.h:

solving/move_effect_journal.h:

solving/castling_rights.h:

solving/ply.h:

position/pieceid.h:

stipulation/pipe.h:

stipulation/structure_traversal.h:

stipulation/slice.h:

stipulation/slice_type.h:

stipulation/traversal.h:

stipulation/has_solution_type.h:

stipulation/stipulation.h:

stipulation/goals/goals.h:

output/mode.h:

stipulation/move.h:

debugging/trace.h:

pydata.h:

py.h:
conditions/magic_square$(OBJ_SUFFIX): conditions/magic_square.c \
 conditions/magic_square.h solving/solve.h py.h utilities/boolean.h \
 position/position.h position/board.h utilities/bitmask.h \
 pieces/walks/vectors.h utilities/boolean.h utilities/enumeration.h \
 solving/ply.h position/position.h pylang.h pydata.h py.h \
 pieces/attributes/neutral/neutral.h position/pieceid.h \
 stipulation/has_solution_type.h stipulation/stipulation.h \
 stipulation/slice.h stipulation/slice_type.h \
 stipulation/structure_traversal.h stipulation/traversal.h \
 stipulation/goals/goals.h output/mode.h stipulation/move.h \
 solving/move_effect_journal.h solving/castling_rights.h solving/ply.h \
 debugging/trace.h

conditions/magic_square.h:

solving/solve.h:

py.h:

utilities/boolean.h:

position/position.h:

position/board.h:

utilities/bitmask.h:

pieces/walks/vectors.h:

utilities/boolean.h:

utilities/enumeration.h:

solving/ply.h:

position/position.h:

pylang.h:

pydata.h:

py.h:

pieces/attributes/neutral/neutral.h:

position/pieceid.h:

stipulation/has_solution_type.h:

stipulation/stipulation.h:

stipulation/slice.h:

stipulation/slice_type.h:

stipulation/structure_traversal.h:

stipulation/traversal.h:

stipulation/goals/goals.h:

output/mode.h:

stipulation/move.h:

solving/move_effect_journal.h:

solving/castling_rights.h:

solving/ply.h:

debugging/trace.h:
conditions/tibet$(OBJ_SUFFIX): conditions/tibet.c conditions/tibet.h solving/solve.h \
 py.h utilities/boolean.h position/position.h position/board.h \
 utilities/bitmask.h pieces/walks/vectors.h utilities/boolean.h \
 utilities/enumeration.h solving/ply.h position/position.h pylang.h \
 pydata.h py.h stipulation/stipulation.h stipulation/slice.h \
 stipulation/slice_type.h stipulation/structure_traversal.h \
 stipulation/traversal.h stipulation/goals/goals.h output/mode.h \
 stipulation/has_solution_type.h stipulation/move.h \
 solving/move_effect_journal.h solving/castling_rights.h solving/ply.h \
 position/pieceid.h conditions/andernach.h debugging/trace.h

conditions/tibet.h:

solving/solve.h:

py.h:

utilities/boolean.h:

position/position.h:

position/board.h:

utilities/bitmask.h:

pieces/walks/vectors.h:

utilities/boolean.h:

utilities/enumeration.h:

solving/ply.h:

position/position.h:

pylang.h:

pydata.h:

py.h:

stipulation/stipulation.h:

stipulation/slice.h:

stipulation/slice_type.h:

stipulation/structure_traversal.h:

stipulation/traversal.h:

stipulation/goals/goals.h:

output/mode.h:

stipulation/has_solution_type.h:

stipulation/move.h:

solving/move_effect_journal.h:

solving/castling_rights.h:

solving/ply.h:

position/pieceid.h:

conditions/andernach.h:

debugging/trace.h:
conditions/degradierung$(OBJ_SUFFIX): conditions/degradierung.c \
 conditions/degradierung.h solving/solve.h py.h utilities/boolean.h \
 position/position.h position/board.h utilities/bitmask.h \
 pieces/walks/vectors.h utilities/boolean.h utilities/enumeration.h \
 solving/ply.h position/position.h pylang.h pieces/walks/classification.h \
 stipulation/stipulation.h stipulation/slice.h stipulation/slice_type.h \
 stipulation/structure_traversal.h stipulation/traversal.h \
 stipulation/goals/goals.h output/mode.h stipulation/has_solution_type.h \
 stipulation/branch.h stipulation/move.h solving/move_effect_journal.h \
 solving/castling_rights.h solving/ply.h position/pieceid.h \
 debugging/trace.h pydata.h py.h

conditions/degradierung.h:

solving/solve.h:

py.h:

utilities/boolean.h:

position/position.h:

position/board.h:

utilities/bitmask.h:

pieces/walks/vectors.h:

utilities/boolean.h:

utilities/enumeration.h:

solving/ply.h:

position/position.h:

pylang.h:

pieces/walks/classification.h:

stipulation/stipulation.h:

stipulation/slice.h:

stipulation/slice_type.h:

stipulation/structure_traversal.h:

stipulation/traversal.h:

stipulation/goals/goals.h:

output/mode.h:

stipulation/has_solution_type.h:

stipulation/branch.h:

stipulation/move.h:

solving/move_effect_journal.h:

solving/castling_rights.h:

solving/ply.h:

position/pieceid.h:

debugging/trace.h:

pydata.h:

py.h:
conditions/phantom$(OBJ_SUFFIX): conditions/phantom.c conditions/phantom.h \
 solving/solve.h py.h utilities/boolean.h position/position.h \
 position/board.h utilities/bitmask.h pieces/walks/vectors.h \
 utilities/boolean.h utilities/enumeration.h solving/ply.h \
 position/position.h pylang.h solving/observation.h \
 stipulation/slice_type.h solving/ply.h pieces/walks/pawns/en_passant.h \
 solving/move_effect_journal.h solving/castling_rights.h \
 position/pieceid.h pieces/walks/classification.h \
 conditions/marscirce/marscirce.h conditions/circe/circe.h \
 solving/move_generator.h stipulation/stipulation.h stipulation/slice.h \
 stipulation/structure_traversal.h stipulation/traversal.h \
 stipulation/goals/goals.h output/mode.h stipulation/pipe.h \
 stipulation/has_solution_type.h stipulation/move.h debugging/trace.h \
 pydata.h py.h

conditions/phantom.h:

solving/solve.h:

py.h:

utilities/boolean.h:

position/position.h:

position/board.h:

utilities/bitmask.h:

pieces/walks/vectors.h:

utilities/boolean.h:

utilities/enumeration.h:

solving/ply.h:

position/position.h:

pylang.h:

solving/observation.h:

stipulation/slice_type.h:

solving/ply.h:

pieces/walks/pawns/en_passant.h:

solving/move_effect_journal.h:

solving/castling_rights.h:

position/pieceid.h:

pieces/walks/classification.h:

conditions/marscirce/marscirce.h:

conditions/circe/circe.h:

solving/move_generator.h:

stipulation/stipulation.h:

stipulation/slice.h:

stipulation/structure_traversal.h:

stipulation/traversal.h:

stipulation/goals/goals.h:

output/mode.h:

stipulation/pipe.h:

stipulation/has_solution_type.h:

stipulation/move.h:

debugging/trace.h:

pydata.h:

py.h:
conditions/line_chameleon$(OBJ_SUFFIX): conditions/line_chameleon.c \
 conditions/line_chameleon.h solving/solve.h py.h utilities/boolean.h \
 position/position.h position/board.h utilities/bitmask.h \
 pieces/walks/vectors.h utilities/boolean.h utilities/enumeration.h \
 solving/ply.h position/position.h pylang.h pieces/walks/walks.h \
 solving/move_effect_journal.h solving/castling_rights.h solving/ply.h \
 position/pieceid.h stipulation/pipe.h stipulation/structure_traversal.h \
 stipulation/slice.h stipulation/slice_type.h stipulation/traversal.h \
 stipulation/has_solution_type.h stipulation/stipulation.h \
 stipulation/goals/goals.h output/mode.h stipulation/move.h \
 debugging/trace.h pydata.h py.h

conditions/line_chameleon.h:

solving/solve.h:

py.h:

utilities/boolean.h:

position/position.h:

position/board.h:

utilities/bitmask.h:

pieces/walks/vectors.h:

utilities/boolean.h:

utilities/enumeration.h:

solving/ply.h:

position/position.h:

pylang.h:

pieces/walks/walks.h:

solving/move_effect_journal.h:

solving/castling_rights.h:

solving/ply.h:

position/pieceid.h:

stipulation/pipe.h:

stipulation/structure_traversal.h:

stipulation/slice.h:

stipulation/slice_type.h:

stipulation/traversal.h:

stipulation/has_solution_type.h:

stipulation/stipulation.h:

stipulation/goals/goals.h:

output/mode.h:

stipulation/move.h:

debugging/trace.h:

pydata.h:

py.h:
conditions/haan$(OBJ_SUFFIX): conditions/haan.c conditions/haan.h solving/solve.h \
 py.h utilities/boolean.h position/position.h position/board.h \
 utilities/bitmask.h pieces/walks/vectors.h utilities/boolean.h \
 utilities/enumeration.h solving/ply.h position/position.h pylang.h \
 pydata.h py.h stipulation/has_solution_type.h stipulation/stipulation.h \
 stipulation/slice.h stipulation/slice_type.h \
 stipulation/structure_traversal.h stipulation/traversal.h \
 stipulation/goals/goals.h output/mode.h stipulation/move.h \
 solving/move_effect_journal.h solving/castling_rights.h solving/ply.h \
 position/pieceid.h debugging/trace.h

conditions/haan.h:

solving/solve.h:

py.h:

utilities/boolean.h:

position/position.h:

position/board.h:

utilities/bitmask.h:

pieces/walks/vectors.h:

utilities/boolean.h:

utilities/enumeration.h:

solving/ply.h:

position/position.h:

pylang.h:

pydata.h:

py.h:

stipulation/has_solution_type.h:

stipulation/stipulation.h:

stipulation/slice.h:

stipulation/slice_type.h:

stipulation/structure_traversal.h:

stipulation/traversal.h:

stipulation/goals/goals.h:

output/mode.h:

stipulation/move.h:

solving/move_effect_journal.h:

solving/castling_rights.h:

solving/ply.h:

position/pieceid.h:

debugging/trace.h:
conditions/castling_chess$(OBJ_SUFFIX): conditions/castling_chess.c \
 conditions/castling_chess.h solving/solve.h py.h utilities/boolean.h \
 position/position.h position/board.h utilities/bitmask.h \
 pieces/walks/vectors.h utilities/boolean.h utilities/enumeration.h \
 solving/ply.h position/position.h pylang.h pydata.h py.h \
 stipulation/has_solution_type.h stipulation/stipulation.h \
 stipulation/slice.h stipulation/slice_type.h \
 stipulation/structure_traversal.h stipulation/traversal.h \
 stipulation/goals/goals.h output/mode.h stipulation/move.h \
 solving/castling.h solving/castling_rights.h \
 solving/move_effect_journal.h solving/ply.h position/pieceid.h \
 solving/move_generator.h solving/moving_pawn_promotion.h \
 pieces/walks/pawns/promotion.h solving/post_move_iteration.h \
 solving/check.h debugging/trace.h

conditions/castling_chess.h:

solving/solve.h:

py.h:

utilities/boolean.h:

position/position.h:

position/board.h:

utilities/bitmask.h:

pieces/walks/vectors.h:

utilities/boolean.h:

utilities/enumeration.h:

solving/ply.h:

position/position.h:

pylang.h:

pydata.h:

py.h:

stipulation/has_solution_type.h:

stipulation/stipulation.h:

stipulation/slice.h:

stipulation/slice_type.h:

stipulation/structure_traversal.h:

stipulation/traversal.h:

stipulation/goals/goals.h:

output/mode.h:

stipulation/move.h:

solving/castling.h:

solving/castling_rights.h:

solving/move_effect_journal.h:

solving/ply.h:

position/pieceid.h:

solving/move_generator.h:

solving/moving_pawn_promotion.h:

pieces/walks/pawns/promotion.h:

solving/post_move_iteration.h:

solving/check.h:

debugging/trace.h:
conditions/imitator$(OBJ_SUFFIX): conditions/imitator.c conditions/imitator.h \
 solving/solve.h py.h utilities/boolean.h position/position.h \
 position/board.h utilities/bitmask.h pieces/walks/vectors.h \
 utilities/boolean.h utilities/enumeration.h solving/ply.h \
 position/position.h pylang.h solving/move_effect_journal.h \
 solving/castling_rights.h solving/ply.h position/pieceid.h pydata.h py.h \
 pymsg.h pieces/walks/pawns/promotion.h pieces/walks/hoppers.h \
 solving/observation.h stipulation/slice_type.h solving/move_generator.h \
 pieces/walks/angle/angles.h stipulation/pipe.h \
 stipulation/structure_traversal.h stipulation/slice.h \
 stipulation/traversal.h stipulation/proxy.h stipulation/fork.h \
 stipulation/branch.h stipulation/has_solution_type.h \
 stipulation/stipulation.h stipulation/goals/goals.h output/mode.h \
 stipulation/move.h stipulation/battle_play/branch.h \
 stipulation/help_play/branch.h stipulation/temporary_hacks.h \
 solving/post_move_iteration.h conditions/castling_chess.h \
 debugging/trace.h

conditions/imitator.h:

solving/solve.h:

py.h:

utilities/boolean.h:

position/position.h:

position/board.h:

utilities/bitmask.h:

pieces/walks/vectors.h:

utilities/boolean.h:

utilities/enumeration.h:

solving/ply.h:

position/position.h:

pylang.h:

solving/move_effect_journal.h:

solving/castling_rights.h:

solving/ply.h:

position/pieceid.h:

pydata.h:

py.h:

pymsg.h:

pieces/walks/pawns/promotion.h:

pieces/walks/hoppers.h:

solving/observation.h:

stipulation/slice_type.h:

solving/move_generator.h:

pieces/walks/angle/angles.h:

stipulation/pipe.h:

stipulation/structure_traversal.h:

stipulation/slice.h:

stipulation/traversal.h:

stipulation/proxy.h:

stipulation/fork.h:

stipulation/branch.h:

stipulation/has_solution_type.h:

stipulation/stipulation.h:

stipulation/goals/goals.h:

output/mode.h:

stipulation/move.h:

stipulation/battle_play/branch.h:

stipulation/help_play/branch.h:

stipulation/temporary_hacks.h:

solving/post_move_iteration.h:

conditions/castling_chess.h:

debugging/trace.h:
conditions/football$(OBJ_SUFFIX): conditions/football.c conditions/football.h \
 solving/solve.h py.h utilities/boolean.h position/position.h \
 position/board.h utilities/bitmask.h pieces/walks/vectors.h \
 utilities/boolean.h utilities/enumeration.h solving/ply.h \
 position/position.h pylang.h solving/ply.h pieces/walks/classification.h \
 solving/moving_pawn_promotion.h pieces/walks/pawns/promotion.h \
 solving/post_move_iteration.h solving/move_effect_journal.h \
 solving/castling_rights.h position/pieceid.h stipulation/pipe.h \
 stipulation/structure_traversal.h stipulation/slice.h \
 stipulation/slice_type.h stipulation/traversal.h \
 stipulation/has_solution_type.h stipulation/stipulation.h \
 stipulation/goals/goals.h output/mode.h stipulation/move.h \
 debugging/trace.h pydata.h py.h

conditions/football.h:

solving/solve.h:

py.h:

utilities/boolean.h:

position/position.h:

position/board.h:

utilities/bitmask.h:

pieces/walks/vectors.h:

utilities/boolean.h:

utilities/enumeration.h:

solving/ply.h:

position/position.h:

pylang.h:

solving/ply.h:

pieces/walks/classification.h:

solving/moving_pawn_promotion.h:

pieces/walks/pawns/promotion.h:

solving/post_move_iteration.h:

solving/move_effect_journal.h:

solving/castling_rights.h:

position/pieceid.h:

stipulation/pipe.h:

stipulation/structure_traversal.h:

stipulation/slice.h:

stipulation/slice_type.h:

stipulation/traversal.h:

stipulation/has_solution_type.h:

stipulation/stipulation.h:

stipulation/goals/goals.h:

output/mode.h:

stipulation/move.h:

debugging/trace.h:

pydata.h:

py.h:
conditions/exchange_castling$(OBJ_SUFFIX): conditions/exchange_castling.c \
 conditions/exchange_castling.h solving/solve.h py.h utilities/boolean.h \
 position/position.h position/board.h utilities/bitmask.h \
 pieces/walks/vectors.h utilities/boolean.h utilities/enumeration.h \
 solving/ply.h position/position.h pylang.h conditions/castling_chess.h \
 pieces/walks/classification.h solving/move_generator.h solving/ply.h \
 stipulation/slice_type.h solving/castling.h solving/castling_rights.h \
 solving/move_effect_journal.h position/pieceid.h \
 stipulation/stipulation.h stipulation/slice.h \
 stipulation/structure_traversal.h stipulation/traversal.h \
 stipulation/goals/goals.h output/mode.h debugging/trace.h pydata.h py.h

conditions/exchange_castling.h:

solving/solve.h:

py.h:

utilities/boolean.h:

position/position.h:

position/board.h:

utilities/bitmask.h:

pieces/walks/vectors.h:

utilities/boolean.h:

utilities/enumeration.h:

solving/ply.h:

position/position.h:

pylang.h:

conditions/castling_chess.h:

pieces/walks/classification.h:

solving/move_generator.h:

solving/ply.h:

stipulation/slice_type.h:

solving/castling.h:

solving/castling_rights.h:

solving/move_effect_journal.h:

position/pieceid.h:

stipulation/stipulation.h:

stipulation/slice.h:

stipulation/structure_traversal.h:

stipulation/traversal.h:

stipulation/goals/goals.h:

output/mode.h:

debugging/trace.h:

pydata.h:

py.h:
conditions/mummer$(OBJ_SUFFIX): conditions/mummer.c conditions/mummer.h \
 solving/solve.h py.h utilities/boolean.h position/position.h \
 position/board.h utilities/bitmask.h pieces/walks/vectors.h \
 utilities/boolean.h utilities/enumeration.h solving/ply.h \
 position/position.h pylang.h conditions/singlebox/type3.h \
 solving/observation.h stipulation/slice_type.h solving/ply.h \
 stipulation/has_solution_type.h stipulation/stipulation.h \
 stipulation/slice.h stipulation/structure_traversal.h \
 stipulation/traversal.h stipulation/goals/goals.h output/mode.h \
 stipulation/testing_pipe.h stipulation/pipe.h stipulation/proxy.h \
 stipulation/boolean/true.h stipulation/branch.h \
 stipulation/battle_play/branch.h stipulation/help_play/branch.h \
 stipulation/temporary_hacks.h solving/post_move_iteration.h \
 solving/move_generator.h solving/move_diff_code.h debugging/trace.h \
 pyproc.h pieces/walks/vectors.h stipulation/goals/goals.h pydata.h py.h

conditions/mummer.h:

solving/solve.h:

py.h:

utilities/boolean.h:

position/position.h:

position/board.h:

utilities/bitmask.h:

pieces/walks/vectors.h:

utilities/boolean.h:

utilities/enumeration.h:

solving/ply.h:

position/position.h:

pylang.h:

conditions/singlebox/type3.h:

solving/observation.h:

stipulation/slice_type.h:

solving/ply.h:

stipulation/has_solution_type.h:

stipulation/stipulation.h:

stipulation/slice.h:

stipulation/structure_traversal.h:

stipulation/traversal.h:

stipulation/goals/goals.h:

output/mode.h:

stipulation/testing_pipe.h:

stipulation/pipe.h:

stipulation/proxy.h:

stipulation/boolean/true.h:

stipulation/branch.h:

stipulation/battle_play/branch.h:

stipulation/help_play/branch.h:

stipulation/temporary_hacks.h:

solving/post_move_iteration.h:

solving/move_generator.h:

solving/move_diff_code.h:

debugging/trace.h:

pyproc.h:

pieces/walks/vectors.h:

stipulation/goals/goals.h:

pydata.h:

py.h:
conditions/monochrome$(OBJ_SUFFIX): conditions/monochrome.c conditions/monochrome.h \
 py.h utilities/boolean.h position/position.h position/board.h \
 utilities/bitmask.h pieces/walks/vectors.h utilities/boolean.h \
 utilities/enumeration.h solving/ply.h position/position.h pylang.h \
 pydata.h py.h stipulation/stipulation.h stipulation/slice.h \
 stipulation/slice_type.h stipulation/structure_traversal.h \
 stipulation/traversal.h stipulation/goals/goals.h output/mode.h \
 stipulation/pipe.h solving/solve.h stipulation/branch.h \
 solving/move_generator.h solving/ply.h solving/observation.h \
 debugging/trace.h

conditions/monochrome.h:

py.h:

utilities/boolean.h:

position/position.h:

position/board.h:

utilities/bitmask.h:

pieces/walks/vectors.h:

utilities/boolean.h:

utilities/enumeration.h:

solving/ply.h:

position/position.h:

pylang.h:

pydata.h:

py.h:

stipulation/stipulation.h:

stipulation/slice.h:

stipulation/slice_type.h:

stipulation/structure_traversal.h:

stipulation/traversal.h:

stipulation/goals/goals.h:

output/mode.h:

stipulation/pipe.h:

solving/solve.h:

stipulation/branch.h:

solving/move_generator.h:

solving/ply.h:

solving/observation.h:

debugging/trace.h:
conditions/bichrome$(OBJ_SUFFIX): conditions/bichrome.c conditions/bichrome.h py.h \
 utilities/boolean.h position/position.h position/board.h \
 utilities/bitmask.h pieces/walks/vectors.h utilities/boolean.h \
 utilities/enumeration.h solving/ply.h position/position.h pylang.h \
 conditions/monochrome.h stipulation/stipulation.h stipulation/slice.h \
 stipulation/slice_type.h stipulation/structure_traversal.h \
 stipulation/traversal.h stipulation/goals/goals.h output/mode.h \
 stipulation/pipe.h solving/solve.h stipulation/branch.h \
 solving/move_generator.h solving/ply.h solving/observation.h \
 debugging/trace.h pydata.h py.h

conditions/bichrome.h:

py.h:

utilities/boolean.h:

position/position.h:

position/board.h:

utilities/bitmask.h:

pieces/walks/vectors.h:

utilities/boolean.h:

utilities/enumeration.h:

solving/ply.h:

position/position.h:

pylang.h:

conditions/monochrome.h:

stipulation/stipulation.h:

stipulation/slice.h:

stipulation/slice_type.h:

stipulation/structure_traversal.h:

stipulation/traversal.h:

stipulation/goals/goals.h:

output/mode.h:

stipulation/pipe.h:

solving/solve.h:

stipulation/branch.h:

solving/move_generator.h:

solving/ply.h:

solving/observation.h:

debugging/trace.h:

pydata.h:

py.h:
conditions/edgemover$(OBJ_SUFFIX): conditions/edgemover.c conditions/edgemover.h \
 py.h utilities/boolean.h position/position.h position/board.h \
 utilities/bitmask.h pieces/walks/vectors.h utilities/boolean.h \
 utilities/enumeration.h solving/ply.h position/position.h pylang.h \
 pydata.h py.h stipulation/stipulation.h stipulation/slice.h \
 stipulation/slice_type.h stipulation/structure_traversal.h \
 stipulation/traversal.h stipulation/goals/goals.h output/mode.h \
 stipulation/pipe.h solving/solve.h stipulation/branch.h \
 solving/move_generator.h solving/ply.h solving/observation.h \
 debugging/trace.h

conditions/edgemover.h:

py.h:

utilities/boolean.h:

position/position.h:

position/board.h:

utilities/bitmask.h:

pieces/walks/vectors.h:

utilities/boolean.h:

utilities/enumeration.h:

solving/ply.h:

position/position.h:

pylang.h:

pydata.h:

py.h:

stipulation/stipulation.h:

stipulation/slice.h:

stipulation/slice_type.h:

stipulation/structure_traversal.h:

stipulation/traversal.h:

stipulation/goals/goals.h:

output/mode.h:

stipulation/pipe.h:

solving/solve.h:

stipulation/branch.h:

solving/move_generator.h:

solving/ply.h:

solving/observation.h:

debugging/trace.h:
conditions/grid$(OBJ_SUFFIX): conditions/grid.c conditions/grid.h py.h \
 utilities/boolean.h position/position.h position/board.h \
 utilities/bitmask.h pieces/walks/vectors.h utilities/boolean.h \
 utilities/enumeration.h solving/ply.h position/position.h pylang.h \
 pydata.h py.h stipulation/stipulation.h stipulation/slice.h \
 stipulation/slice_type.h stipulation/structure_traversal.h \
 stipulation/traversal.h stipulation/goals/goals.h output/mode.h \
 stipulation/pipe.h solving/solve.h stipulation/branch.h \
 solving/move_generator.h solving/ply.h solving/observation.h \
 debugging/trace.h

conditions/grid.h:

py.h:

utilities/boolean.h:

position/position.h:

position/board.h:

utilities/bitmask.h:

pieces/walks/vectors.h:

utilities/boolean.h:

utilities/enumeration.h:

solving/ply.h:

position/position.h:

pylang.h:

pydata.h:

py.h:

stipulation/stipulation.h:

stipulation/slice.h:

stipulation/slice_type.h:

stipulation/structure_traversal.h:

stipulation/traversal.h:

stipulation/goals/goals.h:

output/mode.h:

stipulation/pipe.h:

solving/solve.h:

stipulation/branch.h:

solving/move_generator.h:

solving/ply.h:

solving/observation.h:

debugging/trace.h:
conditions/patrol$(OBJ_SUFFIX): conditions/patrol.c conditions/patrol.h \
 utilities/boolean.h py.h utilities/boolean.h position/position.h \
 position/board.h utilities/bitmask.h pieces/walks/vectors.h \
 utilities/enumeration.h solving/ply.h position/position.h pylang.h \
 solving/move_generator.h solving/solve.h solving/ply.h \
 stipulation/slice_type.h solving/observation.h stipulation/stipulation.h \
 stipulation/slice.h stipulation/structure_traversal.h \
 stipulation/traversal.h stipulation/goals/goals.h output/mode.h \
 stipulation/pipe.h stipulation/branch.h debugging/trace.h pydata.h py.h \
 pyproc.h pieces/walks/vectors.h stipulation/goals/goals.h

conditions/patrol.h:

utilities/boolean.h:

py.h:

utilities/boolean.h:

position/position.h:

position/board.h:

utilities/bitmask.h:

pieces/walks/vectors.h:

utilities/enumeration.h:

solving/ply.h:

position/position.h:

pylang.h:

solving/move_generator.h:

solving/solve.h:

solving/ply.h:

stipulation/slice_type.h:

solving/observation.h:

stipulation/stipulation.h:

stipulation/slice.h:

stipulation/structure_traversal.h:

stipulation/traversal.h:

stipulation/goals/goals.h:

output/mode.h:

stipulation/pipe.h:

stipulation/branch.h:

debugging/trace.h:

pydata.h:

py.h:

pyproc.h:

pieces/walks/vectors.h:

stipulation/goals/goals.h:
conditions/lortap$(OBJ_SUFFIX): conditions/lortap.c conditions/lortap.h \
 utilities/boolean.h py.h utilities/boolean.h position/position.h \
 position/board.h utilities/bitmask.h pieces/walks/vectors.h \
 utilities/enumeration.h solving/ply.h position/position.h pylang.h \
 solving/move_generator.h solving/solve.h solving/ply.h \
 stipulation/slice_type.h solving/observation.h stipulation/stipulation.h \
 stipulation/slice.h stipulation/structure_traversal.h \
 stipulation/traversal.h stipulation/goals/goals.h output/mode.h \
 stipulation/pipe.h stipulation/branch.h debugging/trace.h pydata.h py.h \
 pyproc.h pieces/walks/vectors.h stipulation/goals/goals.h

conditions/lortap.h:

utilities/boolean.h:

py.h:

utilities/boolean.h:

position/position.h:

position/board.h:

utilities/bitmask.h:

pieces/walks/vectors.h:

utilities/enumeration.h:

solving/ply.h:

position/position.h:

pylang.h:

solving/move_generator.h:

solving/solve.h:

solving/ply.h:

stipulation/slice_type.h:

solving/observation.h:

stipulation/stipulation.h:

stipulation/slice.h:

stipulation/structure_traversal.h:

stipulation/traversal.h:

stipulation/goals/goals.h:

output/mode.h:

stipulation/pipe.h:

stipulation/branch.h:

debugging/trace.h:

pydata.h:

py.h:

pyproc.h:

pieces/walks/vectors.h:

stipulation/goals/goals.h:
conditions/beamten$(OBJ_SUFFIX): conditions/beamten.c conditions/beamten.h \
 utilities/boolean.h py.h utilities/boolean.h position/position.h \
 position/board.h utilities/bitmask.h pieces/walks/vectors.h \
 utilities/enumeration.h solving/ply.h position/position.h pylang.h \
 solving/move_generator.h solving/solve.h solving/ply.h \
 stipulation/slice_type.h solving/observation.h stipulation/stipulation.h \
 stipulation/slice.h stipulation/structure_traversal.h \
 stipulation/traversal.h stipulation/goals/goals.h output/mode.h \
 debugging/trace.h pydata.h py.h pyproc.h pieces/walks/vectors.h \
 stipulation/goals/goals.h

conditions/beamten.h:

utilities/boolean.h:

py.h:

utilities/boolean.h:

position/position.h:

position/board.h:

utilities/bitmask.h:

pieces/walks/vectors.h:

utilities/enumeration.h:

solving/ply.h:

position/position.h:

pylang.h:

solving/move_generator.h:

solving/solve.h:

solving/ply.h:

stipulation/slice_type.h:

solving/observation.h:

stipulation/stipulation.h:

stipulation/slice.h:

stipulation/structure_traversal.h:

stipulation/traversal.h:

stipulation/goals/goals.h:

output/mode.h:

debugging/trace.h:

pydata.h:

py.h:

pyproc.h:

pieces/walks/vectors.h:

stipulation/goals/goals.h:
conditions/provocateurs$(OBJ_SUFFIX): conditions/provocateurs.c \
 conditions/provocateurs.h solving/solve.h py.h utilities/boolean.h \
 position/position.h position/board.h utilities/bitmask.h \
 pieces/walks/vectors.h utilities/boolean.h utilities/enumeration.h \
 solving/ply.h position/position.h pylang.h solving/move_generator.h \
 solving/ply.h stipulation/slice_type.h solving/observation.h \
 stipulation/stipulation.h stipulation/slice.h \
 stipulation/structure_traversal.h stipulation/traversal.h \
 stipulation/goals/goals.h output/mode.h stipulation/pipe.h \
 stipulation/branch.h debugging/trace.h pydata.h py.h pyproc.h \
 pieces/walks/vectors.h stipulation/goals/goals.h

conditions/provocateurs.h:

solving/solve.h:

py.h:

utilities/boolean.h:

position/position.h:

position/board.h:

utilities/bitmask.h:

pieces/walks/vectors.h:

utilities/boolean.h:

utilities/enumeration.h:

solving/ply.h:

position/position.h:

pylang.h:

solving/move_generator.h:

solving/ply.h:

stipulation/slice_type.h:

solving/observation.h:

stipulation/stipulation.h:

stipulation/slice.h:

stipulation/structure_traversal.h:

stipulation/traversal.h:

stipulation/goals/goals.h:

output/mode.h:

stipulation/pipe.h:

stipulation/branch.h:

debugging/trace.h:

pydata.h:

py.h:

pyproc.h:

pieces/walks/vectors.h:

stipulation/goals/goals.h:
conditions/central$(OBJ_SUFFIX): conditions/central.c conditions/central.h \
 utilities/boolean.h py.h utilities/boolean.h position/position.h \
 position/board.h utilities/bitmask.h pieces/walks/vectors.h \
 utilities/enumeration.h solving/ply.h position/position.h pylang.h \
 solving/move_generator.h solving/solve.h solving/ply.h \
 stipulation/slice_type.h solving/observation.h stipulation/stipulation.h \
 stipulation/slice.h stipulation/structure_traversal.h \
 stipulation/traversal.h stipulation/goals/goals.h output/mode.h \
 debugging/trace.h pydata.h py.h pyproc.h pieces/walks/vectors.h \
 stipulation/goals/goals.h

conditions/central.h:

utilities/boolean.h:

py.h:

utilities/boolean.h:

position/position.h:

position/board.h:

utilities/bitmask.h:

pieces/walks/vectors.h:

utilities/enumeration.h:

solving/ply.h:

position/position.h:

pylang.h:

solving/move_generator.h:

solving/solve.h:

solving/ply.h:

stipulation/slice_type.h:

solving/observation.h:

stipulation/stipulation.h:

stipulation/slice.h:

stipulation/structure_traversal.h:

stipulation/traversal.h:

stipulation/goals/goals.h:

output/mode.h:

debugging/trace.h:

pydata.h:

py.h:

pyproc.h:

pieces/walks/vectors.h:

stipulation/goals/goals.h:
conditions/immune$(OBJ_SUFFIX): conditions/immune.c conditions/immune.h \
 utilities/boolean.h position/board.h utilities/bitmask.h \
 position/position.h pieces/walks/vectors.h utilities/enumeration.h py.h \
 utilities/boolean.h position/position.h solving/ply.h pylang.h \
 pieces/walks/pawns/en_passant.h solving/solve.h \
 solving/move_effect_journal.h solving/castling_rights.h solving/ply.h \
 position/pieceid.h solving/observation.h stipulation/slice_type.h \
 stipulation/stipulation.h stipulation/slice.h \
 stipulation/structure_traversal.h stipulation/traversal.h \
 stipulation/goals/goals.h output/mode.h stipulation/pipe.h \
 stipulation/branch.h solving/move_generator.h debugging/trace.h pydata.h \
 py.h

conditions/immune.h:

utilities/boolean.h:

position/board.h:

utilities/bitmask.h:

position/position.h:

pieces/walks/vectors.h:

utilities/enumeration.h:

py.h:

utilities/boolean.h:

position/position.h:

solving/ply.h:

pylang.h:

pieces/walks/pawns/en_passant.h:

solving/solve.h:

solving/move_effect_journal.h:

solving/castling_rights.h:

solving/ply.h:

position/pieceid.h:

solving/observation.h:

stipulation/slice_type.h:

stipulation/stipulation.h:

stipulation/slice.h:

stipulation/structure_traversal.h:

stipulation/traversal.h:

stipulation/goals/goals.h:

output/mode.h:

stipulation/pipe.h:

stipulation/branch.h:

solving/move_generator.h:

debugging/trace.h:

pydata.h:

py.h:
conditions/woozles$(OBJ_SUFFIX): conditions/woozles.c conditions/woozles.h py.h \
 utilities/boolean.h position/position.h position/board.h \
 utilities/bitmask.h pieces/walks/vectors.h utilities/boolean.h \
 utilities/enumeration.h solving/ply.h position/position.h pylang.h \
 stipulation/stipulation.h stipulation/slice.h stipulation/slice_type.h \
 stipulation/structure_traversal.h stipulation/traversal.h \
 stipulation/goals/goals.h output/mode.h stipulation/pipe.h \
 solving/solve.h stipulation/branch.h solving/move_generator.h \
 solving/ply.h solving/observation.h \
 solving/find_square_observer_tracking_back_from_target.h \
 debugging/trace.h pyproc.h pieces/walks/vectors.h \
 stipulation/goals/goals.h pydata.h py.h

conditions/woozles.h:

py.h:

utilities/boolean.h:

position/position.h:

position/board.h:

utilities/bitmask.h:

pieces/walks/vectors.h:

utilities/boolean.h:

utilities/enumeration.h:

solving/ply.h:

position/position.h:

pylang.h:

stipulation/stipulation.h:

stipulation/slice.h:

stipulation/slice_type.h:

stipulation/structure_traversal.h:

stipulation/traversal.h:

stipulation/goals/goals.h:

output/mode.h:

stipulation/pipe.h:

solving/solve.h:

stipulation/branch.h:

solving/move_generator.h:

solving/ply.h:

solving/observation.h:

solving/find_square_observer_tracking_back_from_target.h:

debugging/trace.h:

pyproc.h:

pieces/walks/vectors.h:

stipulation/goals/goals.h:

pydata.h:

py.h:
conditions/nocapture$(OBJ_SUFFIX): conditions/nocapture.c conditions/nocapture.h \
 py.h utilities/boolean.h position/position.h position/board.h \
 utilities/bitmask.h pieces/walks/vectors.h utilities/boolean.h \
 utilities/enumeration.h solving/ply.h position/position.h pylang.h \
 pydata.h py.h stipulation/stipulation.h stipulation/slice.h \
 stipulation/slice_type.h stipulation/structure_traversal.h \
 stipulation/traversal.h stipulation/goals/goals.h output/mode.h \
 stipulation/pipe.h solving/solve.h stipulation/branch.h \
 solving/move_generator.h solving/ply.h debugging/trace.h

conditions/nocapture.h:

py.h:

utilities/boolean.h:

position/position.h:

position/board.h:

utilities/bitmask.h:

pieces/walks/vectors.h:

utilities/boolean.h:

utilities/enumeration.h:

solving/ply.h:

position/position.h:

pylang.h:

pydata.h:

py.h:

stipulation/stipulation.h:

stipulation/slice.h:

stipulation/slice_type.h:

stipulation/structure_traversal.h:

stipulation/traversal.h:

stipulation/goals/goals.h:

output/mode.h:

stipulation/pipe.h:

solving/solve.h:

stipulation/branch.h:

solving/move_generator.h:

solving/ply.h:

debugging/trace.h:
conditions/nopromotion$(OBJ_SUFFIX): conditions/nopromotion.c \
 conditions/nopromotion.h py.h utilities/boolean.h position/position.h \
 position/board.h utilities/bitmask.h pieces/walks/vectors.h \
 utilities/boolean.h utilities/enumeration.h solving/ply.h \
 position/position.h pylang.h conditions/circe/circe.h solving/solve.h \
 stipulation/slice_type.h solving/move_effect_journal.h \
 solving/castling_rights.h solving/ply.h position/pieceid.h \
 pieces/walks/pawns/promotion.h stipulation/stipulation.h \
 stipulation/slice.h stipulation/structure_traversal.h \
 stipulation/traversal.h stipulation/goals/goals.h output/mode.h \
 stipulation/has_solution_type.h stipulation/pipe.h stipulation/branch.h \
 debugging/trace.h pydata.h py.h

conditions/nopromotion.h:

py.h:

utilities/boolean.h:

position/position.h:

position/board.h:

utilities/bitmask.h:

pieces/walks/vectors.h:

utilities/boolean.h:

utilities/enumeration.h:

solving/ply.h:

position/position.h:

pylang.h:

conditions/circe/circe.h:

solving/solve.h:

stipulation/slice_type.h:

solving/move_effect_journal.h:

solving/castling_rights.h:

solving/ply.h:

position/pieceid.h:

pieces/walks/pawns/promotion.h:

stipulation/stipulation.h:

stipulation/slice.h:

stipulation/structure_traversal.h:

stipulation/traversal.h:

stipulation/goals/goals.h:

output/mode.h:

stipulation/has_solution_type.h:

stipulation/pipe.h:

stipulation/branch.h:

debugging/trace.h:

pydata.h:

py.h:
conditions/geneva$(OBJ_SUFFIX): conditions/geneva.c conditions/geneva.h \
 utilities/boolean.h py.h utilities/boolean.h position/position.h \
 position/board.h utilities/bitmask.h pieces/walks/vectors.h \
 utilities/enumeration.h solving/ply.h position/position.h pylang.h \
 conditions/circe/circe.h solving/solve.h stipulation/slice_type.h \
 solving/move_effect_journal.h solving/castling_rights.h solving/ply.h \
 position/pieceid.h pydata.h py.h stipulation/stipulation.h \
 stipulation/slice.h stipulation/structure_traversal.h \
 stipulation/traversal.h stipulation/goals/goals.h output/mode.h \
 stipulation/pipe.h stipulation/branch.h solving/move_generator.h \
 solving/observation.h debugging/trace.h

conditions/geneva.h:

utilities/boolean.h:

py.h:

utilities/boolean.h:

position/position.h:

position/board.h:

utilities/bitmask.h:

pieces/walks/vectors.h:

utilities/enumeration.h:

solving/ply.h:

position/position.h:

pylang.h:

conditions/circe/circe.h:

solving/solve.h:

stipulation/slice_type.h:

solving/move_effect_journal.h:

solving/castling_rights.h:

solving/ply.h:

position/pieceid.h:

pydata.h:

py.h:

stipulation/stipulation.h:

stipulation/slice.h:

stipulation/structure_traversal.h:

stipulation/traversal.h:

stipulation/goals/goals.h:

output/mode.h:

stipulation/pipe.h:

stipulation/branch.h:

solving/move_generator.h:

solving/observation.h:

debugging/trace.h:
conditions/take_and_make$(OBJ_SUFFIX): conditions/take_and_make.c \
 conditions/take_and_make.h py.h utilities/boolean.h position/position.h \
 position/board.h utilities/bitmask.h pieces/walks/vectors.h \
 utilities/boolean.h utilities/enumeration.h solving/ply.h \
 position/position.h pylang.h pieces/walks/generate_moves.h \
 pieces/walks/classification.h pieces/walks/pawns/en_passant.h \
 solving/solve.h solving/move_effect_journal.h solving/castling_rights.h \
 solving/ply.h position/pieceid.h solving/observation.h \
 stipulation/slice_type.h solving/move_generator.h \
 stipulation/stipulation.h stipulation/slice.h \
 stipulation/structure_traversal.h stipulation/traversal.h \
 stipulation/goals/goals.h output/mode.h stipulation/pipe.h \
 stipulation/branch.h debugging/trace.h pydata.h py.h

conditions/take_and_make.h:

py.h:

utilities/boolean.h:

position/position.h:

position/board.h:

utilities/bitmask.h:

pieces/walks/vectors.h:

utilities/boolean.h:

utilities/enumeration.h:

solving/ply.h:

position/position.h:

pylang.h:

pieces/walks/generate_moves.h:

pieces/walks/classification.h:

pieces/walks/pawns/en_passant.h:

solving/solve.h:

solving/move_effect_journal.h:

solving/castling_rights.h:

solving/ply.h:

position/pieceid.h:

solving/observation.h:

stipulation/slice_type.h:

solving/move_generator.h:

stipulation/stipulation.h:

stipulation/slice.h:

stipulation/structure_traversal.h:

stipulation/traversal.h:

stipulation/goals/goals.h:

output/mode.h:

stipulation/pipe.h:

stipulation/branch.h:

debugging/trace.h:

pydata.h:

py.h:
conditions/ohneschach$(OBJ_SUFFIX): conditions/ohneschach.c conditions/ohneschach.h \
 solving/solve.h py.h utilities/boolean.h position/position.h \
 position/board.h utilities/bitmask.h pieces/walks/vectors.h \
 utilities/boolean.h utilities/enumeration.h solving/ply.h \
 position/position.h pylang.h solving/ply.h pydata.h py.h \
 stipulation/stipulation.h stipulation/slice.h stipulation/slice_type.h \
 stipulation/structure_traversal.h stipulation/traversal.h \
 stipulation/goals/goals.h output/mode.h stipulation/proxy.h \
 stipulation/pipe.h stipulation/conditional_pipe.h stipulation/branch.h \
 stipulation/has_solution_type.h stipulation/battle_play/branch.h \
 solving/recursion_stopper.h solving/check.h debugging/trace.h

conditions/ohneschach.h:

solving/solve.h:

py.h:

utilities/boolean.h:

position/position.h:

position/board.h:

utilities/bitmask.h:

pieces/walks/vectors.h:

utilities/boolean.h:

utilities/enumeration.h:

solving/ply.h:

position/position.h:

pylang.h:

solving/ply.h:

pydata.h:

py.h:

stipulation/stipulation.h:

stipulation/slice.h:

stipulation/slice_type.h:

stipulation/structure_traversal.h:

stipulation/traversal.h:

stipulation/goals/goals.h:

output/mode.h:

stipulation/proxy.h:

stipulation/pipe.h:

stipulation/conditional_pipe.h:

stipulation/branch.h:

stipulation/has_solution_type.h:

stipulation/battle_play/branch.h:

solving/recursion_stopper.h:

solving/check.h:

debugging/trace.h:
conditions/annan$(OBJ_SUFFIX): conditions/annan.c conditions/annan.h py.h \
 utilities/boolean.h position/position.h position/board.h \
 utilities/bitmask.h pieces/walks/vectors.h utilities/boolean.h \
 utilities/enumeration.h solving/ply.h position/position.h pylang.h \
 solving/observation.h stipulation/slice_type.h solving/ply.h \
 solving/move_generator.h solving/solve.h solving/castling.h \
 solving/castling_rights.h solving/move_effect_journal.h \
 position/pieceid.h \
 solving/find_square_observer_tracking_back_from_target.h \
 stipulation/stipulation.h stipulation/slice.h \
 stipulation/structure_traversal.h stipulation/traversal.h \
 stipulation/goals/goals.h output/mode.h stipulation/pipe.h \
 debugging/trace.h pydata.h py.h

conditions/annan.h:

py.h:

utilities/boolean.h:

position/position.h:

position/board.h:

utilities/bitmask.h:

pieces/walks/vectors.h:

utilities/boolean.h:

utilities/enumeration.h:

solving/ply.h:

position/position.h:

pylang.h:

solving/observation.h:

stipulation/slice_type.h:

solving/ply.h:

solving/move_generator.h:

solving/solve.h:

solving/castling.h:

solving/castling_rights.h:

solving/move_effect_journal.h:

position/pieceid.h:

solving/find_square_observer_tracking_back_from_target.h:

stipulation/stipulation.h:

stipulation/slice.h:

stipulation/structure_traversal.h:

stipulation/traversal.h:

stipulation/goals/goals.h:

output/mode.h:

stipulation/pipe.h:

debugging/trace.h:

pydata.h:

py.h:
conditions/shielded_kings$(OBJ_SUFFIX): conditions/shielded_kings.c \
 conditions/shielded_kings.h py.h utilities/boolean.h position/position.h \
 position/board.h utilities/bitmask.h pieces/walks/vectors.h \
 utilities/boolean.h utilities/enumeration.h solving/ply.h \
 position/position.h pylang.h solving/observation.h \
 stipulation/slice_type.h solving/ply.h solving/move_generator.h \
 solving/solve.h stipulation/stipulation.h stipulation/slice.h \
 stipulation/structure_traversal.h stipulation/traversal.h \
 stipulation/goals/goals.h output/mode.h stipulation/pipe.h \
 stipulation/branch.h debugging/trace.h pydata.h py.h pyproc.h \
 pieces/walks/vectors.h stipulation/goals/goals.h

conditions/shielded_kings.h:

py.h:

utilities/boolean.h:

position/position.h:

position/board.h:

utilities/bitmask.h:

pieces/walks/vectors.h:

utilities/boolean.h:

utilities/enumeration.h:

solving/ply.h:

position/position.h:

pylang.h:

solving/observation.h:

stipulation/slice_type.h:

solving/ply.h:

solving/move_generator.h:

solving/solve.h:

stipulation/stipulation.h:

stipulation/slice.h:

stipulation/structure_traversal.h:

stipulation/traversal.h:

stipulation/goals/goals.h:

output/mode.h:

stipulation/pipe.h:

stipulation/branch.h:

debugging/trace.h:

pydata.h:

py.h:

pyproc.h:

pieces/walks/vectors.h:

stipulation/goals/goals.h:
conditions/superguards$(OBJ_SUFFIX): conditions/superguards.c \
 conditions/superguards.h py.h utilities/boolean.h position/position.h \
 position/board.h utilities/bitmask.h pieces/walks/vectors.h \
 utilities/boolean.h utilities/enumeration.h solving/ply.h \
 position/position.h pylang.h solving/move_generator.h solving/solve.h \
 solving/ply.h stipulation/slice_type.h solving/observation.h \
 stipulation/stipulation.h stipulation/slice.h \
 stipulation/structure_traversal.h stipulation/traversal.h \
 stipulation/goals/goals.h output/mode.h stipulation/pipe.h \
 stipulation/branch.h debugging/trace.h pydata.h py.h pyproc.h \
 pieces/walks/vectors.h stipulation/goals/goals.h

conditions/superguards.h:

py.h:

utilities/boolean.h:

position/position.h:

position/board.h:

utilities/bitmask.h:

pieces/walks/vectors.h:

utilities/boolean.h:

utilities/enumeration.h:

solving/ply.h:

position/position.h:

pylang.h:

solving/move_generator.h:

solving/solve.h:

solving/ply.h:

stipulation/slice_type.h:

solving/observation.h:

stipulation/stipulation.h:

stipulation/slice.h:

stipulation/structure_traversal.h:

stipulation/traversal.h:

stipulation/goals/goals.h:

output/mode.h:

stipulation/pipe.h:

stipulation/branch.h:

debugging/trace.h:

pydata.h:

py.h:

pyproc.h:

pieces/walks/vectors.h:

stipulation/goals/goals.h:
conditions/brunner$(OBJ_SUFFIX): conditions/brunner.c conditions/brunner.h py.h \
 utilities/boolean.h position/position.h position/board.h \
 utilities/bitmask.h pieces/walks/vectors.h utilities/boolean.h \
 utilities/enumeration.h solving/ply.h position/position.h pylang.h \
 pydata.h py.h stipulation/stipulation.h stipulation/slice.h \
 stipulation/slice_type.h stipulation/structure_traversal.h \
 stipulation/traversal.h stipulation/goals/goals.h output/mode.h \
 stipulation/has_solution_type.h stipulation/temporary_hacks.h \
 solving/observation.h solving/ply.h solving/solve.h debugging/trace.h

conditions/brunner.h:

py.h:

utilities/boolean.h:

position/position.h:

position/board.h:

utilities/bitmask.h:

pieces/walks/vectors.h:

utilities/boolean.h:

utilities/enumeration.h:

solving/ply.h:

position/position.h:

pylang.h:

pydata.h:

py.h:

stipulation/stipulation.h:

stipulation/slice.h:

stipulation/slice_type.h:

stipulation/structure_traversal.h:

stipulation/traversal.h:

stipulation/goals/goals.h:

output/mode.h:

stipulation/has_solution_type.h:

stipulation/temporary_hacks.h:

solving/observation.h:

solving/ply.h:

solving/solve.h:

debugging/trace.h:
conditions/wormhole$(OBJ_SUFFIX): conditions/wormhole.c conditions/wormhole.h \
 solving/solve.h py.h utilities/boolean.h position/position.h \
 position/board.h utilities/bitmask.h pieces/walks/vectors.h \
 utilities/boolean.h utilities/enumeration.h solving/ply.h \
 position/position.h pylang.h solving/ply.h pydata.h py.h \
 pieces/walks/pawns/promotion.h stipulation/has_solution_type.h \
 stipulation/stipulation.h stipulation/slice.h stipulation/slice_type.h \
 stipulation/structure_traversal.h stipulation/traversal.h \
 stipulation/goals/goals.h output/mode.h stipulation/pipe.h \
 stipulation/branch.h stipulation/move.h solving/move_effect_journal.h \
 solving/castling_rights.h position/pieceid.h solving/move_generator.h \
 solving/post_move_iteration.h solving/moving_pawn_promotion.h \
 solving/observation.h debugging/trace.h

conditions/wormhole.h:

solving/solve.h:

py.h:

utilities/boolean.h:

position/position.h:

position/board.h:

utilities/bitmask.h:

pieces/walks/vectors.h:

utilities/boolean.h:

utilities/enumeration.h:

solving/ply.h:

position/position.h:

pylang.h:

solving/ply.h:

pydata.h:

py.h:

pieces/walks/pawns/promotion.h:

stipulation/has_solution_type.h:

stipulation/stipulation.h:

stipulation/slice.h:

stipulation/slice_type.h:

stipulation/structure_traversal.h:

stipulation/traversal.h:

stipulation/goals/goals.h:

output/mode.h:

stipulation/pipe.h:

stipulation/branch.h:

stipulation/move.h:

solving/move_effect_journal.h:

solving/castling_rights.h:

position/pieceid.h:

solving/move_generator.h:

solving/post_move_iteration.h:

solving/moving_pawn_promotion.h:

solving/observation.h:

debugging/trace.h:
conditions/vaulting_kings$(OBJ_SUFFIX): conditions/vaulting_kings.c \
 conditions/vaulting_kings.h utilities/boolean.h position/position.h \
 position/board.h utilities/bitmask.h pieces/walks/vectors.h \
 utilities/enumeration.h solving/observation.h stipulation/slice_type.h \
 py.h utilities/boolean.h position/position.h solving/ply.h pylang.h \
 solving/ply.h conditions/transmuting_kings/transmuting_kings.h \
 stipulation/stipulation.h stipulation/slice.h \
 stipulation/structure_traversal.h stipulation/traversal.h \
 stipulation/goals/goals.h output/mode.h solving/move_generator.h \
 solving/solve.h solving/find_square_observer_tracking_back_from_target.h \
 debugging/trace.h pydata.h py.h pyproc.h pieces/walks/vectors.h \
 stipulation/goals/goals.h

conditions/vaulting_kings.h:

utilities/boolean.h:

position/position.h:

position/board.h:

utilities/bitmask.h:

pieces/walks/vectors.h:

utilities/enumeration.h:

solving/observation.h:

stipulation/slice_type.h:

py.h:

utilities/boolean.h:

position/position.h:

solving/ply.h:

pylang.h:

solving/ply.h:

conditions/transmuting_kings/transmuting_kings.h:

stipulation/stipulation.h:

stipulation/slice.h:

stipulation/structure_traversal.h:

stipulation/traversal.h:

stipulation/goals/goals.h:

output/mode.h:

solving/move_generator.h:

solving/solve.h:

solving/find_square_observer_tracking_back_from_target.h:

debugging/trace.h:

pydata.h:

py.h:

pyproc.h:

pieces/walks/vectors.h:

stipulation/goals/goals.h:
conditions/backhome$(OBJ_SUFFIX): conditions/backhome.c conditions/backhome.h py.h \
 utilities/boolean.h position/position.h position/board.h \
 utilities/bitmask.h pieces/walks/vectors.h utilities/boolean.h \
 utilities/enumeration.h solving/ply.h position/position.h pylang.h \
 conditions/mummer.h solving/solve.h position/pieceid.h \
 stipulation/stipulation.h stipulation/slice.h stipulation/slice_type.h \
 stipulation/structure_traversal.h stipulation/traversal.h \
 stipulation/goals/goals.h output/mode.h stipulation/has_solution_type.h \
 stipulation/pipe.h stipulation/branch.h stipulation/temporary_hacks.h \
 solving/move_generator.h solving/ply.h solving/observation.h \
 solving/legal_move_counter.h pydata.h py.h debugging/trace.h

conditions/backhome.h:

py.h:

utilities/boolean.h:

position/position.h:

position/board.h:

utilities/bitmask.h:

pieces/walks/vectors.h:

utilities/boolean.h:

utilities/enumeration.h:

solving/ply.h:

position/position.h:

pylang.h:

conditions/mummer.h:

solving/solve.h:

position/pieceid.h:

stipulation/stipulation.h:

stipulation/slice.h:

stipulation/slice_type.h:

stipulation/structure_traversal.h:

stipulation/traversal.h:

stipulation/goals/goals.h:

output/mode.h:

stipulation/has_solution_type.h:

stipulation/pipe.h:

stipulation/branch.h:

stipulation/temporary_hacks.h:

solving/move_generator.h:

solving/ply.h:

solving/observation.h:

solving/legal_move_counter.h:

pydata.h:

py.h:

debugging/trace.h:
conditions/vogtlaender$(OBJ_SUFFIX): conditions/vogtlaender.c \
 conditions/vogtlaender.h utilities/boolean.h position/position.h \
 position/board.h utilities/bitmask.h pieces/walks/vectors.h \
 utilities/enumeration.h py.h utilities/boolean.h position/position.h \
 solving/ply.h pylang.h solving/check.h stipulation/stipulation.h \
 stipulation/slice.h stipulation/slice_type.h \
 stipulation/structure_traversal.h stipulation/traversal.h \
 stipulation/goals/goals.h output/mode.h

conditions/vogtlaender.h:

utilities/boolean.h:

position/position.h:

position/board.h:

utilities/bitmask.h:

pieces/walks/vectors.h:

utilities/enumeration.h:

py.h:

utilities/boolean.h:

position/position.h:

solving/ply.h:

pylang.h:

solving/check.h:

stipulation/stipulation.h:

stipulation/slice.h:

stipulation/slice_type.h:

stipulation/structure_traversal.h:

stipulation/traversal.h:

stipulation/goals/goals.h:

output/mode.h:
conditions/bicolores$(OBJ_SUFFIX): conditions/bicolores.c conditions/bicolores.h \
 utilities/boolean.h position/position.h position/board.h \
 utilities/bitmask.h pieces/walks/vectors.h utilities/enumeration.h py.h \
 utilities/boolean.h position/position.h solving/ply.h pylang.h \
 solving/check.h stipulation/stipulation.h stipulation/slice.h \
 stipulation/slice_type.h stipulation/structure_traversal.h \
 stipulation/traversal.h stipulation/goals/goals.h output/mode.h pydata.h \
 py.h

conditions/bicolores.h:

utilities/boolean.h:

position/position.h:

position/board.h:

utilities/bitmask.h:

pieces/walks/vectors.h:

utilities/enumeration.h:

py.h:

utilities/boolean.h:

position/position.h:

solving/ply.h:

pylang.h:

solving/check.h:

stipulation/stipulation.h:

stipulation/slice.h:

stipulation/slice_type.h:

stipulation/structure_traversal.h:

stipulation/traversal.h:

stipulation/goals/goals.h:

output/mode.h:

pydata.h:

py.h:
conditions/antikings$(OBJ_SUFFIX): conditions/antikings.c conditions/antikings.h \
 utilities/boolean.h position/position.h position/board.h \
 utilities/bitmask.h pieces/walks/vectors.h utilities/enumeration.h py.h \
 utilities/boolean.h position/position.h solving/ply.h pylang.h \
 solving/check.h stipulation/stipulation.h stipulation/slice.h \
 stipulation/slice_type.h stipulation/structure_traversal.h \
 stipulation/traversal.h stipulation/goals/goals.h output/mode.h

conditions/antikings.h:

utilities/boolean.h:

position/position.h:

position/board.h:

utilities/bitmask.h:

pieces/walks/vectors.h:

utilities/enumeration.h:

py.h:

utilities/boolean.h:

position/position.h:

solving/ply.h:

pylang.h:

solving/check.h:

stipulation/stipulation.h:

stipulation/slice.h:

stipulation/slice_type.h:

stipulation/structure_traversal.h:

stipulation/traversal.h:

stipulation/goals/goals.h:

output/mode.h:
conditions/sting$(OBJ_SUFFIX): conditions/sting.c conditions/sting.h \
 position/position.h position/board.h utilities/bitmask.h \
 pieces/walks/vectors.h utilities/boolean.h utilities/enumeration.h py.h \
 utilities/boolean.h position/position.h solving/ply.h pylang.h \
 solving/observation.h stipulation/slice_type.h solving/ply.h \
 pieces/walks/hoppers.h solving/move_generator.h solving/solve.h \
 solving/find_square_observer_tracking_back_from_target.h \
 stipulation/stipulation.h stipulation/slice.h \
 stipulation/structure_traversal.h stipulation/traversal.h \
 stipulation/goals/goals.h output/mode.h pydata.h py.h

conditions/sting.h:

position/position.h:

position/board.h:

utilities/bitmask.h:

pieces/walks/vectors.h:

utilities/boolean.h:

utilities/enumeration.h:

py.h:

utilities/boolean.h:

position/position.h:

solving/ply.h:

pylang.h:

solving/observation.h:

stipulation/slice_type.h:

solving/ply.h:

pieces/walks/hoppers.h:

solving/move_generator.h:

solving/solve.h:

solving/find_square_observer_tracking_back_from_target.h:

stipulation/stipulation.h:

stipulation/slice.h:

stipulation/structure_traversal.h:

stipulation/traversal.h:

stipulation/goals/goals.h:

output/mode.h:

pydata.h:

py.h:
conditions/follow_my_leader$(OBJ_SUFFIX): conditions/follow_my_leader.c \
 conditions/follow_my_leader.h position/board.h utilities/bitmask.h \
 solving/move_effect_journal.h solving/solve.h py.h utilities/boolean.h \
 position/position.h pieces/walks/vectors.h utilities/boolean.h \
 utilities/enumeration.h solving/ply.h position/position.h pylang.h \
 solving/castling_rights.h solving/ply.h position/pieceid.h \
 solving/move_generator.h stipulation/slice_type.h debugging/trace.h \
 pydata.h py.h

conditions/follow_my_leader.h:

position/board.h:

utilities/bitmask.h:

solving/move_effect_journal.h:

solving/solve.h:

py.h:

utilities/boolean.h:

position/position.h:

pieces/walks/vectors.h:

utilities/boolean.h:

utilities/enumeration.h:

solving/ply.h:

position/position.h:

pylang.h:

solving/castling_rights.h:

solving/ply.h:

position/pieceid.h:

solving/move_generator.h:

stipulation/slice_type.h:

debugging/trace.h:

pydata.h:

py.h:
conditions/alphabetic$(OBJ_SUFFIX): conditions/alphabetic.c conditions/alphabetic.h \
 position/board.h utilities/bitmask.h solving/move_generator.h \
 solving/solve.h py.h utilities/boolean.h position/position.h \
 pieces/walks/vectors.h utilities/boolean.h utilities/enumeration.h \
 solving/ply.h position/position.h pylang.h solving/ply.h \
 stipulation/slice_type.h pydata.h py.h

conditions/alphabetic.h:

position/board.h:

utilities/bitmask.h:

solving/move_generator.h:

solving/solve.h:

py.h:

utilities/boolean.h:

position/position.h:

pieces/walks/vectors.h:

utilities/boolean.h:

utilities/enumeration.h:

solving/ply.h:

position/position.h:

pylang.h:

solving/ply.h:

stipulation/slice_type.h:

pydata.h:

py.h:
conditions/forced_squares$(OBJ_SUFFIX): conditions/forced_squares.c \
 conditions/forced_squares.h position/board.h utilities/bitmask.h \
 solving/move_generator.h solving/solve.h py.h utilities/boolean.h \
 position/position.h pieces/walks/vectors.h utilities/boolean.h \
 utilities/enumeration.h solving/ply.h position/position.h pylang.h \
 solving/ply.h stipulation/slice_type.h debugging/trace.h pydata.h py.h

conditions/forced_squares.h:

position/board.h:

utilities/bitmask.h:

solving/move_generator.h:

solving/solve.h:

py.h:

utilities/boolean.h:

position/position.h:

pieces/walks/vectors.h:

utilities/boolean.h:

utilities/enumeration.h:

solving/ply.h:

position/position.h:

pylang.h:

solving/ply.h:

stipulation/slice_type.h:

debugging/trace.h:

pydata.h:

py.h:
conditions/synchronous$(OBJ_SUFFIX): conditions/synchronous.c \
 conditions/synchronous.h solving/move_effect_journal.h solving/solve.h \
 py.h utilities/boolean.h position/position.h position/board.h \
 utilities/bitmask.h pieces/walks/vectors.h utilities/boolean.h \
 utilities/enumeration.h solving/ply.h position/position.h pylang.h \
 solving/castling_rights.h solving/ply.h position/pieceid.h \
 solving/move_generator.h stipulation/slice_type.h debugging/trace.h \
 pydata.h py.h

conditions/synchronous.h:

solving/move_effect_journal.h:

solving/solve.h:

py.h:

utilities/boolean.h:

position/position.h:

position/board.h:

utilities/bitmask.h:

pieces/walks/vectors.h:

utilities/boolean.h:

utilities/enumeration.h:

solving/ply.h:

position/position.h:

pylang.h:

solving/castling_rights.h:

solving/ply.h:

position/pieceid.h:

solving/move_generator.h:

stipulation/slice_type.h:

debugging/trace.h:

pydata.h:

py.h:
conditions/must_capture$(OBJ_SUFFIX): conditions/must_capture.c \
 conditions/must_capture.h position/board.h utilities/bitmask.h \
 position/position.h pieces/walks/vectors.h utilities/boolean.h \
 utilities/enumeration.h solving/move_generator.h solving/solve.h py.h \
 utilities/boolean.h position/position.h solving/ply.h pylang.h \
 solving/ply.h stipulation/slice_type.h debugging/trace.h pydata.h py.h

conditions/must_capture.h:

position/board.h:

utilities/bitmask.h:

position/position.h:

pieces/walks/vectors.h:

utilities/boolean.h:

utilities/enumeration.h:

solving/move_generator.h:

solving/solve.h:

py.h:

utilities/boolean.h:

position/position.h:

solving/ply.h:

pylang.h:

solving/ply.h:

stipulation/slice_type.h:

debugging/trace.h:

pydata.h:

py.h:
