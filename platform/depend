platform/maxmem$(OBJ_SUFFIX): platform/maxmem.c platform/maxmem.h \
 utilities/boolean.h optimisations/hash.h DHT/dhtbcmem.h py.h \
 utilities/boolean.h position/position.h position/board.h \
 utilities/bitmask.h pieces/walks/vectors.h utilities/enumeration.h \
 solving/ply.h position/position.h pylang.h solving/solve.h \
 stipulation/stipulation.h stipulation/goals/goals.h \
 stipulation/slice_type.h output/mode.h solving/ply.h

platform/maxmem.h:

utilities/boolean.h:

optimisations/hash.h:

DHT/dhtbcmem.h:

py.h:

utilities/boolean.h:

position/position.h:

position/board.h:

utilities/bitmask.h:

pieces/walks/vectors.h:

utilities/enumeration.h:

solving/ply.h:

position/position.h:

pylang.h:

solving/solve.h:

stipulation/stipulation.h:

stipulation/goals/goals.h:

stipulation/slice_type.h:

output/mode.h:

solving/ply.h:
platform/maxtime$(OBJ_SUFFIX): platform/maxtime.c platform/maxtime_impl.h \
 platform/maxtime.h utilities/boolean.h pydata.h position/position.h \
 position/board.h utilities/bitmask.h pieces/walks/vectors.h \
 utilities/enumeration.h utilities/boolean.h py.h solving/ply.h \
 position/position.h pylang.h

platform/maxtime_impl.h:

platform/maxtime.h:

utilities/boolean.h:

pydata.h:

position/position.h:

position/board.h:

utilities/bitmask.h:

pieces/walks/vectors.h:

utilities/enumeration.h:

utilities/boolean.h:

py.h:

solving/ply.h:

position/position.h:

pylang.h:
platform/beep$(OBJ_SUFFIX): platform/beep.c platform/beep.h utilities/boolean.h \
 platform/beep_impl.h

platform/beep.h:

utilities/boolean.h:

platform/beep_impl.h:
