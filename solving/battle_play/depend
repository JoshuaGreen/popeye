solving/battle_play/continuation$(OBJ_SUFFIX): solving/battle_play/continuation.c \
 solving/battle_play/continuation.h solving/solve.h py.h \
 utilities/boolean.h position/position.h position/board.h \
 utilities/bitmask.h pieces/walks/vectors.h utilities/boolean.h \
 utilities/enumeration.h pylang.h stipulation/branch.h \
 stipulation/structure_traversal.h stipulation/slice.h \
 stipulation/slice_type.h stipulation/traversal.h \
 stipulation/has_solution_type.h stipulation/testing_pipe.h \
 stipulation/pipe.h stipulation/battle_play/branch.h \
 stipulation/stipulation.h stipulation/goals/goals.h output/mode.h \
 debugging/trace.h

solving/battle_play/continuation.h:

solving/solve.h:

py.h:

utilities/boolean.h:

position/position.h:

position/board.h:

utilities/bitmask.h:

pieces/walks/vectors.h:

utilities/boolean.h:

utilities/enumeration.h:

pylang.h:

stipulation/branch.h:

stipulation/structure_traversal.h:

stipulation/slice.h:

stipulation/slice_type.h:

stipulation/traversal.h:

stipulation/has_solution_type.h:

stipulation/testing_pipe.h:

stipulation/pipe.h:

stipulation/battle_play/branch.h:

stipulation/stipulation.h:

stipulation/goals/goals.h:

output/mode.h:

debugging/trace.h:
solving/battle_play/threat$(OBJ_SUFFIX): solving/battle_play/threat.c \
 solving/battle_play/threat.h stipulation/structure_traversal.h \
 stipulation/slice.h py.h utilities/boolean.h position/position.h \
 position/board.h utilities/bitmask.h pieces/walks/vectors.h \
 utilities/boolean.h utilities/enumeration.h pylang.h \
 stipulation/slice_type.h stipulation/traversal.h solving/solve.h \
 solving/ply.h position/position.h utilities/table.h pydata.h py.h \
 solving/ply.h stipulation/has_solution_type.h stipulation/testing_pipe.h \
 stipulation/pipe.h stipulation/branch.h stipulation/proxy.h \
 stipulation/dummy_move.h stipulation/move_played.h \
 stipulation/battle_play/branch.h stipulation/stipulation.h \
 stipulation/goals/goals.h output/mode.h solving/avoid_unsolvable.h \
 solving/check.h debugging/trace.h

solving/battle_play/threat.h:

stipulation/structure_traversal.h:

stipulation/slice.h:

py.h:

utilities/boolean.h:

position/position.h:

position/board.h:

utilities/bitmask.h:

pieces/walks/vectors.h:

utilities/boolean.h:

utilities/enumeration.h:

pylang.h:

stipulation/slice_type.h:

stipulation/traversal.h:

solving/solve.h:

solving/ply.h:

position/position.h:

utilities/table.h:

pydata.h:

py.h:

solving/ply.h:

stipulation/has_solution_type.h:

stipulation/testing_pipe.h:

stipulation/pipe.h:

stipulation/branch.h:

stipulation/proxy.h:

stipulation/dummy_move.h:

stipulation/move_played.h:

stipulation/battle_play/branch.h:

stipulation/stipulation.h:

stipulation/goals/goals.h:

output/mode.h:

solving/avoid_unsolvable.h:

solving/check.h:

debugging/trace.h:
solving/battle_play/try$(OBJ_SUFFIX): solving/battle_play/try.c \
 solving/battle_play/try.h py.h utilities/boolean.h position/position.h \
 position/board.h utilities/bitmask.h pieces/walks/vectors.h \
 utilities/boolean.h utilities/enumeration.h pylang.h utilities/table.h \
 pydata.h py.h solving/ply.h position/position.h stipulation/pipe.h \
 stipulation/structure_traversal.h stipulation/slice.h \
 stipulation/slice_type.h stipulation/traversal.h solving/solve.h \
 stipulation/fork.h pymsg.h stipulation/branch.h stipulation/constraint.h \
 stipulation/moves_traversal.h stipulation/goals/goals.h output/mode.h \
 stipulation/dead_end.h stipulation/proxy.h stipulation/binary.h \
 stipulation/boolean/true.h stipulation/boolean/false.h \
 stipulation/battle_play/branch.h stipulation/stipulation.h \
 debugging/trace.h

solving/battle_play/try.h:

py.h:

utilities/boolean.h:

position/position.h:

position/board.h:

utilities/bitmask.h:

pieces/walks/vectors.h:

utilities/boolean.h:

utilities/enumeration.h:

pylang.h:

utilities/table.h:

pydata.h:

py.h:

solving/ply.h:

position/position.h:

stipulation/pipe.h:

stipulation/structure_traversal.h:

stipulation/slice.h:

stipulation/slice_type.h:

stipulation/traversal.h:

solving/solve.h:

stipulation/fork.h:

pymsg.h:

stipulation/branch.h:

stipulation/constraint.h:

stipulation/moves_traversal.h:

stipulation/goals/goals.h:

output/mode.h:

stipulation/dead_end.h:

stipulation/proxy.h:

stipulation/binary.h:

stipulation/boolean/true.h:

stipulation/boolean/false.h:

stipulation/battle_play/branch.h:

stipulation/stipulation.h:

debugging/trace.h:
solving/battle_play/setplay$(OBJ_SUFFIX): solving/battle_play/setplay.c \
 solving/battle_play/setplay.h stipulation/slice.h py.h \
 utilities/boolean.h position/position.h position/board.h \
 utilities/bitmask.h pieces/walks/vectors.h utilities/boolean.h \
 utilities/enumeration.h pylang.h stipulation/slice_type.h \
 stipulation/branch.h stipulation/structure_traversal.h \
 stipulation/traversal.h stipulation/has_solution_type.h \
 stipulation/battle_play/branch.h stipulation/stipulation.h \
 stipulation/goals/goals.h output/mode.h solving/battle_play/try.h \
 utilities/table.h debugging/trace.h

solving/battle_play/setplay.h:

stipulation/slice.h:

py.h:

utilities/boolean.h:

position/position.h:

position/board.h:

utilities/bitmask.h:

pieces/walks/vectors.h:

utilities/boolean.h:

utilities/enumeration.h:

pylang.h:

stipulation/slice_type.h:

stipulation/branch.h:

stipulation/structure_traversal.h:

stipulation/traversal.h:

stipulation/has_solution_type.h:

stipulation/battle_play/branch.h:

stipulation/stipulation.h:

stipulation/goals/goals.h:

output/mode.h:

solving/battle_play/try.h:

utilities/table.h:

debugging/trace.h:
solving/battle_play/min_length_optimiser$(OBJ_SUFFIX): \
 solving/battle_play/min_length_optimiser.c \
 solving/battle_play/min_length_optimiser.h solving/solve.h py.h \
 utilities/boolean.h position/position.h position/board.h \
 utilities/bitmask.h pieces/walks/vectors.h utilities/boolean.h \
 utilities/enumeration.h pylang.h stipulation/stipulation.h \
 stipulation/slice.h stipulation/slice_type.h \
 stipulation/structure_traversal.h stipulation/traversal.h \
 stipulation/goals/goals.h output/mode.h stipulation/branch.h \
 solving/avoid_unsolvable.h debugging/trace.h

solving/battle_play/min_length_optimiser.h:

solving/solve.h:

py.h:

utilities/boolean.h:

position/position.h:

position/board.h:

utilities/bitmask.h:

pieces/walks/vectors.h:

utilities/boolean.h:

utilities/enumeration.h:

pylang.h:

stipulation/stipulation.h:

stipulation/slice.h:

stipulation/slice_type.h:

stipulation/structure_traversal.h:

stipulation/traversal.h:

stipulation/goals/goals.h:

output/mode.h:

stipulation/branch.h:

solving/avoid_unsolvable.h:

debugging/trace.h:
solving/battle_play/min_length_guard$(OBJ_SUFFIX): \
 solving/battle_play/min_length_guard.c \
 solving/battle_play/min_length_guard.h solving/solve.h py.h \
 utilities/boolean.h position/position.h position/board.h \
 utilities/bitmask.h pieces/walks/vectors.h utilities/boolean.h \
 utilities/enumeration.h pylang.h stipulation/pipe.h \
 stipulation/structure_traversal.h stipulation/slice.h \
 stipulation/slice_type.h stipulation/traversal.h stipulation/proxy.h \
 stipulation/has_solution_type.h stipulation/branch.h \
 stipulation/battle_play/branch.h stipulation/stipulation.h \
 stipulation/goals/goals.h output/mode.h \
 solving/battle_play/min_length_optimiser.h debugging/trace.h

solving/battle_play/min_length_guard.h:

solving/solve.h:

py.h:

utilities/boolean.h:

position/position.h:

position/board.h:

utilities/bitmask.h:

pieces/walks/vectors.h:

utilities/boolean.h:

utilities/enumeration.h:

pylang.h:

stipulation/pipe.h:

stipulation/structure_traversal.h:

stipulation/slice.h:

stipulation/slice_type.h:

stipulation/traversal.h:

stipulation/proxy.h:

stipulation/has_solution_type.h:

stipulation/branch.h:

stipulation/battle_play/branch.h:

stipulation/stipulation.h:

stipulation/goals/goals.h:

output/mode.h:

solving/battle_play/min_length_optimiser.h:

debugging/trace.h:
