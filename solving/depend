solving/testers$(OBJ_SUFFIX): solving/testers.c solving/testers.h \
 stipulation/stipulation.h stipulation/goals/goals.h position/board.h \
 utilities/bitmask.h utilities/boolean.h stipulation/slice_type.h \
 stipulation/slice_type.enum.h position/side.h position/side.enum.h \
 pieces/pieces.h output/mode.h output/mode.enum.h stipulation/fork.h \
 stipulation/structure_traversal.h stipulation/slice.h \
 stipulation/slice_structural_type.h \
 stipulation/slice_structural_type.enum.h \
 stipulation/slice_functional_type.h \
 stipulation/slice_functional_type.enum.h stipulation/traversal.h \
 solving/has_solution_type.h solving/has_solution_type.enum.h \
 stipulation/if_then_else.h stipulation/testing_pipe.h stipulation/pipe.h \
 stipulation/conditional_pipe.h stipulation/branch.h stipulation/binary.h \
 stipulation/boolean/true.h stipulation/battle_play/branch.h \
 stipulation/help_play/branch.h solving/machinery/solve.h \
 solving/machinery/dispatch.h debugging/trace.h debugging/assert.h

solving/testers.h:

stipulation/stipulation.h:

stipulation/goals/goals.h:

position/board.h:

utilities/bitmask.h:

utilities/boolean.h:

stipulation/slice_type.h:

stipulation/slice_type.enum.h:

position/side.h:

position/side.enum.h:

pieces/pieces.h:

output/mode.h:

output/mode.enum.h:

stipulation/fork.h:

stipulation/structure_traversal.h:

stipulation/slice.h:

stipulation/slice_structural_type.h:

stipulation/slice_structural_type.enum.h:

stipulation/slice_functional_type.h:

stipulation/slice_functional_type.enum.h:

stipulation/traversal.h:

solving/has_solution_type.h:

solving/has_solution_type.enum.h:

stipulation/if_then_else.h:

stipulation/testing_pipe.h:

stipulation/pipe.h:

stipulation/conditional_pipe.h:

stipulation/branch.h:

stipulation/binary.h:

stipulation/boolean/true.h:

stipulation/battle_play/branch.h:

stipulation/help_play/branch.h:

solving/machinery/solve.h:

solving/machinery/dispatch.h:

debugging/trace.h:

debugging/assert.h:
solving/move_effect_journal$(OBJ_SUFFIX): solving/move_effect_journal.c \
 solving/move_effect_journal.h solving/machinery/solve.h \
 stipulation/stipulation.h stipulation/goals/goals.h position/board.h \
 utilities/bitmask.h utilities/boolean.h stipulation/slice_type.h \
 stipulation/slice_type.enum.h position/side.h position/side.enum.h \
 pieces/pieces.h output/mode.h output/mode.enum.h \
 solving/machinery/dispatch.h debugging/trace.h solving/castling_rights.h \
 solving/ply.h position/pieceid.h solving/castling.h conditions/bgl.h \
 conditions/duellists.h conditions/imitator.h position/position.h \
 position/color.h position/color.enum.h pieces/walks/vectors.h \
 conditions/actuated_revolving_centre.h conditions/haunted_chess.h \
 position/underworld.h conditions/sat.h conditions/circe/parachute.h \
 pieces/walks/pawns/en_passant.h solving/observation.h \
 solving/temporary_hacks.h pieces/attributes/neutral/neutral.h \
 pieces/attributes/neutral/half.h solving/pipe.h debugging/assert.h

solving/move_effect_journal.h:

solving/machinery/solve.h:

stipulation/stipulation.h:

stipulation/goals/goals.h:

position/board.h:

utilities/bitmask.h:

utilities/boolean.h:

stipulation/slice_type.h:

stipulation/slice_type.enum.h:

position/side.h:

position/side.enum.h:

pieces/pieces.h:

output/mode.h:

output/mode.enum.h:

solving/machinery/dispatch.h:

debugging/trace.h:

solving/castling_rights.h:

solving/ply.h:

position/pieceid.h:

solving/castling.h:

conditions/bgl.h:

conditions/duellists.h:

conditions/imitator.h:

position/position.h:

position/color.h:

position/color.enum.h:

pieces/walks/vectors.h:

conditions/actuated_revolving_centre.h:

conditions/haunted_chess.h:

position/underworld.h:

conditions/sat.h:

conditions/circe/parachute.h:

pieces/walks/pawns/en_passant.h:

solving/observation.h:

solving/temporary_hacks.h:

pieces/attributes/neutral/neutral.h:

pieces/attributes/neutral/half.h:

solving/pipe.h:

debugging/assert.h:
solving/find_shortest$(OBJ_SUFFIX): solving/find_shortest.c solving/find_shortest.h \
 solving/machinery/solve.h stipulation/stipulation.h \
 stipulation/goals/goals.h position/board.h utilities/bitmask.h \
 utilities/boolean.h stipulation/slice_type.h \
 stipulation/slice_type.enum.h position/side.h position/side.enum.h \
 pieces/pieces.h output/mode.h output/mode.enum.h \
 solving/machinery/dispatch.h debugging/trace.h options/options.h \
 stipulation/proxy.h stipulation/pipe.h stipulation/structure_traversal.h \
 stipulation/slice.h stipulation/slice_structural_type.h \
 stipulation/slice_structural_type.enum.h \
 stipulation/slice_functional_type.h \
 stipulation/slice_functional_type.enum.h stipulation/traversal.h \
 solving/has_solution_type.h solving/has_solution_type.enum.h \
 stipulation/branch.h stipulation/battle_play/branch.h \
 solving/avoid_unsolvable.h solving/find_by_increasing_length.h \
 solving/fork_on_remaining.h solving/pipe.h debugging/assert.h

solving/find_shortest.h:

solving/machinery/solve.h:

stipulation/stipulation.h:

stipulation/goals/goals.h:

position/board.h:

utilities/bitmask.h:

utilities/boolean.h:

stipulation/slice_type.h:

stipulation/slice_type.enum.h:

position/side.h:

position/side.enum.h:

pieces/pieces.h:

output/mode.h:

output/mode.enum.h:

solving/machinery/dispatch.h:

debugging/trace.h:

options/options.h:

stipulation/proxy.h:

stipulation/pipe.h:

stipulation/structure_traversal.h:

stipulation/slice.h:

stipulation/slice_structural_type.h:

stipulation/slice_structural_type.enum.h:

stipulation/slice_functional_type.h:

stipulation/slice_functional_type.enum.h:

stipulation/traversal.h:

solving/has_solution_type.h:

solving/has_solution_type.enum.h:

stipulation/branch.h:

stipulation/battle_play/branch.h:

solving/avoid_unsolvable.h:

solving/find_by_increasing_length.h:

solving/fork_on_remaining.h:

solving/pipe.h:

debugging/assert.h:
solving/find_by_increasing_length$(OBJ_SUFFIX): solving/find_by_increasing_length.c \
 solving/find_by_increasing_length.h solving/machinery/solve.h \
 stipulation/stipulation.h stipulation/goals/goals.h position/board.h \
 utilities/bitmask.h utilities/boolean.h stipulation/slice_type.h \
 stipulation/slice_type.enum.h position/side.h position/side.enum.h \
 pieces/pieces.h output/mode.h output/mode.enum.h \
 solving/machinery/dispatch.h debugging/trace.h stipulation/branch.h \
 stipulation/structure_traversal.h stipulation/slice.h \
 stipulation/slice_structural_type.h \
 stipulation/slice_structural_type.enum.h \
 stipulation/slice_functional_type.h \
 stipulation/slice_functional_type.enum.h stipulation/traversal.h \
 stipulation/pipe.h stipulation/proxy.h stipulation/help_play/branch.h \
 debugging/assert.h

solving/find_by_increasing_length.h:

solving/machinery/solve.h:

stipulation/stipulation.h:

stipulation/goals/goals.h:

position/board.h:

utilities/bitmask.h:

utilities/boolean.h:

stipulation/slice_type.h:

stipulation/slice_type.enum.h:

position/side.h:

position/side.enum.h:

pieces/pieces.h:

output/mode.h:

output/mode.enum.h:

solving/machinery/dispatch.h:

debugging/trace.h:

stipulation/branch.h:

stipulation/structure_traversal.h:

stipulation/slice.h:

stipulation/slice_structural_type.h:

stipulation/slice_structural_type.enum.h:

stipulation/slice_functional_type.h:

stipulation/slice_functional_type.enum.h:

stipulation/traversal.h:

stipulation/pipe.h:

stipulation/proxy.h:

stipulation/help_play/branch.h:

debugging/assert.h:
solving/fork_on_remaining$(OBJ_SUFFIX): solving/fork_on_remaining.c \
 solving/fork_on_remaining.h solving/machinery/solve.h \
 stipulation/stipulation.h stipulation/goals/goals.h position/board.h \
 utilities/bitmask.h utilities/boolean.h stipulation/slice_type.h \
 stipulation/slice_type.enum.h position/side.h position/side.enum.h \
 pieces/pieces.h output/mode.h output/mode.enum.h \
 solving/machinery/dispatch.h debugging/trace.h \
 solving/has_solution_type.h solving/has_solution_type.enum.h \
 stipulation/binary.h stipulation/structure_traversal.h \
 stipulation/slice.h stipulation/slice_structural_type.h \
 stipulation/slice_structural_type.enum.h \
 stipulation/slice_functional_type.h \
 stipulation/slice_functional_type.enum.h stipulation/traversal.h \
 debugging/assert.h

solving/fork_on_remaining.h:

solving/machinery/solve.h:

stipulation/stipulation.h:

stipulation/goals/goals.h:

position/board.h:

utilities/bitmask.h:

utilities/boolean.h:

stipulation/slice_type.h:

stipulation/slice_type.enum.h:

position/side.h:

position/side.enum.h:

pieces/pieces.h:

output/mode.h:

output/mode.enum.h:

solving/machinery/dispatch.h:

debugging/trace.h:

solving/has_solution_type.h:

solving/has_solution_type.enum.h:

stipulation/binary.h:

stipulation/structure_traversal.h:

stipulation/slice.h:

stipulation/slice_structural_type.h:

stipulation/slice_structural_type.enum.h:

stipulation/slice_functional_type.h:

stipulation/slice_functional_type.enum.h:

stipulation/traversal.h:

debugging/assert.h:
solving/play_suppressor$(OBJ_SUFFIX): solving/play_suppressor.c \
 solving/play_suppressor.h solving/machinery/solve.h \
 stipulation/stipulation.h stipulation/goals/goals.h position/board.h \
 utilities/bitmask.h utilities/boolean.h stipulation/slice_type.h \
 stipulation/slice_type.enum.h position/side.h position/side.enum.h \
 pieces/pieces.h output/mode.h output/mode.enum.h \
 solving/machinery/dispatch.h debugging/trace.h stipulation/pipe.h \
 stipulation/structure_traversal.h stipulation/slice.h \
 stipulation/slice_structural_type.h \
 stipulation/slice_structural_type.enum.h \
 stipulation/slice_functional_type.h \
 stipulation/slice_functional_type.enum.h stipulation/traversal.h \
 stipulation/battle_play/branch.h

solving/play_suppressor.h:

solving/machinery/solve.h:

stipulation/stipulation.h:

stipulation/goals/goals.h:

position/board.h:

utilities/bitmask.h:

utilities/boolean.h:

stipulation/slice_type.h:

stipulation/slice_type.enum.h:

position/side.h:

position/side.enum.h:

pieces/pieces.h:

output/mode.h:

output/mode.enum.h:

solving/machinery/dispatch.h:

debugging/trace.h:

stipulation/pipe.h:

stipulation/structure_traversal.h:

stipulation/slice.h:

stipulation/slice_structural_type.h:

stipulation/slice_structural_type.enum.h:

stipulation/slice_functional_type.h:

stipulation/slice_functional_type.enum.h:

stipulation/traversal.h:

stipulation/battle_play/branch.h:
solving/move_generator$(OBJ_SUFFIX): solving/move_generator.c \
 solving/move_generator.h solving/machinery/solve.h \
 stipulation/stipulation.h stipulation/goals/goals.h position/board.h \
 utilities/bitmask.h utilities/boolean.h stipulation/slice_type.h \
 stipulation/slice_type.enum.h position/side.h position/side.enum.h \
 pieces/pieces.h output/mode.h output/mode.enum.h \
 solving/machinery/dispatch.h debugging/trace.h solving/ply.h \
 solving/temporary_hacks.h solving/pipe.h \
 solving/single_piece_move_generator.h stipulation/branch.h \
 stipulation/structure_traversal.h stipulation/slice.h \
 stipulation/slice_structural_type.h \
 stipulation/slice_structural_type.enum.h \
 stipulation/slice_functional_type.h \
 stipulation/slice_functional_type.enum.h stipulation/traversal.h \
 stipulation/pipe.h stipulation/proxy.h stipulation/binary.h \
 conditions/circe/circe.h solving/move_effect_journal.h \
 solving/castling_rights.h position/pieceid.h solving/machinery/twin.h \
 conditions/circe/rebirth_square_occupied.h \
 conditions/circe/reborn_piece.h conditions/circe/rebirth_square.h \
 conditions/circe/relevant_capture.h conditions/circe/relevant_piece.h \
 conditions/circe/relevant_side.h output/plaintext/pieces.h \
 position/position.h position/color.h position/color.enum.h \
 pieces/walks/vectors.h debugging/measure.h debugging/assert.h

solving/move_generator.h:

solving/machinery/solve.h:

stipulation/stipulation.h:

stipulation/goals/goals.h:

position/board.h:

utilities/bitmask.h:

utilities/boolean.h:

stipulation/slice_type.h:

stipulation/slice_type.enum.h:

position/side.h:

position/side.enum.h:

pieces/pieces.h:

output/mode.h:

output/mode.enum.h:

solving/machinery/dispatch.h:

debugging/trace.h:

solving/ply.h:

solving/temporary_hacks.h:

solving/pipe.h:

solving/single_piece_move_generator.h:

stipulation/branch.h:

stipulation/structure_traversal.h:

stipulation/slice.h:

stipulation/slice_structural_type.h:

stipulation/slice_structural_type.enum.h:

stipulation/slice_functional_type.h:

stipulation/slice_functional_type.enum.h:

stipulation/traversal.h:

stipulation/pipe.h:

stipulation/proxy.h:

stipulation/binary.h:

conditions/circe/circe.h:

solving/move_effect_journal.h:

solving/castling_rights.h:

position/pieceid.h:

solving/machinery/twin.h:

conditions/circe/rebirth_square_occupied.h:

conditions/circe/reborn_piece.h:

conditions/circe/rebirth_square.h:

conditions/circe/relevant_capture.h:

conditions/circe/relevant_piece.h:

conditions/circe/relevant_side.h:

output/plaintext/pieces.h:

position/position.h:

position/color.h:

position/color.enum.h:

pieces/walks/vectors.h:

debugging/measure.h:

debugging/assert.h:
solving/king_move_generator$(OBJ_SUFFIX): solving/king_move_generator.c \
 solving/king_move_generator.h solving/machinery/solve.h \
 stipulation/stipulation.h stipulation/goals/goals.h position/board.h \
 utilities/bitmask.h utilities/boolean.h stipulation/slice_type.h \
 stipulation/slice_type.enum.h position/side.h position/side.enum.h \
 pieces/pieces.h output/mode.h output/mode.enum.h \
 solving/machinery/dispatch.h debugging/trace.h solving/move_generator.h \
 solving/ply.h stipulation/pipe.h stipulation/structure_traversal.h \
 stipulation/slice.h stipulation/slice_structural_type.h \
 stipulation/slice_structural_type.enum.h \
 stipulation/slice_functional_type.h \
 stipulation/slice_functional_type.enum.h stipulation/traversal.h \
 solving/temporary_hacks.h position/position.h position/color.h \
 position/color.enum.h pieces/walks/vectors.h solving/pipe.h \
 debugging/assert.h

solving/king_move_generator.h:

solving/machinery/solve.h:

stipulation/stipulation.h:

stipulation/goals/goals.h:

position/board.h:

utilities/bitmask.h:

utilities/boolean.h:

stipulation/slice_type.h:

stipulation/slice_type.enum.h:

position/side.h:

position/side.enum.h:

pieces/pieces.h:

output/mode.h:

output/mode.enum.h:

solving/machinery/dispatch.h:

debugging/trace.h:

solving/move_generator.h:

solving/ply.h:

stipulation/pipe.h:

stipulation/structure_traversal.h:

stipulation/slice.h:

stipulation/slice_structural_type.h:

stipulation/slice_structural_type.enum.h:

stipulation/slice_functional_type.h:

stipulation/slice_functional_type.enum.h:

stipulation/traversal.h:

solving/temporary_hacks.h:

position/position.h:

position/color.h:

position/color.enum.h:

pieces/walks/vectors.h:

solving/pipe.h:

debugging/assert.h:
solving/non_king_move_generator$(OBJ_SUFFIX): solving/non_king_move_generator.c \
 solving/non_king_move_generator.h solving/machinery/solve.h \
 stipulation/stipulation.h stipulation/goals/goals.h position/board.h \
 utilities/bitmask.h utilities/boolean.h stipulation/slice_type.h \
 stipulation/slice_type.enum.h position/side.h position/side.enum.h \
 pieces/pieces.h output/mode.h output/mode.enum.h \
 solving/machinery/dispatch.h debugging/trace.h solving/move_generator.h \
 solving/ply.h solving/has_solution_type.h \
 solving/has_solution_type.enum.h stipulation/pipe.h \
 stipulation/structure_traversal.h stipulation/slice.h \
 stipulation/slice_structural_type.h \
 stipulation/slice_structural_type.enum.h \
 stipulation/slice_functional_type.h \
 stipulation/slice_functional_type.enum.h stipulation/traversal.h \
 solving/temporary_hacks.h position/position.h position/color.h \
 position/color.enum.h pieces/walks/vectors.h solving/pipe.h \
 debugging/assert.h

solving/non_king_move_generator.h:

solving/machinery/solve.h:

stipulation/stipulation.h:

stipulation/goals/goals.h:

position/board.h:

utilities/bitmask.h:

utilities/boolean.h:

stipulation/slice_type.h:

stipulation/slice_type.enum.h:

position/side.h:

position/side.enum.h:

pieces/pieces.h:

output/mode.h:

output/mode.enum.h:

solving/machinery/dispatch.h:

debugging/trace.h:

solving/move_generator.h:

solving/ply.h:

solving/has_solution_type.h:

solving/has_solution_type.enum.h:

stipulation/pipe.h:

stipulation/structure_traversal.h:

stipulation/slice.h:

stipulation/slice_structural_type.h:

stipulation/slice_structural_type.enum.h:

stipulation/slice_functional_type.h:

stipulation/slice_functional_type.enum.h:

stipulation/traversal.h:

solving/temporary_hacks.h:

position/position.h:

position/color.h:

position/color.enum.h:

pieces/walks/vectors.h:

solving/pipe.h:

debugging/assert.h:
solving/single_piece_move_generator$(OBJ_SUFFIX): \
 solving/single_piece_move_generator.c \
 solving/single_piece_move_generator.h solving/machinery/solve.h \
 stipulation/stipulation.h stipulation/goals/goals.h position/board.h \
 utilities/bitmask.h utilities/boolean.h stipulation/slice_type.h \
 stipulation/slice_type.enum.h position/side.h position/side.enum.h \
 pieces/pieces.h output/mode.h output/mode.enum.h \
 solving/machinery/dispatch.h debugging/trace.h position/position.h \
 position/color.h position/color.enum.h pieces/walks/vectors.h \
 solving/move_generator.h solving/ply.h stipulation/pipe.h \
 stipulation/structure_traversal.h stipulation/slice.h \
 stipulation/slice_structural_type.h \
 stipulation/slice_structural_type.enum.h \
 stipulation/slice_functional_type.h \
 stipulation/slice_functional_type.enum.h stipulation/traversal.h \
 solving/temporary_hacks.h solving/pipe.h debugging/assert.h

solving/single_piece_move_generator.h:

solving/machinery/solve.h:

stipulation/stipulation.h:

stipulation/goals/goals.h:

position/board.h:

utilities/bitmask.h:

utilities/boolean.h:

stipulation/slice_type.h:

stipulation/slice_type.enum.h:

position/side.h:

position/side.enum.h:

pieces/pieces.h:

output/mode.h:

output/mode.enum.h:

solving/machinery/dispatch.h:

debugging/trace.h:

position/position.h:

position/color.h:

position/color.enum.h:

pieces/walks/vectors.h:

solving/move_generator.h:

solving/ply.h:

stipulation/pipe.h:

stipulation/structure_traversal.h:

stipulation/slice.h:

stipulation/slice_structural_type.h:

stipulation/slice_structural_type.enum.h:

stipulation/slice_functional_type.h:

stipulation/slice_functional_type.enum.h:

stipulation/traversal.h:

solving/temporary_hacks.h:

solving/pipe.h:

debugging/assert.h:
solving/for_each_move$(OBJ_SUFFIX): solving/for_each_move.c solving/for_each_move.h \
 solving/machinery/solve.h stipulation/stipulation.h \
 stipulation/goals/goals.h position/board.h utilities/bitmask.h \
 utilities/boolean.h stipulation/slice_type.h \
 stipulation/slice_type.enum.h position/side.h position/side.enum.h \
 pieces/pieces.h output/mode.h output/mode.enum.h \
 solving/machinery/dispatch.h debugging/trace.h stipulation/pipe.h \
 stipulation/structure_traversal.h stipulation/slice.h \
 stipulation/slice_structural_type.h \
 stipulation/slice_structural_type.enum.h \
 stipulation/slice_functional_type.h \
 stipulation/slice_functional_type.enum.h stipulation/traversal.h \
 solving/has_solution_type.h solving/has_solution_type.enum.h \
 solving/pipe.h stipulation/branch.h stipulation/battle_play/branch.h \
 stipulation/help_play/branch.h solving/find_move.h \
 solving/move_generator.h solving/ply.h debugging/assert.h

solving/for_each_move.h:

solving/machinery/solve.h:

stipulation/stipulation.h:

stipulation/goals/goals.h:

position/board.h:

utilities/bitmask.h:

utilities/boolean.h:

stipulation/slice_type.h:

stipulation/slice_type.enum.h:

position/side.h:

position/side.enum.h:

pieces/pieces.h:

output/mode.h:

output/mode.enum.h:

solving/machinery/dispatch.h:

debugging/trace.h:

stipulation/pipe.h:

stipulation/structure_traversal.h:

stipulation/slice.h:

stipulation/slice_structural_type.h:

stipulation/slice_structural_type.enum.h:

stipulation/slice_functional_type.h:

stipulation/slice_functional_type.enum.h:

stipulation/traversal.h:

solving/has_solution_type.h:

solving/has_solution_type.enum.h:

solving/pipe.h:

stipulation/branch.h:

stipulation/battle_play/branch.h:

stipulation/help_play/branch.h:

solving/find_move.h:

solving/move_generator.h:

solving/ply.h:

debugging/assert.h:
solving/find_move$(OBJ_SUFFIX): solving/find_move.c solving/find_move.h \
 solving/machinery/solve.h stipulation/stipulation.h \
 stipulation/goals/goals.h position/board.h utilities/bitmask.h \
 utilities/boolean.h stipulation/slice_type.h \
 stipulation/slice_type.enum.h position/side.h position/side.enum.h \
 pieces/pieces.h output/mode.h output/mode.enum.h \
 solving/machinery/dispatch.h debugging/trace.h solving/move_generator.h \
 solving/ply.h stipulation/pipe.h stipulation/structure_traversal.h \
 stipulation/slice.h stipulation/slice_structural_type.h \
 stipulation/slice_structural_type.enum.h \
 stipulation/slice_functional_type.h \
 stipulation/slice_functional_type.enum.h stipulation/traversal.h \
 solving/has_solution_type.h solving/has_solution_type.enum.h \
 solving/pipe.h debugging/assert.h

solving/find_move.h:

solving/machinery/solve.h:

stipulation/stipulation.h:

stipulation/goals/goals.h:

position/board.h:

utilities/bitmask.h:

utilities/boolean.h:

stipulation/slice_type.h:

stipulation/slice_type.enum.h:

position/side.h:

position/side.enum.h:

pieces/pieces.h:

output/mode.h:

output/mode.enum.h:

solving/machinery/dispatch.h:

debugging/trace.h:

solving/move_generator.h:

solving/ply.h:

stipulation/pipe.h:

stipulation/structure_traversal.h:

stipulation/slice.h:

stipulation/slice_structural_type.h:

stipulation/slice_structural_type.enum.h:

stipulation/slice_functional_type.h:

stipulation/slice_functional_type.enum.h:

stipulation/traversal.h:

solving/has_solution_type.h:

solving/has_solution_type.enum.h:

solving/pipe.h:

debugging/assert.h:
solving/legal_move_counter$(OBJ_SUFFIX): solving/legal_move_counter.c \
 solving/legal_move_counter.h solving/machinery/solve.h \
 stipulation/stipulation.h stipulation/goals/goals.h position/board.h \
 utilities/bitmask.h utilities/boolean.h stipulation/slice_type.h \
 stipulation/slice_type.enum.h position/side.h position/side.enum.h \
 pieces/pieces.h output/mode.h output/mode.enum.h \
 solving/machinery/dispatch.h debugging/trace.h solving/ply.h \
 solving/pipe.h stipulation/pipe.h stipulation/structure_traversal.h \
 stipulation/slice.h stipulation/slice_structural_type.h \
 stipulation/slice_structural_type.enum.h \
 stipulation/slice_functional_type.h \
 stipulation/slice_functional_type.enum.h stipulation/traversal.h \
 debugging/assert.h

solving/legal_move_counter.h:

solving/machinery/solve.h:

stipulation/stipulation.h:

stipulation/goals/goals.h:

position/board.h:

utilities/bitmask.h:

utilities/boolean.h:

stipulation/slice_type.h:

stipulation/slice_type.enum.h:

position/side.h:

position/side.enum.h:

pieces/pieces.h:

output/mode.h:

output/mode.enum.h:

solving/machinery/dispatch.h:

debugging/trace.h:

solving/ply.h:

solving/pipe.h:

stipulation/pipe.h:

stipulation/structure_traversal.h:

stipulation/slice.h:

stipulation/slice_structural_type.h:

stipulation/slice_structural_type.enum.h:

stipulation/slice_functional_type.h:

stipulation/slice_functional_type.enum.h:

stipulation/traversal.h:

debugging/assert.h:
solving/capture_counter$(OBJ_SUFFIX): solving/capture_counter.c \
 solving/capture_counter.h solving/machinery/solve.h \
 stipulation/stipulation.h stipulation/goals/goals.h position/board.h \
 utilities/bitmask.h utilities/boolean.h stipulation/slice_type.h \
 stipulation/slice_type.enum.h position/side.h position/side.enum.h \
 pieces/pieces.h output/mode.h output/mode.enum.h \
 solving/machinery/dispatch.h debugging/trace.h stipulation/pipe.h \
 stipulation/structure_traversal.h stipulation/slice.h \
 stipulation/slice_structural_type.h \
 stipulation/slice_structural_type.enum.h \
 stipulation/slice_functional_type.h \
 stipulation/slice_functional_type.enum.h stipulation/traversal.h \
 solving/move_effect_journal.h solving/castling_rights.h solving/ply.h \
 position/pieceid.h solving/pipe.h debugging/assert.h

solving/capture_counter.h:

solving/machinery/solve.h:

stipulation/stipulation.h:

stipulation/goals/goals.h:

position/board.h:

utilities/bitmask.h:

utilities/boolean.h:

stipulation/slice_type.h:

stipulation/slice_type.enum.h:

position/side.h:

position/side.enum.h:

pieces/pieces.h:

output/mode.h:

output/mode.enum.h:

solving/machinery/dispatch.h:

debugging/trace.h:

stipulation/pipe.h:

stipulation/structure_traversal.h:

stipulation/slice.h:

stipulation/slice_structural_type.h:

stipulation/slice_structural_type.enum.h:

stipulation/slice_functional_type.h:

stipulation/slice_functional_type.enum.h:

stipulation/traversal.h:

solving/move_effect_journal.h:

solving/castling_rights.h:

solving/ply.h:

position/pieceid.h:

solving/pipe.h:

debugging/assert.h:
solving/castling$(OBJ_SUFFIX): solving/castling.c solving/castling.h \
 stipulation/slice_type.h stipulation/slice_type.enum.h \
 solving/machinery/solve.h stipulation/stipulation.h \
 stipulation/goals/goals.h position/board.h utilities/bitmask.h \
 utilities/boolean.h position/side.h position/side.enum.h pieces/pieces.h \
 output/mode.h output/mode.enum.h solving/machinery/dispatch.h \
 debugging/trace.h solving/castling_rights.h \
 solving/move_effect_journal.h solving/ply.h position/pieceid.h \
 pieces/walks/walks.h solving/move_generator.h solving/check.h \
 solving/fork.h solving/has_solution_type.h \
 solving/has_solution_type.enum.h stipulation/pipe.h \
 stipulation/structure_traversal.h stipulation/slice.h \
 stipulation/slice_structural_type.h \
 stipulation/slice_structural_type.enum.h \
 stipulation/slice_functional_type.h \
 stipulation/slice_functional_type.enum.h stipulation/traversal.h \
 stipulation/proxy.h stipulation/fork.h stipulation/branch.h \
 stipulation/battle_play/branch.h stipulation/help_play/branch.h \
 stipulation/move.h solving/temporary_hacks.h solving/pipe.h \
 pieces/walks/classification.h position/position.h position/color.h \
 position/color.enum.h pieces/walks/vectors.h conditions/conditions.h \
 debugging/assert.h

solving/castling.h:

stipulation/slice_type.h:

stipulation/slice_type.enum.h:

solving/machinery/solve.h:

stipulation/stipulation.h:

stipulation/goals/goals.h:

position/board.h:

utilities/bitmask.h:

utilities/boolean.h:

position/side.h:

position/side.enum.h:

pieces/pieces.h:

output/mode.h:

output/mode.enum.h:

solving/machinery/dispatch.h:

debugging/trace.h:

solving/castling_rights.h:

solving/move_effect_journal.h:

solving/ply.h:

position/pieceid.h:

pieces/walks/walks.h:

solving/move_generator.h:

solving/check.h:

solving/fork.h:

solving/has_solution_type.h:

solving/has_solution_type.enum.h:

stipulation/pipe.h:

stipulation/structure_traversal.h:

stipulation/slice.h:

stipulation/slice_structural_type.h:

stipulation/slice_structural_type.enum.h:

stipulation/slice_functional_type.h:

stipulation/slice_functional_type.enum.h:

stipulation/traversal.h:

stipulation/proxy.h:

stipulation/fork.h:

stipulation/branch.h:

stipulation/battle_play/branch.h:

stipulation/help_play/branch.h:

stipulation/move.h:

solving/temporary_hacks.h:

solving/pipe.h:

pieces/walks/classification.h:

position/position.h:

position/color.h:

position/color.enum.h:

pieces/walks/vectors.h:

conditions/conditions.h:

debugging/assert.h:
solving/trivial_end_filter$(OBJ_SUFFIX): solving/trivial_end_filter.c \
 solving/trivial_end_filter.h solving/machinery/solve.h \
 stipulation/stipulation.h stipulation/goals/goals.h position/board.h \
 utilities/bitmask.h utilities/boolean.h stipulation/slice_type.h \
 stipulation/slice_type.enum.h position/side.h position/side.enum.h \
 pieces/pieces.h output/mode.h output/mode.enum.h \
 solving/machinery/dispatch.h debugging/trace.h \
 solving/has_solution_type.h solving/has_solution_type.enum.h \
 stipulation/testing_pipe.h stipulation/pipe.h \
 stipulation/structure_traversal.h stipulation/slice.h \
 stipulation/slice_structural_type.h \
 stipulation/slice_structural_type.enum.h \
 stipulation/slice_functional_type.h \
 stipulation/slice_functional_type.enum.h stipulation/traversal.h \
 stipulation/proxy.h stipulation/branch.h \
 stipulation/battle_play/branch.h solving/binary.h solving/ply.h \
 debugging/assert.h

solving/trivial_end_filter.h:

solving/machinery/solve.h:

stipulation/stipulation.h:

stipulation/goals/goals.h:

position/board.h:

utilities/bitmask.h:

utilities/boolean.h:

stipulation/slice_type.h:

stipulation/slice_type.enum.h:

position/side.h:

position/side.enum.h:

pieces/pieces.h:

output/mode.h:

output/mode.enum.h:

solving/machinery/dispatch.h:

debugging/trace.h:

solving/has_solution_type.h:

solving/has_solution_type.enum.h:

stipulation/testing_pipe.h:

stipulation/pipe.h:

stipulation/structure_traversal.h:

stipulation/slice.h:

stipulation/slice_structural_type.h:

stipulation/slice_structural_type.enum.h:

stipulation/slice_functional_type.h:

stipulation/slice_functional_type.enum.h:

stipulation/traversal.h:

stipulation/proxy.h:

stipulation/branch.h:

stipulation/battle_play/branch.h:

solving/binary.h:

solving/ply.h:

debugging/assert.h:
solving/avoid_unsolvable$(OBJ_SUFFIX): solving/avoid_unsolvable.c \
 solving/avoid_unsolvable.h solving/machinery/solve.h \
 stipulation/stipulation.h stipulation/goals/goals.h position/board.h \
 utilities/bitmask.h utilities/boolean.h stipulation/slice_type.h \
 stipulation/slice_type.enum.h position/side.h position/side.enum.h \
 pieces/pieces.h output/mode.h output/mode.enum.h \
 solving/machinery/dispatch.h debugging/trace.h solving/binary.h \
 stipulation/pipe.h stipulation/structure_traversal.h stipulation/slice.h \
 stipulation/slice_structural_type.h \
 stipulation/slice_structural_type.enum.h \
 stipulation/slice_functional_type.h \
 stipulation/slice_functional_type.enum.h stipulation/traversal.h \
 solving/has_solution_type.h solving/has_solution_type.enum.h \
 stipulation/proxy.h stipulation/branch.h stipulation/binary.h \
 stipulation/battle_play/branch.h stipulation/help_play/branch.h \
 solving/pipe.h debugging/assert.h

solving/avoid_unsolvable.h:

solving/machinery/solve.h:

stipulation/stipulation.h:

stipulation/goals/goals.h:

position/board.h:

utilities/bitmask.h:

utilities/boolean.h:

stipulation/slice_type.h:

stipulation/slice_type.enum.h:

position/side.h:

position/side.enum.h:

pieces/pieces.h:

output/mode.h:

output/mode.enum.h:

solving/machinery/dispatch.h:

debugging/trace.h:

solving/binary.h:

stipulation/pipe.h:

stipulation/structure_traversal.h:

stipulation/slice.h:

stipulation/slice_structural_type.h:

stipulation/slice_structural_type.enum.h:

stipulation/slice_functional_type.h:

stipulation/slice_functional_type.enum.h:

stipulation/traversal.h:

solving/has_solution_type.h:

solving/has_solution_type.enum.h:

stipulation/proxy.h:

stipulation/branch.h:

stipulation/binary.h:

stipulation/battle_play/branch.h:

stipulation/help_play/branch.h:

solving/pipe.h:

debugging/assert.h:
solving/selfcheck_guard$(OBJ_SUFFIX): solving/selfcheck_guard.c \
 solving/selfcheck_guard.h solving/machinery/solve.h \
 stipulation/stipulation.h stipulation/goals/goals.h position/board.h \
 utilities/bitmask.h utilities/boolean.h stipulation/slice_type.h \
 stipulation/slice_type.enum.h position/side.h position/side.enum.h \
 pieces/pieces.h output/mode.h output/mode.enum.h \
 solving/machinery/dispatch.h debugging/trace.h stipulation/pipe.h \
 stipulation/structure_traversal.h stipulation/slice.h \
 stipulation/slice_structural_type.h \
 stipulation/slice_structural_type.enum.h \
 stipulation/slice_functional_type.h \
 stipulation/slice_functional_type.enum.h stipulation/traversal.h \
 solving/has_solution_type.h solving/has_solution_type.enum.h \
 stipulation/branch.h stipulation/proxy.h stipulation/boolean/and.h \
 stipulation/boolean/true.h \
 stipulation/goals/doublestalemate/reached_tester.h \
 stipulation/battle_play/branch.h stipulation/help_play/branch.h \
 solving/check.h solving/pipe.h debugging/assert.h

solving/selfcheck_guard.h:

solving/machinery/solve.h:

stipulation/stipulation.h:

stipulation/goals/goals.h:

position/board.h:

utilities/bitmask.h:

utilities/boolean.h:

stipulation/slice_type.h:

stipulation/slice_type.enum.h:

position/side.h:

position/side.enum.h:

pieces/pieces.h:

output/mode.h:

output/mode.enum.h:

solving/machinery/dispatch.h:

debugging/trace.h:

stipulation/pipe.h:

stipulation/structure_traversal.h:

stipulation/slice.h:

stipulation/slice_structural_type.h:

stipulation/slice_structural_type.enum.h:

stipulation/slice_functional_type.h:

stipulation/slice_functional_type.enum.h:

stipulation/traversal.h:

solving/has_solution_type.h:

solving/has_solution_type.enum.h:

stipulation/branch.h:

stipulation/proxy.h:

stipulation/boolean/and.h:

stipulation/boolean/true.h:

stipulation/goals/doublestalemate/reached_tester.h:

stipulation/battle_play/branch.h:

stipulation/help_play/branch.h:

solving/check.h:

solving/pipe.h:

debugging/assert.h:
solving/post_move_iteration$(OBJ_SUFFIX): solving/post_move_iteration.c \
 solving/post_move_iteration.h solving/machinery/solve.h \
 stipulation/stipulation.h stipulation/goals/goals.h position/board.h \
 utilities/bitmask.h utilities/boolean.h stipulation/slice_type.h \
 stipulation/slice_type.enum.h position/side.h position/side.enum.h \
 pieces/pieces.h output/mode.h output/mode.enum.h \
 solving/machinery/dispatch.h debugging/trace.h solving/ply.h \
 solving/move_generator.h stipulation/move.h \
 stipulation/structure_traversal.h stipulation/slice.h \
 stipulation/slice_structural_type.h \
 stipulation/slice_structural_type.enum.h \
 stipulation/slice_functional_type.h \
 stipulation/slice_functional_type.enum.h stipulation/traversal.h \
 solving/pipe.h debugging/assert.h

solving/post_move_iteration.h:

solving/machinery/solve.h:

stipulation/stipulation.h:

stipulation/goals/goals.h:

position/board.h:

utilities/bitmask.h:

utilities/boolean.h:

stipulation/slice_type.h:

stipulation/slice_type.enum.h:

position/side.h:

position/side.enum.h:

pieces/pieces.h:

output/mode.h:

output/mode.enum.h:

solving/machinery/dispatch.h:

debugging/trace.h:

solving/ply.h:

solving/move_generator.h:

stipulation/move.h:

stipulation/structure_traversal.h:

stipulation/slice.h:

stipulation/slice_structural_type.h:

stipulation/slice_structural_type.enum.h:

stipulation/slice_functional_type.h:

stipulation/slice_functional_type.enum.h:

stipulation/traversal.h:

solving/pipe.h:

debugging/assert.h:
solving/king_capture_avoider$(OBJ_SUFFIX): solving/king_capture_avoider.c \
 solving/king_capture_avoider.h solving/machinery/solve.h \
 stipulation/stipulation.h stipulation/goals/goals.h position/board.h \
 utilities/bitmask.h utilities/boolean.h stipulation/slice_type.h \
 stipulation/slice_type.enum.h position/side.h position/side.enum.h \
 pieces/pieces.h output/mode.h output/mode.enum.h \
 solving/machinery/dispatch.h debugging/trace.h \
 solving/move_effect_journal.h solving/castling_rights.h solving/ply.h \
 position/pieceid.h solving/pipe.h solving/machinery/twin.h \
 stipulation/branch.h stipulation/structure_traversal.h \
 stipulation/slice.h stipulation/slice_structural_type.h \
 stipulation/slice_structural_type.enum.h \
 stipulation/slice_functional_type.h \
 stipulation/slice_functional_type.enum.h stipulation/traversal.h \
 stipulation/pipe.h debugging/assert.h

solving/king_capture_avoider.h:

solving/machinery/solve.h:

stipulation/stipulation.h:

stipulation/goals/goals.h:

position/board.h:

utilities/bitmask.h:

utilities/boolean.h:

stipulation/slice_type.h:

stipulation/slice_type.enum.h:

position/side.h:

position/side.enum.h:

pieces/pieces.h:

output/mode.h:

output/mode.enum.h:

solving/machinery/dispatch.h:

debugging/trace.h:

solving/move_effect_journal.h:

solving/castling_rights.h:

solving/ply.h:

position/pieceid.h:

solving/pipe.h:

solving/machinery/twin.h:

stipulation/branch.h:

stipulation/structure_traversal.h:

stipulation/slice.h:

stipulation/slice_structural_type.h:

stipulation/slice_structural_type.enum.h:

stipulation/slice_functional_type.h:

stipulation/slice_functional_type.enum.h:

stipulation/traversal.h:

stipulation/pipe.h:

debugging/assert.h:
solving/recursion_stopper$(OBJ_SUFFIX): solving/recursion_stopper.c \
 solving/recursion_stopper.h solving/machinery/solve.h \
 stipulation/stipulation.h stipulation/goals/goals.h position/board.h \
 utilities/bitmask.h utilities/boolean.h stipulation/slice_type.h \
 stipulation/slice_type.enum.h position/side.h position/side.enum.h \
 pieces/pieces.h output/mode.h output/mode.enum.h \
 solving/machinery/dispatch.h debugging/trace.h \
 solving/has_solution_type.h solving/has_solution_type.enum.h \
 stipulation/pipe.h stipulation/structure_traversal.h stipulation/slice.h \
 stipulation/slice_structural_type.h \
 stipulation/slice_structural_type.enum.h \
 stipulation/slice_functional_type.h \
 stipulation/slice_functional_type.enum.h stipulation/traversal.h \
 solving/ply.h solving/pipe.h debugging/assert.h

solving/recursion_stopper.h:

solving/machinery/solve.h:

stipulation/stipulation.h:

stipulation/goals/goals.h:

position/board.h:

utilities/bitmask.h:

utilities/boolean.h:

stipulation/slice_type.h:

stipulation/slice_type.enum.h:

position/side.h:

position/side.enum.h:

pieces/pieces.h:

output/mode.h:

output/mode.enum.h:

solving/machinery/dispatch.h:

debugging/trace.h:

solving/has_solution_type.h:

solving/has_solution_type.enum.h:

stipulation/pipe.h:

stipulation/structure_traversal.h:

stipulation/slice.h:

stipulation/slice_structural_type.h:

stipulation/slice_structural_type.enum.h:

stipulation/slice_functional_type.h:

stipulation/slice_functional_type.enum.h:

stipulation/traversal.h:

solving/ply.h:

solving/pipe.h:

debugging/assert.h:
solving/observation$(OBJ_SUFFIX): solving/observation.c solving/observation.h \
 stipulation/stipulation.h stipulation/goals/goals.h position/board.h \
 utilities/bitmask.h utilities/boolean.h stipulation/slice_type.h \
 stipulation/slice_type.enum.h position/side.h position/side.enum.h \
 pieces/pieces.h output/mode.h output/mode.enum.h \
 solving/machinery/dispatch.h pieces/walks/vectors.h solving/ply.h \
 debugging/trace.h solving/temporary_hacks.h \
 conditions/amu/attack_counter.h solving/machinery/solve.h \
 conditions/backhome.h conditions/beamten.h conditions/bgl.h \
 solving/move_effect_journal.h solving/castling_rights.h \
 position/pieceid.h conditions/brunner.h conditions/central.h \
 conditions/disparate.h conditions/geneva.h conditions/circe/circe.h \
 stipulation/structure_traversal.h stipulation/slice.h \
 stipulation/slice_structural_type.h \
 stipulation/slice_structural_type.enum.h \
 stipulation/slice_functional_type.h \
 stipulation/slice_functional_type.enum.h stipulation/traversal.h \
 solving/machinery/twin.h conditions/circe/rebirth_square_occupied.h \
 conditions/circe/reborn_piece.h conditions/circe/rebirth_square.h \
 conditions/circe/relevant_capture.h conditions/circe/relevant_piece.h \
 conditions/circe/relevant_side.h conditions/imitator.h \
 position/position.h position/color.h position/color.enum.h \
 conditions/lortap.h conditions/mummer.h conditions/patrol.h \
 conditions/provocateurs.h conditions/shielded_kings.h \
 conditions/superguards.h conditions/woozles.h conditions/wormhole.h \
 conditions/madrasi.h conditions/masand.h conditions/eiffel.h \
 conditions/monochrome.h solving/move_generator.h conditions/bichrome.h \
 conditions/grid.h conditions/edgemover.h conditions/annan.h \
 conditions/conditions.h conditions/facetoface.h \
 conditions/marscirce/phantom.h conditions/marscirce/plus.h \
 conditions/marscirce/marscirce.h conditions/singlebox/type3.h \
 conditions/transmuting_kings/transmuting_kings.h \
 conditions/transmuting_kings/reflective_kings.h \
 conditions/transmuting_kings/vaulting_kings.h \
 optimisations/observation.h pieces/walks/hunters.h \
 pieces/attributes/paralysing/paralysing.h pieces/attributes/magic.h \
 solving/has_solution_type.h solving/has_solution_type.enum.h \
 solving/fork.h solving/find_square_observer_tracking_back_from_target.h \
 stipulation/pipe.h stipulation/branch.h debugging/assert.h

solving/observation.h:

stipulation/stipulation.h:

stipulation/goals/goals.h:

position/board.h:

utilities/bitmask.h:

utilities/boolean.h:

stipulation/slice_type.h:

stipulation/slice_type.enum.h:

position/side.h:

position/side.enum.h:

pieces/pieces.h:

output/mode.h:

output/mode.enum.h:

solving/machinery/dispatch.h:

pieces/walks/vectors.h:

solving/ply.h:

debugging/trace.h:

solving/temporary_hacks.h:

conditions/amu/attack_counter.h:

solving/machinery/solve.h:

conditions/backhome.h:

conditions/beamten.h:

conditions/bgl.h:

solving/move_effect_journal.h:

solving/castling_rights.h:

position/pieceid.h:

conditions/brunner.h:

conditions/central.h:

conditions/disparate.h:

conditions/geneva.h:

conditions/circe/circe.h:

stipulation/structure_traversal.h:

stipulation/slice.h:

stipulation/slice_structural_type.h:

stipulation/slice_structural_type.enum.h:

stipulation/slice_functional_type.h:

stipulation/slice_functional_type.enum.h:

stipulation/traversal.h:

solving/machinery/twin.h:

conditions/circe/rebirth_square_occupied.h:

conditions/circe/reborn_piece.h:

conditions/circe/rebirth_square.h:

conditions/circe/relevant_capture.h:

conditions/circe/relevant_piece.h:

conditions/circe/relevant_side.h:

conditions/imitator.h:

position/position.h:

position/color.h:

position/color.enum.h:

conditions/lortap.h:

conditions/mummer.h:

conditions/patrol.h:

conditions/provocateurs.h:

conditions/shielded_kings.h:

conditions/superguards.h:

conditions/woozles.h:

conditions/wormhole.h:

conditions/madrasi.h:

conditions/masand.h:

conditions/eiffel.h:

conditions/monochrome.h:

solving/move_generator.h:

conditions/bichrome.h:

conditions/grid.h:

conditions/edgemover.h:

conditions/annan.h:

conditions/conditions.h:

conditions/facetoface.h:

conditions/marscirce/phantom.h:

conditions/marscirce/plus.h:

conditions/marscirce/marscirce.h:

conditions/singlebox/type3.h:

conditions/transmuting_kings/transmuting_kings.h:

conditions/transmuting_kings/reflective_kings.h:

conditions/transmuting_kings/vaulting_kings.h:

optimisations/observation.h:

pieces/walks/hunters.h:

pieces/attributes/paralysing/paralysing.h:

pieces/attributes/magic.h:

solving/has_solution_type.h:

solving/has_solution_type.enum.h:

solving/fork.h:

solving/find_square_observer_tracking_back_from_target.h:

stipulation/pipe.h:

stipulation/branch.h:

debugging/assert.h:
solving/check$(OBJ_SUFFIX): solving/check.c solving/check.h utilities/boolean.h \
 position/side.h position/side.enum.h stipulation/stipulation.h \
 stipulation/goals/goals.h position/board.h utilities/bitmask.h \
 stipulation/slice_type.h stipulation/slice_type.enum.h pieces/pieces.h \
 output/mode.h output/mode.enum.h position/position.h position/color.h \
 position/color.enum.h pieces/walks/vectors.h conditions/circe/assassin.h \
 solving/machinery/solve.h solving/machinery/dispatch.h debugging/trace.h \
 conditions/extinction.h conditions/sat.h solving/move_effect_journal.h \
 solving/castling_rights.h solving/ply.h position/pieceid.h \
 conditions/vogtlaender.h conditions/antikings.h solving/observation.h \
 solving/temporary_hacks.h solving/move_generator.h stipulation/pipe.h \
 stipulation/structure_traversal.h stipulation/slice.h \
 stipulation/slice_structural_type.h \
 stipulation/slice_structural_type.enum.h \
 stipulation/slice_functional_type.h \
 stipulation/slice_functional_type.enum.h stipulation/traversal.h \
 stipulation/branch.h solving/machinery/twin.h debugging/measure.h \
 debugging/assert.h

solving/check.h:

utilities/boolean.h:

position/side.h:

position/side.enum.h:

stipulation/stipulation.h:

stipulation/goals/goals.h:

position/board.h:

utilities/bitmask.h:

stipulation/slice_type.h:

stipulation/slice_type.enum.h:

pieces/pieces.h:

output/mode.h:

output/mode.enum.h:

position/position.h:

position/color.h:

position/color.enum.h:

pieces/walks/vectors.h:

conditions/circe/assassin.h:

solving/machinery/solve.h:

solving/machinery/dispatch.h:

debugging/trace.h:

conditions/extinction.h:

conditions/sat.h:

solving/move_effect_journal.h:

solving/castling_rights.h:

solving/ply.h:

position/pieceid.h:

conditions/vogtlaender.h:

conditions/antikings.h:

solving/observation.h:

solving/temporary_hacks.h:

solving/move_generator.h:

stipulation/pipe.h:

stipulation/structure_traversal.h:

stipulation/slice.h:

stipulation/slice_structural_type.h:

stipulation/slice_structural_type.enum.h:

stipulation/slice_functional_type.h:

stipulation/slice_functional_type.enum.h:

stipulation/traversal.h:

stipulation/branch.h:

solving/machinery/twin.h:

debugging/measure.h:

debugging/assert.h:
solving/find_square_observer_tracking_back_from_target$(OBJ_SUFFIX): \
 solving/find_square_observer_tracking_back_from_target.c \
 solving/find_square_observer_tracking_back_from_target.h \
 solving/observation.h stipulation/stipulation.h \
 stipulation/goals/goals.h position/board.h utilities/bitmask.h \
 utilities/boolean.h stipulation/slice_type.h \
 stipulation/slice_type.enum.h position/side.h position/side.enum.h \
 pieces/pieces.h output/mode.h output/mode.enum.h \
 solving/machinery/dispatch.h pieces/walks/vectors.h solving/ply.h \
 debugging/trace.h solving/temporary_hacks.h pieces/walks/leapers.h \
 position/position.h position/color.h position/color.enum.h \
 pieces/walks/riders.h pieces/walks/lions.h pieces/walks/roses.h \
 pieces/walks/bouncer.h pieces/walks/pawns/pawn.h \
 pieces/walks/pawns/berolina.h pieces/walks/pawns/reverse.h \
 pieces/walks/chinese/riders.h pieces/walks/chinese/mao.h \
 pieces/walks/chinese/pawn.h pieces/walks/locusts.h pieces/walks/marine.h \
 pieces/walks/hoppers.h solving/move_generator.h \
 solving/machinery/solve.h pieces/walks/bouncy.h \
 pieces/walks/pawns/super.h pieces/walks/cardinal.h \
 pieces/walks/reflecting_bishop.h pieces/walks/combined.h \
 pieces/walks/angle/hoppers.h pieces/walks/angle/angles.h \
 pieces/walks/spiral_springers.h pieces/walks/bob.h pieces/walks/cat.h \
 pieces/walks/skylla_charybdis.h pieces/walks/edgehog.h \
 pieces/walks/kangaroo.h pieces/walks/querquisite.h pieces/walks/ubiubi.h \
 pieces/walks/radial.h pieces/walks/orphan.h pieces/walks/friend.h \
 pieces/walks/hunters.h pieces/walks/sting.h debugging/assert.h

solving/find_square_observer_tracking_back_from_target.h:

solving/observation.h:

stipulation/stipulation.h:

stipulation/goals/goals.h:

position/board.h:

utilities/bitmask.h:

utilities/boolean.h:

stipulation/slice_type.h:

stipulation/slice_type.enum.h:

position/side.h:

position/side.enum.h:

pieces/pieces.h:

output/mode.h:

output/mode.enum.h:

solving/machinery/dispatch.h:

pieces/walks/vectors.h:

solving/ply.h:

debugging/trace.h:

solving/temporary_hacks.h:

pieces/walks/leapers.h:

position/position.h:

position/color.h:

position/color.enum.h:

pieces/walks/riders.h:

pieces/walks/lions.h:

pieces/walks/roses.h:

pieces/walks/bouncer.h:

pieces/walks/pawns/pawn.h:

pieces/walks/pawns/berolina.h:

pieces/walks/pawns/reverse.h:

pieces/walks/chinese/riders.h:

pieces/walks/chinese/mao.h:

pieces/walks/chinese/pawn.h:

pieces/walks/locusts.h:

pieces/walks/marine.h:

pieces/walks/hoppers.h:

solving/move_generator.h:

solving/machinery/solve.h:

pieces/walks/bouncy.h:

pieces/walks/pawns/super.h:

pieces/walks/cardinal.h:

pieces/walks/reflecting_bishop.h:

pieces/walks/combined.h:

pieces/walks/angle/hoppers.h:

pieces/walks/angle/angles.h:

pieces/walks/spiral_springers.h:

pieces/walks/bob.h:

pieces/walks/cat.h:

pieces/walks/skylla_charybdis.h:

pieces/walks/edgehog.h:

pieces/walks/kangaroo.h:

pieces/walks/querquisite.h:

pieces/walks/ubiubi.h:

pieces/walks/radial.h:

pieces/walks/orphan.h:

pieces/walks/friend.h:

pieces/walks/hunters.h:

pieces/walks/sting.h:

debugging/assert.h:
solving/ply$(OBJ_SUFFIX): solving/ply.c solving/ply.h position/side.h \
 position/side.enum.h pieces/walks/pawns/en_passant.h \
 solving/machinery/solve.h stipulation/stipulation.h \
 stipulation/goals/goals.h position/board.h utilities/bitmask.h \
 utilities/boolean.h stipulation/slice_type.h \
 stipulation/slice_type.enum.h pieces/pieces.h output/mode.h \
 output/mode.enum.h solving/machinery/dispatch.h debugging/trace.h \
 solving/move_effect_journal.h solving/castling_rights.h \
 position/pieceid.h solving/observation.h pieces/walks/vectors.h \
 solving/temporary_hacks.h solving/post_move_iteration.h \
 solving/move_generator.h debugging/assert.h

solving/ply.h:

position/side.h:

position/side.enum.h:

pieces/walks/pawns/en_passant.h:

solving/machinery/solve.h:

stipulation/stipulation.h:

stipulation/goals/goals.h:

position/board.h:

utilities/bitmask.h:

utilities/boolean.h:

stipulation/slice_type.h:

stipulation/slice_type.enum.h:

pieces/pieces.h:

output/mode.h:

output/mode.enum.h:

solving/machinery/dispatch.h:

debugging/trace.h:

solving/move_effect_journal.h:

solving/castling_rights.h:

position/pieceid.h:

solving/observation.h:

pieces/walks/vectors.h:

solving/temporary_hacks.h:

solving/post_move_iteration.h:

solving/move_generator.h:

debugging/assert.h:
solving/proofgames$(OBJ_SUFFIX): solving/proofgames.c debugging/assert.h \
 stipulation/stipulation.h stipulation/goals/goals.h position/board.h \
 utilities/bitmask.h utilities/boolean.h stipulation/slice_type.h \
 stipulation/slice_type.enum.h position/side.h position/side.enum.h \
 pieces/pieces.h output/mode.h output/mode.enum.h conditions/conditions.h \
 position/position.h position/color.h position/color.enum.h \
 pieces/walks/vectors.h DHT/dhtbcmem.h solving/proofgames.h \
 solving/has_solution_type.h solving/has_solution_type.enum.h \
 solving/machinery/solve.h solving/machinery/dispatch.h debugging/trace.h \
 solving/castling.h solving/castling_rights.h \
 solving/move_effect_journal.h solving/ply.h position/pieceid.h \
 solving/pipe.h pieces/walks/pawns/en_passant.h solving/observation.h \
 solving/temporary_hacks.h optimisations/hash.h \
 optimisations/intelligent/moves_left.h \
 optimisations/orthodox_check_directions.h \
 optimisations/intelligent/count_nr_of_moves.h \
 optimisations/intelligent/intelligent.h \
 optimisations/intelligent/piece_usage.h \
 optimisations/intelligent/piece_usage.enum.h optimisations/observation.h \
 platform/maxtime.h conditions/circe/circe.h \
 stipulation/structure_traversal.h stipulation/slice.h \
 stipulation/slice_structural_type.h \
 stipulation/slice_structural_type.enum.h \
 stipulation/slice_functional_type.h \
 stipulation/slice_functional_type.enum.h stipulation/traversal.h \
 solving/machinery/twin.h conditions/circe/rebirth_square_occupied.h \
 conditions/circe/reborn_piece.h conditions/circe/rebirth_square.h \
 conditions/circe/relevant_capture.h conditions/circe/relevant_piece.h \
 conditions/circe/relevant_side.h conditions/duellists.h \
 conditions/haunted_chess.h position/underworld.h \
 conditions/transmuting_kings/vaulting_kings.h conditions/imitator.h \
 pieces/attributes/neutral/neutral.h pieces/walks/walks.h \
 output/plaintext/language_dependant.h options/options.h \
 input/plaintext/twin.h input/plaintext/token.h \
 input/plaintext/language.h input/plaintext/line.h conditions/mummer.h \
 conditions/anticirce/anticirce.h conditions/sentinelles.h \
 output/plaintext/message.h output/plaintext/pieces.h

debugging/assert.h:

stipulation/stipulation.h:

stipulation/goals/goals.h:

position/board.h:

utilities/bitmask.h:

utilities/boolean.h:

stipulation/slice_type.h:

stipulation/slice_type.enum.h:

position/side.h:

position/side.enum.h:

pieces/pieces.h:

output/mode.h:

output/mode.enum.h:

conditions/conditions.h:

position/position.h:

position/color.h:

position/color.enum.h:

pieces/walks/vectors.h:

DHT/dhtbcmem.h:

solving/proofgames.h:

solving/has_solution_type.h:

solving/has_solution_type.enum.h:

solving/machinery/solve.h:

solving/machinery/dispatch.h:

debugging/trace.h:

solving/castling.h:

solving/castling_rights.h:

solving/move_effect_journal.h:

solving/ply.h:

position/pieceid.h:

solving/pipe.h:

pieces/walks/pawns/en_passant.h:

solving/observation.h:

solving/temporary_hacks.h:

optimisations/hash.h:

optimisations/intelligent/moves_left.h:

optimisations/orthodox_check_directions.h:

optimisations/intelligent/count_nr_of_moves.h:

optimisations/intelligent/intelligent.h:

optimisations/intelligent/piece_usage.h:

optimisations/intelligent/piece_usage.enum.h:

optimisations/observation.h:

platform/maxtime.h:

conditions/circe/circe.h:

stipulation/structure_traversal.h:

stipulation/slice.h:

stipulation/slice_structural_type.h:

stipulation/slice_structural_type.enum.h:

stipulation/slice_functional_type.h:

stipulation/slice_functional_type.enum.h:

stipulation/traversal.h:

solving/machinery/twin.h:

conditions/circe/rebirth_square_occupied.h:

conditions/circe/reborn_piece.h:

conditions/circe/rebirth_square.h:

conditions/circe/relevant_capture.h:

conditions/circe/relevant_piece.h:

conditions/circe/relevant_side.h:

conditions/duellists.h:

conditions/haunted_chess.h:

position/underworld.h:

conditions/transmuting_kings/vaulting_kings.h:

conditions/imitator.h:

pieces/attributes/neutral/neutral.h:

pieces/walks/walks.h:

output/plaintext/language_dependant.h:

options/options.h:

input/plaintext/twin.h:

input/plaintext/token.h:

input/plaintext/language.h:

input/plaintext/line.h:

conditions/mummer.h:

conditions/anticirce/anticirce.h:

conditions/sentinelles.h:

output/plaintext/message.h:

output/plaintext/pieces.h:
solving/binary$(OBJ_SUFFIX): solving/binary.c solving/binary.h \
 solving/machinery/solve.h stipulation/stipulation.h \
 stipulation/goals/goals.h position/board.h utilities/bitmask.h \
 utilities/boolean.h stipulation/slice_type.h \
 stipulation/slice_type.enum.h position/side.h position/side.enum.h \
 pieces/pieces.h output/mode.h output/mode.enum.h \
 solving/machinery/dispatch.h debugging/trace.h debugging/assert.h

solving/binary.h:

solving/machinery/solve.h:

stipulation/stipulation.h:

stipulation/goals/goals.h:

position/board.h:

utilities/bitmask.h:

utilities/boolean.h:

stipulation/slice_type.h:

stipulation/slice_type.enum.h:

position/side.h:

position/side.enum.h:

pieces/pieces.h:

output/mode.h:

output/mode.enum.h:

solving/machinery/dispatch.h:

debugging/trace.h:

debugging/assert.h:
solving/constraint$(OBJ_SUFFIX): solving/constraint.c solving/constraint.h \
 solving/machinery/solve.h stipulation/stipulation.h \
 stipulation/goals/goals.h position/board.h utilities/bitmask.h \
 utilities/boolean.h stipulation/slice_type.h \
 stipulation/slice_type.enum.h position/side.h position/side.enum.h \
 pieces/pieces.h output/mode.h output/mode.enum.h \
 solving/machinery/dispatch.h debugging/trace.h \
 solving/has_solution_type.h solving/has_solution_type.enum.h \
 solving/fork.h solving/pipe.h debugging/assert.h

solving/constraint.h:

solving/machinery/solve.h:

stipulation/stipulation.h:

stipulation/goals/goals.h:

position/board.h:

utilities/bitmask.h:

utilities/boolean.h:

stipulation/slice_type.h:

stipulation/slice_type.enum.h:

position/side.h:

position/side.enum.h:

pieces/pieces.h:

output/mode.h:

output/mode.enum.h:

solving/machinery/dispatch.h:

debugging/trace.h:

solving/has_solution_type.h:

solving/has_solution_type.enum.h:

solving/fork.h:

solving/pipe.h:

debugging/assert.h:
solving/dead_end$(OBJ_SUFFIX): solving/dead_end.c solving/dead_end.h \
 solving/machinery/solve.h stipulation/stipulation.h \
 stipulation/goals/goals.h position/board.h utilities/bitmask.h \
 utilities/boolean.h stipulation/slice_type.h \
 stipulation/slice_type.enum.h position/side.h position/side.enum.h \
 pieces/pieces.h output/mode.h output/mode.enum.h \
 solving/machinery/dispatch.h debugging/trace.h stipulation/pipe.h \
 stipulation/structure_traversal.h stipulation/slice.h \
 stipulation/slice_structural_type.h \
 stipulation/slice_structural_type.enum.h \
 stipulation/slice_functional_type.h \
 stipulation/slice_functional_type.enum.h stipulation/traversal.h \
 stipulation/branch.h stipulation/battle_play/branch.h \
 stipulation/help_play/branch.h solving/has_solution_type.h \
 solving/has_solution_type.enum.h solving/avoid_unsolvable.h \
 solving/moves_traversal.h solving/pipe.h debugging/assert.h

solving/dead_end.h:

solving/machinery/solve.h:

stipulation/stipulation.h:

stipulation/goals/goals.h:

position/board.h:

utilities/bitmask.h:

utilities/boolean.h:

stipulation/slice_type.h:

stipulation/slice_type.enum.h:

position/side.h:

position/side.enum.h:

pieces/pieces.h:

output/mode.h:

output/mode.enum.h:

solving/machinery/dispatch.h:

debugging/trace.h:

stipulation/pipe.h:

stipulation/structure_traversal.h:

stipulation/slice.h:

stipulation/slice_structural_type.h:

stipulation/slice_structural_type.enum.h:

stipulation/slice_functional_type.h:

stipulation/slice_functional_type.enum.h:

stipulation/traversal.h:

stipulation/branch.h:

stipulation/battle_play/branch.h:

stipulation/help_play/branch.h:

solving/has_solution_type.h:

solving/has_solution_type.enum.h:

solving/avoid_unsolvable.h:

solving/moves_traversal.h:

solving/pipe.h:

debugging/assert.h:
solving/dummy_move$(OBJ_SUFFIX): solving/dummy_move.c solving/dummy_move.h \
 solving/machinery/solve.h stipulation/stipulation.h \
 stipulation/goals/goals.h position/board.h utilities/bitmask.h \
 utilities/boolean.h stipulation/slice_type.h \
 stipulation/slice_type.enum.h position/side.h position/side.enum.h \
 pieces/pieces.h output/mode.h output/mode.enum.h \
 solving/machinery/dispatch.h debugging/trace.h solving/ply.h \
 solving/has_solution_type.h solving/has_solution_type.enum.h \
 solving/pipe.h debugging/assert.h

solving/dummy_move.h:

solving/machinery/solve.h:

stipulation/stipulation.h:

stipulation/goals/goals.h:

position/board.h:

utilities/bitmask.h:

utilities/boolean.h:

stipulation/slice_type.h:

stipulation/slice_type.enum.h:

position/side.h:

position/side.enum.h:

pieces/pieces.h:

output/mode.h:

output/mode.enum.h:

solving/machinery/dispatch.h:

debugging/trace.h:

solving/ply.h:

solving/has_solution_type.h:

solving/has_solution_type.enum.h:

solving/pipe.h:

debugging/assert.h:
solving/end_of_branch$(OBJ_SUFFIX): solving/end_of_branch.c solving/end_of_branch.h \
 solving/machinery/solve.h stipulation/stipulation.h \
 stipulation/goals/goals.h position/board.h utilities/bitmask.h \
 utilities/boolean.h stipulation/slice_type.h \
 stipulation/slice_type.enum.h position/side.h position/side.enum.h \
 pieces/pieces.h output/mode.h output/mode.enum.h \
 solving/machinery/dispatch.h debugging/trace.h \
 solving/has_solution_type.h solving/has_solution_type.enum.h \
 solving/fork.h solving/pipe.h debugging/assert.h

solving/end_of_branch.h:

solving/machinery/solve.h:

stipulation/stipulation.h:

stipulation/goals/goals.h:

position/board.h:

utilities/bitmask.h:

utilities/boolean.h:

stipulation/slice_type.h:

stipulation/slice_type.enum.h:

position/side.h:

position/side.enum.h:

pieces/pieces.h:

output/mode.h:

output/mode.enum.h:

solving/machinery/dispatch.h:

debugging/trace.h:

solving/has_solution_type.h:

solving/has_solution_type.enum.h:

solving/fork.h:

solving/pipe.h:

debugging/assert.h:
solving/end_of_branch_goal$(OBJ_SUFFIX): solving/end_of_branch_goal.c \
 solving/end_of_branch_goal.h solving/machinery/solve.h \
 stipulation/stipulation.h stipulation/goals/goals.h position/board.h \
 utilities/bitmask.h utilities/boolean.h stipulation/slice_type.h \
 stipulation/slice_type.enum.h position/side.h position/side.enum.h \
 pieces/pieces.h output/mode.h output/mode.enum.h \
 solving/machinery/dispatch.h debugging/trace.h \
 solving/has_solution_type.h solving/has_solution_type.enum.h \
 debugging/assert.h

solving/end_of_branch_goal.h:

solving/machinery/solve.h:

stipulation/stipulation.h:

stipulation/goals/goals.h:

position/board.h:

utilities/bitmask.h:

utilities/boolean.h:

stipulation/slice_type.h:

stipulation/slice_type.enum.h:

position/side.h:

position/side.enum.h:

pieces/pieces.h:

output/mode.h:

output/mode.enum.h:

solving/machinery/dispatch.h:

debugging/trace.h:

solving/has_solution_type.h:

solving/has_solution_type.enum.h:

debugging/assert.h:
solving/setplay_fork$(OBJ_SUFFIX): solving/setplay_fork.c solving/setplay_fork.h \
 solving/machinery/solve.h stipulation/stipulation.h \
 stipulation/goals/goals.h position/board.h utilities/bitmask.h \
 utilities/boolean.h stipulation/slice_type.h \
 stipulation/slice_type.enum.h position/side.h position/side.enum.h \
 pieces/pieces.h output/mode.h output/mode.enum.h \
 solving/machinery/dispatch.h debugging/trace.h \
 solving/has_solution_type.h solving/has_solution_type.enum.h \
 solving/pipe.h debugging/assert.h

solving/setplay_fork.h:

solving/machinery/solve.h:

stipulation/stipulation.h:

stipulation/goals/goals.h:

position/board.h:

utilities/bitmask.h:

utilities/boolean.h:

stipulation/slice_type.h:

stipulation/slice_type.enum.h:

position/side.h:

position/side.enum.h:

pieces/pieces.h:

output/mode.h:

output/mode.enum.h:

solving/machinery/dispatch.h:

debugging/trace.h:

solving/has_solution_type.h:

solving/has_solution_type.enum.h:

solving/pipe.h:

debugging/assert.h:
solving/if_then_else$(OBJ_SUFFIX): solving/if_then_else.c solving/if_then_else.h \
 solving/machinery/solve.h stipulation/stipulation.h \
 stipulation/goals/goals.h position/board.h utilities/bitmask.h \
 utilities/boolean.h stipulation/slice_type.h \
 stipulation/slice_type.enum.h position/side.h position/side.enum.h \
 pieces/pieces.h output/mode.h output/mode.enum.h \
 solving/machinery/dispatch.h debugging/trace.h \
 solving/has_solution_type.h solving/has_solution_type.enum.h \
 debugging/assert.h

solving/if_then_else.h:

solving/machinery/solve.h:

stipulation/stipulation.h:

stipulation/goals/goals.h:

position/board.h:

utilities/bitmask.h:

utilities/boolean.h:

stipulation/slice_type.h:

stipulation/slice_type.enum.h:

position/side.h:

position/side.enum.h:

pieces/pieces.h:

output/mode.h:

output/mode.enum.h:

solving/machinery/dispatch.h:

debugging/trace.h:

solving/has_solution_type.h:

solving/has_solution_type.enum.h:

debugging/assert.h:
solving/move_inverter$(OBJ_SUFFIX): solving/move_inverter.c solving/move_inverter.h \
 solving/machinery/solve.h stipulation/stipulation.h \
 stipulation/goals/goals.h position/board.h utilities/bitmask.h \
 utilities/boolean.h stipulation/slice_type.h \
 stipulation/slice_type.enum.h position/side.h position/side.enum.h \
 pieces/pieces.h output/mode.h output/mode.enum.h \
 solving/machinery/dispatch.h debugging/trace.h \
 solving/has_solution_type.h solving/has_solution_type.enum.h \
 solving/pipe.h debugging/assert.h

solving/move_inverter.h:

solving/machinery/solve.h:

stipulation/stipulation.h:

stipulation/goals/goals.h:

position/board.h:

utilities/bitmask.h:

utilities/boolean.h:

stipulation/slice_type.h:

stipulation/slice_type.enum.h:

position/side.h:

position/side.enum.h:

pieces/pieces.h:

output/mode.h:

output/mode.enum.h:

solving/machinery/dispatch.h:

debugging/trace.h:

solving/has_solution_type.h:

solving/has_solution_type.enum.h:

solving/pipe.h:

debugging/assert.h:
solving/move_played$(OBJ_SUFFIX): solving/move_played.c solving/move_played.h \
 solving/machinery/solve.h stipulation/stipulation.h \
 stipulation/goals/goals.h position/board.h utilities/bitmask.h \
 utilities/boolean.h stipulation/slice_type.h \
 stipulation/slice_type.enum.h position/side.h position/side.enum.h \
 pieces/pieces.h output/mode.h output/mode.enum.h \
 solving/machinery/dispatch.h debugging/trace.h \
 solving/has_solution_type.h solving/has_solution_type.enum.h \
 debugging/assert.h

solving/move_played.h:

solving/machinery/solve.h:

stipulation/stipulation.h:

stipulation/goals/goals.h:

position/board.h:

utilities/bitmask.h:

utilities/boolean.h:

stipulation/slice_type.h:

stipulation/slice_type.enum.h:

position/side.h:

position/side.enum.h:

pieces/pieces.h:

output/mode.h:

output/mode.enum.h:

solving/machinery/dispatch.h:

debugging/trace.h:

solving/has_solution_type.h:

solving/has_solution_type.enum.h:

debugging/assert.h:
solving/move_player$(OBJ_SUFFIX): solving/move_player.c solving/move_player.h \
 solving/machinery/solve.h stipulation/stipulation.h \
 stipulation/goals/goals.h position/board.h utilities/bitmask.h \
 utilities/boolean.h stipulation/slice_type.h \
 stipulation/slice_type.enum.h position/side.h position/side.enum.h \
 pieces/pieces.h output/mode.h output/mode.enum.h \
 solving/machinery/dispatch.h debugging/trace.h \
 pieces/walks/pawns/en_passant.h solving/move_effect_journal.h \
 solving/castling_rights.h solving/ply.h position/pieceid.h \
 solving/observation.h pieces/walks/vectors.h solving/temporary_hacks.h \
 position/position.h position/color.h position/color.enum.h \
 solving/move_generator.h solving/has_solution_type.h \
 solving/has_solution_type.enum.h solving/pipe.h debugging/assert.h

solving/move_player.h:

solving/machinery/solve.h:

stipulation/stipulation.h:

stipulation/goals/goals.h:

position/board.h:

utilities/bitmask.h:

utilities/boolean.h:

stipulation/slice_type.h:

stipulation/slice_type.enum.h:

position/side.h:

position/side.enum.h:

pieces/pieces.h:

output/mode.h:

output/mode.enum.h:

solving/machinery/dispatch.h:

debugging/trace.h:

pieces/walks/pawns/en_passant.h:

solving/move_effect_journal.h:

solving/castling_rights.h:

solving/ply.h:

position/pieceid.h:

solving/observation.h:

pieces/walks/vectors.h:

solving/temporary_hacks.h:

position/position.h:

position/color.h:

position/color.enum.h:

solving/move_generator.h:

solving/has_solution_type.h:

solving/has_solution_type.enum.h:

solving/pipe.h:

debugging/assert.h:
solving/moves_traversal$(OBJ_SUFFIX): solving/moves_traversal.c \
 solving/moves_traversal.h stipulation/stipulation.h \
 stipulation/goals/goals.h position/board.h utilities/bitmask.h \
 utilities/boolean.h stipulation/slice_type.h \
 stipulation/slice_type.enum.h position/side.h position/side.enum.h \
 pieces/pieces.h output/mode.h output/mode.enum.h stipulation/traversal.h \
 stipulation/slice.h stipulation/slice_structural_type.h \
 stipulation/slice_structural_type.enum.h \
 stipulation/slice_functional_type.h \
 stipulation/slice_functional_type.enum.h solving/has_solution_type.h \
 solving/has_solution_type.enum.h stipulation/branch.h \
 stipulation/structure_traversal.h debugging/trace.h debugging/assert.h

solving/moves_traversal.h:

stipulation/stipulation.h:

stipulation/goals/goals.h:

position/board.h:

utilities/bitmask.h:

utilities/boolean.h:

stipulation/slice_type.h:

stipulation/slice_type.enum.h:

position/side.h:

position/side.enum.h:

pieces/pieces.h:

output/mode.h:

output/mode.enum.h:

stipulation/traversal.h:

stipulation/slice.h:

stipulation/slice_structural_type.h:

stipulation/slice_structural_type.enum.h:

stipulation/slice_functional_type.h:

stipulation/slice_functional_type.enum.h:

solving/has_solution_type.h:

solving/has_solution_type.enum.h:

stipulation/branch.h:

stipulation/structure_traversal.h:

debugging/trace.h:

debugging/assert.h:
solving/temporary_hacks$(OBJ_SUFFIX): solving/temporary_hacks.c \
 solving/temporary_hacks.h stipulation/stipulation.h \
 stipulation/goals/goals.h position/board.h utilities/bitmask.h \
 utilities/boolean.h stipulation/slice_type.h \
 stipulation/slice_type.enum.h position/side.h position/side.enum.h \
 pieces/pieces.h output/mode.h output/mode.enum.h conditions/conditions.h \
 position/position.h position/color.h position/color.enum.h \
 pieces/walks/vectors.h stipulation/pipe.h \
 stipulation/structure_traversal.h stipulation/slice.h \
 stipulation/slice_structural_type.h \
 stipulation/slice_structural_type.enum.h \
 stipulation/slice_functional_type.h \
 stipulation/slice_functional_type.enum.h stipulation/traversal.h \
 solving/has_solution_type.h solving/has_solution_type.enum.h \
 stipulation/branch.h stipulation/proxy.h stipulation/conditional_pipe.h \
 stipulation/move_inverter.h stipulation/boolean/true.h \
 stipulation/boolean/false.h stipulation/boolean/not.h \
 stipulation/boolean/or.h stipulation/goals/reached_tester.h \
 stipulation/goals/mate/reached_tester.h solving/machinery/solve.h \
 solving/machinery/dispatch.h debugging/trace.h \
 stipulation/goals/immobile/reached_tester.h \
 stipulation/goals/any/reached_tester.h \
 stipulation/goals/capture/reached_tester.h \
 stipulation/goals/king_capture/reached_tester.h \
 stipulation/battle_play/branch.h stipulation/help_play/branch.h \
 solving/legal_move_counter.h solving/ply.h conditions/circe/circe.h \
 solving/move_effect_journal.h solving/castling_rights.h \
 position/pieceid.h solving/machinery/twin.h \
 conditions/circe/rebirth_square_occupied.h \
 conditions/circe/reborn_piece.h conditions/circe/rebirth_square.h \
 conditions/circe/relevant_capture.h conditions/circe/relevant_piece.h \
 conditions/circe/relevant_side.h conditions/anticirce/anticirce.h \
 conditions/sat.h \
 optimisations/count_nr_opponent_moves/opponent_moves_counter.h \
 solving/move_generator.h \
 optimisations/count_nr_opponent_moves/move_generator.h \
 debugging/assert.h

solving/temporary_hacks.h:

stipulation/stipulation.h:

stipulation/goals/goals.h:

position/board.h:

utilities/bitmask.h:

utilities/boolean.h:

stipulation/slice_type.h:

stipulation/slice_type.enum.h:

position/side.h:

position/side.enum.h:

pieces/pieces.h:

output/mode.h:

output/mode.enum.h:

conditions/conditions.h:

position/position.h:

position/color.h:

position/color.enum.h:

pieces/walks/vectors.h:

stipulation/pipe.h:

stipulation/structure_traversal.h:

stipulation/slice.h:

stipulation/slice_structural_type.h:

stipulation/slice_structural_type.enum.h:

stipulation/slice_functional_type.h:

stipulation/slice_functional_type.enum.h:

stipulation/traversal.h:

solving/has_solution_type.h:

solving/has_solution_type.enum.h:

stipulation/branch.h:

stipulation/proxy.h:

stipulation/conditional_pipe.h:

stipulation/move_inverter.h:

stipulation/boolean/true.h:

stipulation/boolean/false.h:

stipulation/boolean/not.h:

stipulation/boolean/or.h:

stipulation/goals/reached_tester.h:

stipulation/goals/mate/reached_tester.h:

solving/machinery/solve.h:

solving/machinery/dispatch.h:

debugging/trace.h:

stipulation/goals/immobile/reached_tester.h:

stipulation/goals/any/reached_tester.h:

stipulation/goals/capture/reached_tester.h:

stipulation/goals/king_capture/reached_tester.h:

stipulation/battle_play/branch.h:

stipulation/help_play/branch.h:

solving/legal_move_counter.h:

solving/ply.h:

conditions/circe/circe.h:

solving/move_effect_journal.h:

solving/castling_rights.h:

position/pieceid.h:

solving/machinery/twin.h:

conditions/circe/rebirth_square_occupied.h:

conditions/circe/reborn_piece.h:

conditions/circe/rebirth_square.h:

conditions/circe/relevant_capture.h:

conditions/circe/relevant_piece.h:

conditions/circe/relevant_side.h:

conditions/anticirce/anticirce.h:

conditions/sat.h:

optimisations/count_nr_opponent_moves/opponent_moves_counter.h:

solving/move_generator.h:

optimisations/count_nr_opponent_moves/move_generator.h:

debugging/assert.h:
solving/pipe$(OBJ_SUFFIX): solving/pipe.c solving/pipe.h solving/machinery/solve.h \
 stipulation/stipulation.h stipulation/goals/goals.h position/board.h \
 utilities/bitmask.h utilities/boolean.h stipulation/slice_type.h \
 stipulation/slice_type.enum.h position/side.h position/side.enum.h \
 pieces/pieces.h output/mode.h output/mode.enum.h \
 solving/machinery/dispatch.h debugging/trace.h \
 solving/has_solution_type.h solving/has_solution_type.enum.h \
 debugging/assert.h

solving/pipe.h:

solving/machinery/solve.h:

stipulation/stipulation.h:

stipulation/goals/goals.h:

position/board.h:

utilities/bitmask.h:

utilities/boolean.h:

stipulation/slice_type.h:

stipulation/slice_type.enum.h:

position/side.h:

position/side.enum.h:

pieces/pieces.h:

output/mode.h:

output/mode.enum.h:

solving/machinery/dispatch.h:

debugging/trace.h:

solving/has_solution_type.h:

solving/has_solution_type.enum.h:

debugging/assert.h:
solving/fork$(OBJ_SUFFIX): solving/fork.c solving/fork.h solving/machinery/solve.h \
 stipulation/stipulation.h stipulation/goals/goals.h position/board.h \
 utilities/bitmask.h utilities/boolean.h stipulation/slice_type.h \
 stipulation/slice_type.enum.h position/side.h position/side.enum.h \
 pieces/pieces.h output/mode.h output/mode.enum.h \
 solving/machinery/dispatch.h debugging/trace.h \
 solving/has_solution_type.h solving/has_solution_type.enum.h \
 debugging/assert.h

solving/fork.h:

solving/machinery/solve.h:

stipulation/stipulation.h:

stipulation/goals/goals.h:

position/board.h:

utilities/bitmask.h:

utilities/boolean.h:

stipulation/slice_type.h:

stipulation/slice_type.enum.h:

position/side.h:

position/side.enum.h:

pieces/pieces.h:

output/mode.h:

output/mode.enum.h:

solving/machinery/dispatch.h:

debugging/trace.h:

solving/has_solution_type.h:

solving/has_solution_type.enum.h:

debugging/assert.h:
solving/end_of_branch_tester$(OBJ_SUFFIX): solving/end_of_branch_tester.c \
 solving/end_of_branch_tester.h stipulation/stipulation.h \
 stipulation/goals/goals.h position/board.h utilities/bitmask.h \
 utilities/boolean.h stipulation/slice_type.h \
 stipulation/slice_type.enum.h position/side.h position/side.enum.h \
 pieces/pieces.h output/mode.h output/mode.enum.h stipulation/proxy.h \
 stipulation/pipe.h stipulation/structure_traversal.h stipulation/slice.h \
 stipulation/slice_structural_type.h \
 stipulation/slice_structural_type.enum.h \
 stipulation/slice_functional_type.h \
 stipulation/slice_functional_type.enum.h stipulation/traversal.h \
 stipulation/branch.h stipulation/conditional_pipe.h \
 solving/fork_on_remaining.h solving/machinery/solve.h \
 solving/machinery/dispatch.h debugging/trace.h debugging/assert.h

solving/end_of_branch_tester.h:

stipulation/stipulation.h:

stipulation/goals/goals.h:

position/board.h:

utilities/bitmask.h:

utilities/boolean.h:

stipulation/slice_type.h:

stipulation/slice_type.enum.h:

position/side.h:

position/side.enum.h:

pieces/pieces.h:

output/mode.h:

output/mode.enum.h:

stipulation/proxy.h:

stipulation/pipe.h:

stipulation/structure_traversal.h:

stipulation/slice.h:

stipulation/slice_structural_type.h:

stipulation/slice_structural_type.enum.h:

stipulation/slice_functional_type.h:

stipulation/slice_functional_type.enum.h:

stipulation/traversal.h:

stipulation/branch.h:

stipulation/conditional_pipe.h:

solving/fork_on_remaining.h:

solving/machinery/solve.h:

solving/machinery/dispatch.h:

debugging/trace.h:

debugging/assert.h:
solving/dead_end$(OBJ_SUFFIX): solving/dead_end.c solving/dead_end.h \
 solving/machinery/solve.h stipulation/stipulation.h \
 stipulation/goals/goals.h position/board.h utilities/bitmask.h \
 utilities/boolean.h stipulation/slice_type.h \
 stipulation/slice_type.enum.h position/side.h position/side.enum.h \
 pieces/pieces.h output/mode.h output/mode.enum.h \
 solving/machinery/dispatch.h debugging/trace.h stipulation/pipe.h \
 stipulation/structure_traversal.h stipulation/slice.h \
 stipulation/slice_structural_type.h \
 stipulation/slice_structural_type.enum.h \
 stipulation/slice_functional_type.h \
 stipulation/slice_functional_type.enum.h stipulation/traversal.h \
 stipulation/branch.h stipulation/battle_play/branch.h \
 stipulation/help_play/branch.h solving/has_solution_type.h \
 solving/has_solution_type.enum.h solving/avoid_unsolvable.h \
 solving/moves_traversal.h solving/pipe.h debugging/assert.h

solving/dead_end.h:

solving/machinery/solve.h:

stipulation/stipulation.h:

stipulation/goals/goals.h:

position/board.h:

utilities/bitmask.h:

utilities/boolean.h:

stipulation/slice_type.h:

stipulation/slice_type.enum.h:

position/side.h:

position/side.enum.h:

pieces/pieces.h:

output/mode.h:

output/mode.enum.h:

solving/machinery/dispatch.h:

debugging/trace.h:

stipulation/pipe.h:

stipulation/structure_traversal.h:

stipulation/slice.h:

stipulation/slice_structural_type.h:

stipulation/slice_structural_type.enum.h:

stipulation/slice_functional_type.h:

stipulation/slice_functional_type.enum.h:

stipulation/traversal.h:

stipulation/branch.h:

stipulation/battle_play/branch.h:

stipulation/help_play/branch.h:

solving/has_solution_type.h:

solving/has_solution_type.enum.h:

solving/avoid_unsolvable.h:

solving/moves_traversal.h:

solving/pipe.h:

debugging/assert.h:
