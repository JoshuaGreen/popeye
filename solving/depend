solving/testers$(OBJ_SUFFIX): solving/testers.c solving/testers.h \
 stipulation/stipulation.h stipulation/goals/goals.h position/board.h \
 utilities/bitmask.h utilities/boolean.h stipulation/slice_type.h \
 utilities/enumeration.h position/position.h pieces/pieces.h \
 pieces/walks/vectors.h output/mode.h stipulation/fork.h \
 stipulation/structure_traversal.h stipulation/slice.h \
 stipulation/traversal.h solving/solve.h stipulation/has_solution_type.h \
 stipulation/if_then_else.h stipulation/testing_pipe.h stipulation/pipe.h \
 stipulation/conditional_pipe.h stipulation/branch.h stipulation/binary.h \
 stipulation/boolean/true.h stipulation/battle_play/branch.h \
 stipulation/help_play/branch.h debugging/trace.h solving/ply.h \
 debugging/assert.h

solving/testers.h:

stipulation/stipulation.h:

stipulation/goals/goals.h:

position/board.h:

utilities/bitmask.h:

utilities/boolean.h:

stipulation/slice_type.h:

utilities/enumeration.h:

position/position.h:

pieces/pieces.h:

pieces/walks/vectors.h:

output/mode.h:

stipulation/fork.h:

stipulation/structure_traversal.h:

stipulation/slice.h:

stipulation/traversal.h:

solving/solve.h:

stipulation/has_solution_type.h:

stipulation/if_then_else.h:

stipulation/testing_pipe.h:

stipulation/pipe.h:

stipulation/conditional_pipe.h:

stipulation/branch.h:

stipulation/binary.h:

stipulation/boolean/true.h:

stipulation/battle_play/branch.h:

stipulation/help_play/branch.h:

debugging/trace.h:

solving/ply.h:

debugging/assert.h:
solving/move_effect_journal$(OBJ_SUFFIX): solving/move_effect_journal.c \
 solving/move_effect_journal.h solving/solve.h stipulation/stipulation.h \
 stipulation/goals/goals.h position/board.h utilities/bitmask.h \
 utilities/boolean.h stipulation/slice_type.h utilities/enumeration.h \
 position/position.h pieces/pieces.h pieces/walks/vectors.h output/mode.h \
 solving/castling_rights.h solving/ply.h position/pieceid.h \
 solving/castling.h conditions/bgl.h conditions/duellists.h \
 conditions/imitator.h conditions/actuated_revolving_centre.h \
 conditions/haunted_chess.h conditions/sat.h conditions/circe/parachute.h \
 pieces/walks/pawns/en_passant.h solving/observation.h \
 stipulation/temporary_hacks.h pieces/attributes/neutral/neutral.h \
 pieces/attributes/neutral/half.h debugging/trace.h debugging/assert.h

solving/move_effect_journal.h:

solving/solve.h:

stipulation/stipulation.h:

stipulation/goals/goals.h:

position/board.h:

utilities/bitmask.h:

utilities/boolean.h:

stipulation/slice_type.h:

utilities/enumeration.h:

position/position.h:

pieces/pieces.h:

pieces/walks/vectors.h:

output/mode.h:

solving/castling_rights.h:

solving/ply.h:

position/pieceid.h:

solving/castling.h:

conditions/bgl.h:

conditions/duellists.h:

conditions/imitator.h:

conditions/actuated_revolving_centre.h:

conditions/haunted_chess.h:

conditions/sat.h:

conditions/circe/parachute.h:

pieces/walks/pawns/en_passant.h:

solving/observation.h:

stipulation/temporary_hacks.h:

pieces/attributes/neutral/neutral.h:

pieces/attributes/neutral/half.h:

debugging/trace.h:

debugging/assert.h:
solving/find_shortest$(OBJ_SUFFIX): solving/find_shortest.c solving/find_shortest.h \
 solving/solve.h stipulation/stipulation.h stipulation/goals/goals.h \
 position/board.h utilities/bitmask.h utilities/boolean.h \
 stipulation/slice_type.h utilities/enumeration.h position/position.h \
 pieces/pieces.h pieces/walks/vectors.h output/mode.h options/options.h \
 stipulation/proxy.h stipulation/pipe.h stipulation/structure_traversal.h \
 stipulation/slice.h stipulation/traversal.h \
 stipulation/has_solution_type.h stipulation/branch.h \
 stipulation/battle_play/branch.h solving/avoid_unsolvable.h \
 solving/find_by_increasing_length.h solving/fork_on_remaining.h \
 debugging/trace.h solving/ply.h debugging/assert.h

solving/find_shortest.h:

solving/solve.h:

stipulation/stipulation.h:

stipulation/goals/goals.h:

position/board.h:

utilities/bitmask.h:

utilities/boolean.h:

stipulation/slice_type.h:

utilities/enumeration.h:

position/position.h:

pieces/pieces.h:

pieces/walks/vectors.h:

output/mode.h:

options/options.h:

stipulation/proxy.h:

stipulation/pipe.h:

stipulation/structure_traversal.h:

stipulation/slice.h:

stipulation/traversal.h:

stipulation/has_solution_type.h:

stipulation/branch.h:

stipulation/battle_play/branch.h:

solving/avoid_unsolvable.h:

solving/find_by_increasing_length.h:

solving/fork_on_remaining.h:

debugging/trace.h:

solving/ply.h:

debugging/assert.h:
solving/find_by_increasing_length$(OBJ_SUFFIX): solving/find_by_increasing_length.c \
 solving/find_by_increasing_length.h solving/solve.h \
 stipulation/stipulation.h stipulation/goals/goals.h position/board.h \
 utilities/bitmask.h utilities/boolean.h stipulation/slice_type.h \
 utilities/enumeration.h position/position.h pieces/pieces.h \
 pieces/walks/vectors.h output/mode.h stipulation/branch.h \
 stipulation/structure_traversal.h stipulation/slice.h \
 stipulation/traversal.h stipulation/pipe.h stipulation/proxy.h \
 stipulation/help_play/branch.h debugging/trace.h solving/ply.h \
 debugging/assert.h

solving/find_by_increasing_length.h:

solving/solve.h:

stipulation/stipulation.h:

stipulation/goals/goals.h:

position/board.h:

utilities/bitmask.h:

utilities/boolean.h:

stipulation/slice_type.h:

utilities/enumeration.h:

position/position.h:

pieces/pieces.h:

pieces/walks/vectors.h:

output/mode.h:

stipulation/branch.h:

stipulation/structure_traversal.h:

stipulation/slice.h:

stipulation/traversal.h:

stipulation/pipe.h:

stipulation/proxy.h:

stipulation/help_play/branch.h:

debugging/trace.h:

solving/ply.h:

debugging/assert.h:
solving/fork_on_remaining$(OBJ_SUFFIX): solving/fork_on_remaining.c \
 solving/fork_on_remaining.h solving/solve.h stipulation/stipulation.h \
 stipulation/goals/goals.h position/board.h utilities/bitmask.h \
 utilities/boolean.h stipulation/slice_type.h utilities/enumeration.h \
 position/position.h pieces/pieces.h pieces/walks/vectors.h output/mode.h \
 stipulation/has_solution_type.h stipulation/binary.h \
 stipulation/structure_traversal.h stipulation/slice.h \
 stipulation/traversal.h debugging/trace.h solving/ply.h \
 debugging/assert.h

solving/fork_on_remaining.h:

solving/solve.h:

stipulation/stipulation.h:

stipulation/goals/goals.h:

position/board.h:

utilities/bitmask.h:

utilities/boolean.h:

stipulation/slice_type.h:

utilities/enumeration.h:

position/position.h:

pieces/pieces.h:

pieces/walks/vectors.h:

output/mode.h:

stipulation/has_solution_type.h:

stipulation/binary.h:

stipulation/structure_traversal.h:

stipulation/slice.h:

stipulation/traversal.h:

debugging/trace.h:

solving/ply.h:

debugging/assert.h:
solving/play_suppressor$(OBJ_SUFFIX): solving/play_suppressor.c \
 solving/play_suppressor.h solving/solve.h stipulation/stipulation.h \
 stipulation/goals/goals.h position/board.h utilities/bitmask.h \
 utilities/boolean.h stipulation/slice_type.h utilities/enumeration.h \
 position/position.h pieces/pieces.h pieces/walks/vectors.h output/mode.h \
 stipulation/pipe.h stipulation/structure_traversal.h stipulation/slice.h \
 stipulation/traversal.h stipulation/battle_play/branch.h \
 debugging/trace.h solving/ply.h

solving/play_suppressor.h:

solving/solve.h:

stipulation/stipulation.h:

stipulation/goals/goals.h:

position/board.h:

utilities/bitmask.h:

utilities/boolean.h:

stipulation/slice_type.h:

utilities/enumeration.h:

position/position.h:

pieces/pieces.h:

pieces/walks/vectors.h:

output/mode.h:

stipulation/pipe.h:

stipulation/structure_traversal.h:

stipulation/slice.h:

stipulation/traversal.h:

stipulation/battle_play/branch.h:

debugging/trace.h:

solving/ply.h:
solving/move_generator$(OBJ_SUFFIX): solving/move_generator.c \
 solving/move_generator.h solving/solve.h stipulation/stipulation.h \
 stipulation/goals/goals.h position/board.h utilities/bitmask.h \
 utilities/boolean.h stipulation/slice_type.h utilities/enumeration.h \
 position/position.h pieces/pieces.h pieces/walks/vectors.h output/mode.h \
 solving/ply.h conditions/annan.h conditions/conditions.h \
 conditions/beamten.h conditions/central.h conditions/disparate.h \
 conditions/eiffel.h conditions/facetoface.h solving/observation.h \
 stipulation/temporary_hacks.h conditions/madrasi.h \
 conditions/marscirce/marscirce.h conditions/marscirce/anti.h \
 conditions/marscirce/plus.h conditions/messigny.h conditions/patrol.h \
 conditions/marscirce/phantom.h conditions/singlebox/type3.h \
 conditions/castling_chess.h conditions/exchange_castling.h \
 conditions/transmuting_kings/transmuting_kings.h \
 conditions/transmuting_kings/super.h \
 conditions/transmuting_kings/reflective_kings.h \
 conditions/transmuting_kings/vaulting_kings.h \
 pieces/attributes/paralysing/paralysing.h pieces/walks/generate_moves.h \
 solving/single_piece_move_generator.h solving/castling.h \
 solving/castling_rights.h solving/move_effect_journal.h \
 position/pieceid.h solving/king_move_generator.h stipulation/branch.h \
 stipulation/structure_traversal.h stipulation/slice.h \
 stipulation/traversal.h stipulation/pipe.h debugging/measure.h \
 debugging/trace.h output/plaintext/pieces.h debugging/assert.h

solving/move_generator.h:

solving/solve.h:

stipulation/stipulation.h:

stipulation/goals/goals.h:

position/board.h:

utilities/bitmask.h:

utilities/boolean.h:

stipulation/slice_type.h:

utilities/enumeration.h:

position/position.h:

pieces/pieces.h:

pieces/walks/vectors.h:

output/mode.h:

solving/ply.h:

conditions/annan.h:

conditions/conditions.h:

conditions/beamten.h:

conditions/central.h:

conditions/disparate.h:

conditions/eiffel.h:

conditions/facetoface.h:

solving/observation.h:

stipulation/temporary_hacks.h:

conditions/madrasi.h:

conditions/marscirce/marscirce.h:

conditions/marscirce/anti.h:

conditions/marscirce/plus.h:

conditions/messigny.h:

conditions/patrol.h:

conditions/marscirce/phantom.h:

conditions/singlebox/type3.h:

conditions/castling_chess.h:

conditions/exchange_castling.h:

conditions/transmuting_kings/transmuting_kings.h:

conditions/transmuting_kings/super.h:

conditions/transmuting_kings/reflective_kings.h:

conditions/transmuting_kings/vaulting_kings.h:

pieces/attributes/paralysing/paralysing.h:

pieces/walks/generate_moves.h:

solving/single_piece_move_generator.h:

solving/castling.h:

solving/castling_rights.h:

solving/move_effect_journal.h:

position/pieceid.h:

solving/king_move_generator.h:

stipulation/branch.h:

stipulation/structure_traversal.h:

stipulation/slice.h:

stipulation/traversal.h:

stipulation/pipe.h:

debugging/measure.h:

debugging/trace.h:

output/plaintext/pieces.h:

debugging/assert.h:
solving/king_move_generator$(OBJ_SUFFIX): solving/king_move_generator.c \
 solving/king_move_generator.h solving/solve.h stipulation/stipulation.h \
 stipulation/goals/goals.h position/board.h utilities/bitmask.h \
 utilities/boolean.h stipulation/slice_type.h utilities/enumeration.h \
 position/position.h pieces/pieces.h pieces/walks/vectors.h output/mode.h \
 solving/move_generator.h solving/ply.h stipulation/pipe.h \
 stipulation/structure_traversal.h stipulation/slice.h \
 stipulation/traversal.h stipulation/temporary_hacks.h debugging/trace.h \
 debugging/assert.h

solving/king_move_generator.h:

solving/solve.h:

stipulation/stipulation.h:

stipulation/goals/goals.h:

position/board.h:

utilities/bitmask.h:

utilities/boolean.h:

stipulation/slice_type.h:

utilities/enumeration.h:

position/position.h:

pieces/pieces.h:

pieces/walks/vectors.h:

output/mode.h:

solving/move_generator.h:

solving/ply.h:

stipulation/pipe.h:

stipulation/structure_traversal.h:

stipulation/slice.h:

stipulation/traversal.h:

stipulation/temporary_hacks.h:

debugging/trace.h:

debugging/assert.h:
solving/non_king_move_generator$(OBJ_SUFFIX): solving/non_king_move_generator.c \
 solving/non_king_move_generator.h solving/solve.h \
 stipulation/stipulation.h stipulation/goals/goals.h position/board.h \
 utilities/bitmask.h utilities/boolean.h stipulation/slice_type.h \
 utilities/enumeration.h position/position.h pieces/pieces.h \
 pieces/walks/vectors.h output/mode.h solving/move_generator.h \
 solving/ply.h stipulation/has_solution_type.h stipulation/pipe.h \
 stipulation/structure_traversal.h stipulation/slice.h \
 stipulation/traversal.h stipulation/temporary_hacks.h debugging/trace.h \
 debugging/assert.h

solving/non_king_move_generator.h:

solving/solve.h:

stipulation/stipulation.h:

stipulation/goals/goals.h:

position/board.h:

utilities/bitmask.h:

utilities/boolean.h:

stipulation/slice_type.h:

utilities/enumeration.h:

position/position.h:

pieces/pieces.h:

pieces/walks/vectors.h:

output/mode.h:

solving/move_generator.h:

solving/ply.h:

stipulation/has_solution_type.h:

stipulation/pipe.h:

stipulation/structure_traversal.h:

stipulation/slice.h:

stipulation/traversal.h:

stipulation/temporary_hacks.h:

debugging/trace.h:

debugging/assert.h:
solving/single_piece_move_generator$(OBJ_SUFFIX): \
 solving/single_piece_move_generator.c \
 solving/single_piece_move_generator.h solving/solve.h \
 stipulation/stipulation.h stipulation/goals/goals.h position/board.h \
 utilities/bitmask.h utilities/boolean.h stipulation/slice_type.h \
 utilities/enumeration.h position/position.h pieces/pieces.h \
 pieces/walks/vectors.h output/mode.h solving/move_generator.h \
 solving/ply.h stipulation/pipe.h stipulation/structure_traversal.h \
 stipulation/slice.h stipulation/traversal.h \
 stipulation/temporary_hacks.h debugging/trace.h debugging/assert.h

solving/single_piece_move_generator.h:

solving/solve.h:

stipulation/stipulation.h:

stipulation/goals/goals.h:

position/board.h:

utilities/bitmask.h:

utilities/boolean.h:

stipulation/slice_type.h:

utilities/enumeration.h:

position/position.h:

pieces/pieces.h:

pieces/walks/vectors.h:

output/mode.h:

solving/move_generator.h:

solving/ply.h:

stipulation/pipe.h:

stipulation/structure_traversal.h:

stipulation/slice.h:

stipulation/traversal.h:

stipulation/temporary_hacks.h:

debugging/trace.h:

debugging/assert.h:
solving/for_each_move$(OBJ_SUFFIX): solving/for_each_move.c solving/for_each_move.h \
 solving/solve.h stipulation/stipulation.h stipulation/goals/goals.h \
 position/board.h utilities/bitmask.h utilities/boolean.h \
 stipulation/slice_type.h utilities/enumeration.h position/position.h \
 pieces/pieces.h pieces/walks/vectors.h output/mode.h stipulation/pipe.h \
 stipulation/structure_traversal.h stipulation/slice.h \
 stipulation/traversal.h stipulation/has_solution_type.h \
 stipulation/branch.h stipulation/battle_play/branch.h \
 stipulation/help_play/branch.h stipulation/move_player.h \
 solving/find_move.h solving/move_generator.h solving/ply.h \
 debugging/trace.h debugging/assert.h

solving/for_each_move.h:

solving/solve.h:

stipulation/stipulation.h:

stipulation/goals/goals.h:

position/board.h:

utilities/bitmask.h:

utilities/boolean.h:

stipulation/slice_type.h:

utilities/enumeration.h:

position/position.h:

pieces/pieces.h:

pieces/walks/vectors.h:

output/mode.h:

stipulation/pipe.h:

stipulation/structure_traversal.h:

stipulation/slice.h:

stipulation/traversal.h:

stipulation/has_solution_type.h:

stipulation/branch.h:

stipulation/battle_play/branch.h:

stipulation/help_play/branch.h:

stipulation/move_player.h:

solving/find_move.h:

solving/move_generator.h:

solving/ply.h:

debugging/trace.h:

debugging/assert.h:
solving/find_move$(OBJ_SUFFIX): solving/find_move.c solving/find_move.h \
 solving/solve.h stipulation/stipulation.h stipulation/goals/goals.h \
 position/board.h utilities/bitmask.h utilities/boolean.h \
 stipulation/slice_type.h utilities/enumeration.h position/position.h \
 pieces/pieces.h pieces/walks/vectors.h output/mode.h \
 solving/move_generator.h solving/ply.h stipulation/pipe.h \
 stipulation/structure_traversal.h stipulation/slice.h \
 stipulation/traversal.h stipulation/has_solution_type.h \
 debugging/trace.h debugging/assert.h

solving/find_move.h:

solving/solve.h:

stipulation/stipulation.h:

stipulation/goals/goals.h:

position/board.h:

utilities/bitmask.h:

utilities/boolean.h:

stipulation/slice_type.h:

utilities/enumeration.h:

position/position.h:

pieces/pieces.h:

pieces/walks/vectors.h:

output/mode.h:

solving/move_generator.h:

solving/ply.h:

stipulation/pipe.h:

stipulation/structure_traversal.h:

stipulation/slice.h:

stipulation/traversal.h:

stipulation/has_solution_type.h:

debugging/trace.h:

debugging/assert.h:
solving/legal_move_counter$(OBJ_SUFFIX): solving/legal_move_counter.c \
 solving/legal_move_counter.h solving/solve.h stipulation/stipulation.h \
 stipulation/goals/goals.h position/board.h utilities/bitmask.h \
 utilities/boolean.h stipulation/slice_type.h utilities/enumeration.h \
 position/position.h pieces/pieces.h pieces/walks/vectors.h output/mode.h \
 solving/ply.h stipulation/pipe.h stipulation/structure_traversal.h \
 stipulation/slice.h stipulation/traversal.h debugging/trace.h \
 debugging/assert.h

solving/legal_move_counter.h:

solving/solve.h:

stipulation/stipulation.h:

stipulation/goals/goals.h:

position/board.h:

utilities/bitmask.h:

utilities/boolean.h:

stipulation/slice_type.h:

utilities/enumeration.h:

position/position.h:

pieces/pieces.h:

pieces/walks/vectors.h:

output/mode.h:

solving/ply.h:

stipulation/pipe.h:

stipulation/structure_traversal.h:

stipulation/slice.h:

stipulation/traversal.h:

debugging/trace.h:

debugging/assert.h:
solving/capture_counter$(OBJ_SUFFIX): solving/capture_counter.c \
 solving/capture_counter.h solving/solve.h stipulation/stipulation.h \
 stipulation/goals/goals.h position/board.h utilities/bitmask.h \
 utilities/boolean.h stipulation/slice_type.h utilities/enumeration.h \
 position/position.h pieces/pieces.h pieces/walks/vectors.h output/mode.h \
 stipulation/pipe.h stipulation/structure_traversal.h stipulation/slice.h \
 stipulation/traversal.h solving/move_effect_journal.h \
 solving/castling_rights.h solving/ply.h position/pieceid.h \
 debugging/trace.h debugging/assert.h

solving/capture_counter.h:

solving/solve.h:

stipulation/stipulation.h:

stipulation/goals/goals.h:

position/board.h:

utilities/bitmask.h:

utilities/boolean.h:

stipulation/slice_type.h:

utilities/enumeration.h:

position/position.h:

pieces/pieces.h:

pieces/walks/vectors.h:

output/mode.h:

stipulation/pipe.h:

stipulation/structure_traversal.h:

stipulation/slice.h:

stipulation/traversal.h:

solving/move_effect_journal.h:

solving/castling_rights.h:

solving/ply.h:

position/pieceid.h:

debugging/trace.h:

debugging/assert.h:
solving/castling$(OBJ_SUFFIX): solving/castling.c solving/castling.h \
 stipulation/slice_type.h utilities/enumeration.h solving/solve.h \
 stipulation/stipulation.h stipulation/goals/goals.h position/board.h \
 utilities/bitmask.h utilities/boolean.h position/position.h \
 pieces/pieces.h pieces/walks/vectors.h output/mode.h \
 solving/castling_rights.h solving/move_effect_journal.h solving/ply.h \
 position/pieceid.h pieces/walks/walks.h solving/move_generator.h \
 solving/check.h stipulation/has_solution_type.h stipulation/pipe.h \
 stipulation/structure_traversal.h stipulation/slice.h \
 stipulation/traversal.h stipulation/proxy.h stipulation/fork.h \
 stipulation/branch.h stipulation/battle_play/branch.h \
 stipulation/help_play/branch.h stipulation/move.h \
 stipulation/temporary_hacks.h debugging/trace.h \
 pieces/walks/classification.h conditions/conditions.h debugging/assert.h

solving/castling.h:

stipulation/slice_type.h:

utilities/enumeration.h:

solving/solve.h:

stipulation/stipulation.h:

stipulation/goals/goals.h:

position/board.h:

utilities/bitmask.h:

utilities/boolean.h:

position/position.h:

pieces/pieces.h:

pieces/walks/vectors.h:

output/mode.h:

solving/castling_rights.h:

solving/move_effect_journal.h:

solving/ply.h:

position/pieceid.h:

pieces/walks/walks.h:

solving/move_generator.h:

solving/check.h:

stipulation/has_solution_type.h:

stipulation/pipe.h:

stipulation/structure_traversal.h:

stipulation/slice.h:

stipulation/traversal.h:

stipulation/proxy.h:

stipulation/fork.h:

stipulation/branch.h:

stipulation/battle_play/branch.h:

stipulation/help_play/branch.h:

stipulation/move.h:

stipulation/temporary_hacks.h:

debugging/trace.h:

pieces/walks/classification.h:

conditions/conditions.h:

debugging/assert.h:
solving/trivial_end_filter$(OBJ_SUFFIX): solving/trivial_end_filter.c \
 solving/trivial_end_filter.h solving/solve.h stipulation/stipulation.h \
 stipulation/goals/goals.h position/board.h utilities/bitmask.h \
 utilities/boolean.h stipulation/slice_type.h utilities/enumeration.h \
 position/position.h pieces/pieces.h pieces/walks/vectors.h output/mode.h \
 stipulation/has_solution_type.h stipulation/testing_pipe.h \
 stipulation/pipe.h stipulation/structure_traversal.h stipulation/slice.h \
 stipulation/traversal.h stipulation/proxy.h stipulation/branch.h \
 stipulation/battle_play/branch.h solving/ply.h debugging/trace.h \
 debugging/assert.h

solving/trivial_end_filter.h:

solving/solve.h:

stipulation/stipulation.h:

stipulation/goals/goals.h:

position/board.h:

utilities/bitmask.h:

utilities/boolean.h:

stipulation/slice_type.h:

utilities/enumeration.h:

position/position.h:

pieces/pieces.h:

pieces/walks/vectors.h:

output/mode.h:

stipulation/has_solution_type.h:

stipulation/testing_pipe.h:

stipulation/pipe.h:

stipulation/structure_traversal.h:

stipulation/slice.h:

stipulation/traversal.h:

stipulation/proxy.h:

stipulation/branch.h:

stipulation/battle_play/branch.h:

solving/ply.h:

debugging/trace.h:

debugging/assert.h:
solving/avoid_unsolvable$(OBJ_SUFFIX): solving/avoid_unsolvable.c \
 solving/avoid_unsolvable.h solving/solve.h stipulation/stipulation.h \
 stipulation/goals/goals.h position/board.h utilities/bitmask.h \
 utilities/boolean.h stipulation/slice_type.h utilities/enumeration.h \
 position/position.h pieces/pieces.h pieces/walks/vectors.h output/mode.h \
 stipulation/pipe.h stipulation/structure_traversal.h stipulation/slice.h \
 stipulation/traversal.h stipulation/has_solution_type.h \
 stipulation/proxy.h stipulation/branch.h stipulation/binary.h \
 stipulation/battle_play/branch.h stipulation/help_play/branch.h \
 debugging/trace.h solving/ply.h debugging/assert.h

solving/avoid_unsolvable.h:

solving/solve.h:

stipulation/stipulation.h:

stipulation/goals/goals.h:

position/board.h:

utilities/bitmask.h:

utilities/boolean.h:

stipulation/slice_type.h:

utilities/enumeration.h:

position/position.h:

pieces/pieces.h:

pieces/walks/vectors.h:

output/mode.h:

stipulation/pipe.h:

stipulation/structure_traversal.h:

stipulation/slice.h:

stipulation/traversal.h:

stipulation/has_solution_type.h:

stipulation/proxy.h:

stipulation/branch.h:

stipulation/binary.h:

stipulation/battle_play/branch.h:

stipulation/help_play/branch.h:

debugging/trace.h:

solving/ply.h:

debugging/assert.h:
solving/selfcheck_guard$(OBJ_SUFFIX): solving/selfcheck_guard.c \
 solving/selfcheck_guard.h solving/solve.h stipulation/stipulation.h \
 stipulation/goals/goals.h position/board.h utilities/bitmask.h \
 utilities/boolean.h stipulation/slice_type.h utilities/enumeration.h \
 position/position.h pieces/pieces.h pieces/walks/vectors.h output/mode.h \
 stipulation/pipe.h stipulation/structure_traversal.h stipulation/slice.h \
 stipulation/traversal.h stipulation/has_solution_type.h \
 stipulation/branch.h stipulation/proxy.h stipulation/boolean/and.h \
 stipulation/boolean/true.h \
 stipulation/goals/doublestalemate/reached_tester.h \
 stipulation/battle_play/branch.h stipulation/help_play/branch.h \
 solving/check.h debugging/trace.h solving/ply.h debugging/assert.h

solving/selfcheck_guard.h:

solving/solve.h:

stipulation/stipulation.h:

stipulation/goals/goals.h:

position/board.h:

utilities/bitmask.h:

utilities/boolean.h:

stipulation/slice_type.h:

utilities/enumeration.h:

position/position.h:

pieces/pieces.h:

pieces/walks/vectors.h:

output/mode.h:

stipulation/pipe.h:

stipulation/structure_traversal.h:

stipulation/slice.h:

stipulation/traversal.h:

stipulation/has_solution_type.h:

stipulation/branch.h:

stipulation/proxy.h:

stipulation/boolean/and.h:

stipulation/boolean/true.h:

stipulation/goals/doublestalemate/reached_tester.h:

stipulation/battle_play/branch.h:

stipulation/help_play/branch.h:

solving/check.h:

debugging/trace.h:

solving/ply.h:

debugging/assert.h:
solving/post_move_iteration$(OBJ_SUFFIX): solving/post_move_iteration.c \
 solving/post_move_iteration.h solving/solve.h stipulation/stipulation.h \
 stipulation/goals/goals.h position/board.h utilities/bitmask.h \
 utilities/boolean.h stipulation/slice_type.h utilities/enumeration.h \
 position/position.h pieces/pieces.h pieces/walks/vectors.h output/mode.h \
 solving/ply.h solving/move_generator.h stipulation/move.h \
 stipulation/structure_traversal.h stipulation/slice.h \
 stipulation/traversal.h debugging/trace.h debugging/assert.h

solving/post_move_iteration.h:

solving/solve.h:

stipulation/stipulation.h:

stipulation/goals/goals.h:

position/board.h:

utilities/bitmask.h:

utilities/boolean.h:

stipulation/slice_type.h:

utilities/enumeration.h:

position/position.h:

pieces/pieces.h:

pieces/walks/vectors.h:

output/mode.h:

solving/ply.h:

solving/move_generator.h:

stipulation/move.h:

stipulation/structure_traversal.h:

stipulation/slice.h:

stipulation/traversal.h:

debugging/trace.h:

debugging/assert.h:
solving/solve$(OBJ_SUFFIX): solving/solve.c solving/solve.h \
 stipulation/stipulation.h stipulation/goals/goals.h position/board.h \
 utilities/bitmask.h utilities/boolean.h stipulation/slice_type.h \
 utilities/enumeration.h position/position.h pieces/pieces.h \
 pieces/walks/vectors.h output/mode.h stipulation/fork.h \
 stipulation/structure_traversal.h stipulation/slice.h \
 stipulation/traversal.h solving/proofgames.h \
 conditions/amu/mate_filter.h conditions/amu/attack_counter.h \
 solving/ply.h conditions/anticirce/cheylan.h \
 conditions/anticirce/magic_square.h conditions/anticirce/clone.h \
 conditions/anticirce/couscous.h conditions/bgl.h \
 solving/move_effect_journal.h solving/castling_rights.h \
 position/pieceid.h conditions/blackchecks.h conditions/koeko/koeko.h \
 conditions/koeko/contact_grid.h conditions/koeko/anti.h \
 conditions/koeko/new.h conditions/circe/antipodes.h \
 conditions/circe/chameleon.h pieces/attributes/chameleon.h \
 conditions/circe/diametral.h \
 conditions/circe/circuit_by_rebirth_special.h conditions/circe/clone.h \
 conditions/circe/couscous.h conditions/circe/diagram.h \
 conditions/circe/exchange_by_rebirth_special.h conditions/circe/file.h \
 conditions/circe/steingewinn_filter.h conditions/circe/assassin.h \
 conditions/circe/frischauf.h conditions/circe/super.h \
 conditions/circe/april.h conditions/circe/takemake.h \
 conditions/circe/mirror.h conditions/circe/pwc.h conditions/circe/rank.h \
 conditions/circe/symmetry.h conditions/circe/rex_inclusive.h \
 conditions/circe/parachute.h conditions/exclusive.h utilities/table.h \
 conditions/extinction.h conditions/ohneschach.h \
 conditions/maff/immobility_tester.h conditions/owu/immobility_tester.h \
 conditions/immune.h conditions/provocateurs.h conditions/lortap.h \
 conditions/patrol.h conditions/monochrome.h solving/move_generator.h \
 conditions/bichrome.h conditions/ultraschachzwang/legality_tester.h \
 conditions/singlebox/type1.h conditions/conditions.h \
 conditions/singlebox/type2.h pieces/walks/pawns/promotee_sequence.h \
 conditions/singlebox/type3.h solving/observation.h \
 stipulation/temporary_hacks.h conditions/patience.h conditions/isardam.h \
 conditions/sat.h conditions/dynasty.h conditions/masand.h \
 conditions/messigny.h conditions/oscillating_kings.h \
 conditions/actuated_revolving_centre.h \
 conditions/actuated_revolving_board.h conditions/republican.h \
 conditions/circe/capture_fork.h conditions/circe/circe.h \
 conditions/circe/cage.h conditions/circe/double_agents.h \
 conditions/circe/kamikaze.h conditions/circe/parrain.h \
 conditions/circe/volage.h conditions/anticirce/anticirce.h \
 conditions/anticirce/super.h conditions/anticirce/parrain.h \
 conditions/sentinelles.h conditions/duellists.h \
 conditions/haunted_chess.h conditions/ghost_chess.h conditions/kobul.h \
 conditions/andernach.h conditions/antiandernach.h \
 conditions/chameleon_pursuit.h conditions/norsk.h conditions/protean.h \
 conditions/einstein/einstein.h conditions/einstein/reverse.h \
 conditions/einstein/anti.h conditions/einstein/en_passant.h \
 conditions/traitor.h conditions/volage.h conditions/magic_square.h \
 conditions/tibet.h conditions/degradierung.h \
 conditions/marscirce/phantom.h conditions/marscirce/anti.h \
 conditions/line_chameleon.h conditions/haan.h \
 conditions/castling_chess.h conditions/exchange_castling.h \
 conditions/transmuting_kings/super.h conditions/imitator.h \
 conditions/football.h conditions/mummer.h conditions/woozles.h \
 conditions/nocapture.h conditions/nopromotion.h conditions/geneva.h \
 conditions/edgemover.h conditions/grid.h conditions/take_and_make.h \
 conditions/superguards.h conditions/wormhole.h conditions/backhome.h \
 conditions/shielded_kings.h optimisations/hash.h DHT/dhtbcmem.h \
 optimisations/keepmating.h \
 optimisations/count_nr_opponent_moves/opponent_moves_counter.h \
 optimisations/count_nr_opponent_moves/prioriser.h \
 optimisations/goals/castling/filter.h \
 optimisations/goals/enpassant/filter.h \
 optimisations/goals/enpassant/remove_non_reachers.h \
 optimisations/goals/castling/remove_non_reachers.h \
 optimisations/goals/chess81/remove_non_reachers.h \
 optimisations/goals/capture/remove_non_reachers.h \
 optimisations/goals/target/remove_non_reachers.h \
 optimisations/detect_retraction.h \
 optimisations/intelligent/duplicate_avoider.h \
 optimisations/intelligent/limit_nr_solutions_per_target.h \
 optimisations/intelligent/mate/filter.h \
 optimisations/intelligent/mate/goalreachable_guard.h \
 optimisations/intelligent/moves_left.h optimisations/intelligent/proof.h \
 optimisations/intelligent/stalemate/filter.h \
 optimisations/intelligent/stalemate/goalreachable_guard.h \
 optimisations/intelligent/stalemate/immobilise_black.h \
 optimisations/killer_move/collector.h \
 optimisations/killer_move/final_defense_move.h \
 optimisations/killer_move/prioriser.h \
 optimisations/orthodox_mating_moves/orthodox_mating_move_generator.h \
 optimisations/orthodox_mating_moves/king_contact_move_generator.h \
 optimisations/ohneschach/non_checking_first.h \
 optimisations/ohneschach/stop_if_check.h options/maxsolutions/guard.h \
 options/maxsolutions/initialiser.h options/maxtime.h \
 options/movenumbers.h options/degenerate_tree.h options/nontrivial.h \
 options/maxthreatlength.h options/maxflightsquares.h \
 options/movenumbers/restart_guard_intelligent.h \
 options/no_short_variations/no_short_variations_attacker_filter.h \
 options/stoponshortsolutions/filter.h \
 options/stoponshortsolutions/initialiser.h \
 output/plaintext/end_of_phase_writer.h \
 output/plaintext/ohneschach_detect_undecidable_goal.h \
 output/plaintext/illegal_selfcheck_writer.h \
 output/plaintext/goal_writer.h output/plaintext/move_inversion_counter.h \
 output/plaintext/line/line_writer.h \
 output/plaintext/line/end_of_intro_series_marker.h \
 output/plaintext/line/exclusive.h \
 output/plaintext/tree/end_of_solution_writer.h \
 output/plaintext/tree/check_writer.h output/plaintext/tree/key_writer.h \
 output/plaintext/tree/move_writer.h \
 output/plaintext/tree/refutation_writer.h \
 output/plaintext/tree/refuting_variation_writer.h \
 output/plaintext/tree/threat_writer.h output/plaintext/tree/try_writer.h \
 output/plaintext/tree/zugzwang_writer.h \
 output/plaintext/tree/exclusive.h stipulation/pipe.h \
 pieces/attributes/paralysing/paralysing.h \
 pieces/attributes/paralysing/mate_filter.h \
 pieces/attributes/paralysing/stalemate_special.h \
 pieces/attributes/paralysing/remove_captures.h \
 pieces/attributes/neutral/half.h \
 pieces/attributes/hurdle_colour_changing.h pieces/attributes/magic.h \
 pieces/attributes/jigger.h pieces/attributes/uncapturable.h \
 pieces/attributes/kamikaze/kamikaze.h solving/avoid_unsolvable.h \
 solving/battle_play/continuation.h \
 solving/battle_play/min_length_guard.h \
 solving/battle_play/min_length_optimiser.h solving/battle_play/threat.h \
 solving/battle_play/try.h solving/castling.h solving/capture_counter.h \
 solving/find_by_increasing_length.h solving/find_move.h \
 solving/find_shortest.h solving/for_each_move.h \
 solving/fork_on_remaining.h solving/king_move_generator.h \
 solving/legal_move_counter.h solving/non_king_move_generator.h \
 solving/play_suppressor.h solving/single_piece_move_generator.h \
 solving/trivial_end_filter.h pieces/walks/pawns/en_passant.h \
 pieces/walks/pawns/promotion.h solving/selfcheck_guard.h \
 solving/post_move_iteration.h solving/king_capture_avoider.h \
 stipulation/has_solution_type.h solving/recursion_stopper.h \
 stipulation/move_inverter.h stipulation/battle_play/attack_adapter.h \
 stipulation/battle_play/branch.h \
 stipulation/battle_play/defense_adapter.h stipulation/boolean/and.h \
 stipulation/boolean/false.h stipulation/boolean/not.h \
 stipulation/boolean/or.h stipulation/boolean/true.h \
 stipulation/if_then_else.h stipulation/constraint.h \
 stipulation/moves_traversal.h stipulation/dead_end.h \
 stipulation/dummy_move.h stipulation/end_of_branch_goal.h \
 stipulation/end_of_branch.h stipulation/goals/any/reached_tester.h \
 stipulation/goals/capture/reached_tester.h \
 stipulation/goals/castling/reached_tester.h \
 stipulation/goals/check/reached_tester.h \
 stipulation/goals/chess81/reached_tester.h \
 stipulation/goals/kiss/reached_tester.h \
 stipulation/goals/circuit_by_rebirth/reached_tester.h \
 stipulation/goals/circuit/reached_tester.h \
 stipulation/goals/countermate/filter.h \
 stipulation/goals/countermate/reached_tester.h \
 stipulation/goals/doublemate/filter.h \
 stipulation/goals/doublemate/reached_tester.h \
 stipulation/goals/enpassant/reached_tester.h \
 stipulation/goals/exchange_by_rebirth/reached_tester.h \
 stipulation/goals/exchange/reached_tester.h \
 stipulation/goals/immobile/reached_tester.h \
 stipulation/goals/notcheck/reached_tester.h \
 stipulation/goals/prerequisite_optimiser.h \
 stipulation/goals/proofgame/reached_tester.h \
 stipulation/goals/reached_tester.h \
 stipulation/goals/steingewinn/reached_tester.h \
 stipulation/goals/target/reached_tester.h \
 stipulation/goals/king_capture/reached_tester.h \
 stipulation/help_play/adapter.h stipulation/move_player.h \
 stipulation/move_played.h stipulation/setplay_fork.h debugging/trace.h \
 debugging/measure.h debugging/assert.h

solving/solve.h:

stipulation/stipulation.h:

stipulation/goals/goals.h:

position/board.h:

utilities/bitmask.h:

utilities/boolean.h:

stipulation/slice_type.h:

utilities/enumeration.h:

position/position.h:

pieces/pieces.h:

pieces/walks/vectors.h:

output/mode.h:

stipulation/fork.h:

stipulation/structure_traversal.h:

stipulation/slice.h:

stipulation/traversal.h:

solving/proofgames.h:

conditions/amu/mate_filter.h:

conditions/amu/attack_counter.h:

solving/ply.h:

conditions/anticirce/cheylan.h:

conditions/anticirce/magic_square.h:

conditions/anticirce/clone.h:

conditions/anticirce/couscous.h:

conditions/bgl.h:

solving/move_effect_journal.h:

solving/castling_rights.h:

position/pieceid.h:

conditions/blackchecks.h:

conditions/koeko/koeko.h:

conditions/koeko/contact_grid.h:

conditions/koeko/anti.h:

conditions/koeko/new.h:

conditions/circe/antipodes.h:

conditions/circe/chameleon.h:

pieces/attributes/chameleon.h:

conditions/circe/diametral.h:

conditions/circe/circuit_by_rebirth_special.h:

conditions/circe/clone.h:

conditions/circe/couscous.h:

conditions/circe/diagram.h:

conditions/circe/exchange_by_rebirth_special.h:

conditions/circe/file.h:

conditions/circe/steingewinn_filter.h:

conditions/circe/assassin.h:

conditions/circe/frischauf.h:

conditions/circe/super.h:

conditions/circe/april.h:

conditions/circe/takemake.h:

conditions/circe/mirror.h:

conditions/circe/pwc.h:

conditions/circe/rank.h:

conditions/circe/symmetry.h:

conditions/circe/rex_inclusive.h:

conditions/circe/parachute.h:

conditions/exclusive.h:

utilities/table.h:

conditions/extinction.h:

conditions/ohneschach.h:

conditions/maff/immobility_tester.h:

conditions/owu/immobility_tester.h:

conditions/immune.h:

conditions/provocateurs.h:

conditions/lortap.h:

conditions/patrol.h:

conditions/monochrome.h:

solving/move_generator.h:

conditions/bichrome.h:

conditions/ultraschachzwang/legality_tester.h:

conditions/singlebox/type1.h:

conditions/conditions.h:

conditions/singlebox/type2.h:

pieces/walks/pawns/promotee_sequence.h:

conditions/singlebox/type3.h:

solving/observation.h:

stipulation/temporary_hacks.h:

conditions/patience.h:

conditions/isardam.h:

conditions/sat.h:

conditions/dynasty.h:

conditions/masand.h:

conditions/messigny.h:

conditions/oscillating_kings.h:

conditions/actuated_revolving_centre.h:

conditions/actuated_revolving_board.h:

conditions/republican.h:

conditions/circe/capture_fork.h:

conditions/circe/circe.h:

conditions/circe/cage.h:

conditions/circe/double_agents.h:

conditions/circe/kamikaze.h:

conditions/circe/parrain.h:

conditions/circe/volage.h:

conditions/anticirce/anticirce.h:

conditions/anticirce/super.h:

conditions/anticirce/parrain.h:

conditions/sentinelles.h:

conditions/duellists.h:

conditions/haunted_chess.h:

conditions/ghost_chess.h:

conditions/kobul.h:

conditions/andernach.h:

conditions/antiandernach.h:

conditions/chameleon_pursuit.h:

conditions/norsk.h:

conditions/protean.h:

conditions/einstein/einstein.h:

conditions/einstein/reverse.h:

conditions/einstein/anti.h:

conditions/einstein/en_passant.h:

conditions/traitor.h:

conditions/volage.h:

conditions/magic_square.h:

conditions/tibet.h:

conditions/degradierung.h:

conditions/marscirce/phantom.h:

conditions/marscirce/anti.h:

conditions/line_chameleon.h:

conditions/haan.h:

conditions/castling_chess.h:

conditions/exchange_castling.h:

conditions/transmuting_kings/super.h:

conditions/imitator.h:

conditions/football.h:

conditions/mummer.h:

conditions/woozles.h:

conditions/nocapture.h:

conditions/nopromotion.h:

conditions/geneva.h:

conditions/edgemover.h:

conditions/grid.h:

conditions/take_and_make.h:

conditions/superguards.h:

conditions/wormhole.h:

conditions/backhome.h:

conditions/shielded_kings.h:

optimisations/hash.h:

DHT/dhtbcmem.h:

optimisations/keepmating.h:

optimisations/count_nr_opponent_moves/opponent_moves_counter.h:

optimisations/count_nr_opponent_moves/prioriser.h:

optimisations/goals/castling/filter.h:

optimisations/goals/enpassant/filter.h:

optimisations/goals/enpassant/remove_non_reachers.h:

optimisations/goals/castling/remove_non_reachers.h:

optimisations/goals/chess81/remove_non_reachers.h:

optimisations/goals/capture/remove_non_reachers.h:

optimisations/goals/target/remove_non_reachers.h:

optimisations/detect_retraction.h:

optimisations/intelligent/duplicate_avoider.h:

optimisations/intelligent/limit_nr_solutions_per_target.h:

optimisations/intelligent/mate/filter.h:

optimisations/intelligent/mate/goalreachable_guard.h:

optimisations/intelligent/moves_left.h:

optimisations/intelligent/proof.h:

optimisations/intelligent/stalemate/filter.h:

optimisations/intelligent/stalemate/goalreachable_guard.h:

optimisations/intelligent/stalemate/immobilise_black.h:

optimisations/killer_move/collector.h:

optimisations/killer_move/final_defense_move.h:

optimisations/killer_move/prioriser.h:

optimisations/orthodox_mating_moves/orthodox_mating_move_generator.h:

optimisations/orthodox_mating_moves/king_contact_move_generator.h:

optimisations/ohneschach/non_checking_first.h:

optimisations/ohneschach/stop_if_check.h:

options/maxsolutions/guard.h:

options/maxsolutions/initialiser.h:

options/maxtime.h:

options/movenumbers.h:

options/degenerate_tree.h:

options/nontrivial.h:

options/maxthreatlength.h:

options/maxflightsquares.h:

options/movenumbers/restart_guard_intelligent.h:

options/no_short_variations/no_short_variations_attacker_filter.h:

options/stoponshortsolutions/filter.h:

options/stoponshortsolutions/initialiser.h:

output/plaintext/end_of_phase_writer.h:

output/plaintext/ohneschach_detect_undecidable_goal.h:

output/plaintext/illegal_selfcheck_writer.h:

output/plaintext/goal_writer.h:

output/plaintext/move_inversion_counter.h:

output/plaintext/line/line_writer.h:

output/plaintext/line/end_of_intro_series_marker.h:

output/plaintext/line/exclusive.h:

output/plaintext/tree/end_of_solution_writer.h:

output/plaintext/tree/check_writer.h:

output/plaintext/tree/key_writer.h:

output/plaintext/tree/move_writer.h:

output/plaintext/tree/refutation_writer.h:

output/plaintext/tree/refuting_variation_writer.h:

output/plaintext/tree/threat_writer.h:

output/plaintext/tree/try_writer.h:

output/plaintext/tree/zugzwang_writer.h:

output/plaintext/tree/exclusive.h:

stipulation/pipe.h:

pieces/attributes/paralysing/paralysing.h:

pieces/attributes/paralysing/mate_filter.h:

pieces/attributes/paralysing/stalemate_special.h:

pieces/attributes/paralysing/remove_captures.h:

pieces/attributes/neutral/half.h:

pieces/attributes/hurdle_colour_changing.h:

pieces/attributes/magic.h:

pieces/attributes/jigger.h:

pieces/attributes/uncapturable.h:

pieces/attributes/kamikaze/kamikaze.h:

solving/avoid_unsolvable.h:

solving/battle_play/continuation.h:

solving/battle_play/min_length_guard.h:

solving/battle_play/min_length_optimiser.h:

solving/battle_play/threat.h:

solving/battle_play/try.h:

solving/castling.h:

solving/capture_counter.h:

solving/find_by_increasing_length.h:

solving/find_move.h:

solving/find_shortest.h:

solving/for_each_move.h:

solving/fork_on_remaining.h:

solving/king_move_generator.h:

solving/legal_move_counter.h:

solving/non_king_move_generator.h:

solving/play_suppressor.h:

solving/single_piece_move_generator.h:

solving/trivial_end_filter.h:

pieces/walks/pawns/en_passant.h:

pieces/walks/pawns/promotion.h:

solving/selfcheck_guard.h:

solving/post_move_iteration.h:

solving/king_capture_avoider.h:

stipulation/has_solution_type.h:

solving/recursion_stopper.h:

stipulation/move_inverter.h:

stipulation/battle_play/attack_adapter.h:

stipulation/battle_play/branch.h:

stipulation/battle_play/defense_adapter.h:

stipulation/boolean/and.h:

stipulation/boolean/false.h:

stipulation/boolean/not.h:

stipulation/boolean/or.h:

stipulation/boolean/true.h:

stipulation/if_then_else.h:

stipulation/constraint.h:

stipulation/moves_traversal.h:

stipulation/dead_end.h:

stipulation/dummy_move.h:

stipulation/end_of_branch_goal.h:

stipulation/end_of_branch.h:

stipulation/goals/any/reached_tester.h:

stipulation/goals/capture/reached_tester.h:

stipulation/goals/castling/reached_tester.h:

stipulation/goals/check/reached_tester.h:

stipulation/goals/chess81/reached_tester.h:

stipulation/goals/kiss/reached_tester.h:

stipulation/goals/circuit_by_rebirth/reached_tester.h:

stipulation/goals/circuit/reached_tester.h:

stipulation/goals/countermate/filter.h:

stipulation/goals/countermate/reached_tester.h:

stipulation/goals/doublemate/filter.h:

stipulation/goals/doublemate/reached_tester.h:

stipulation/goals/enpassant/reached_tester.h:

stipulation/goals/exchange_by_rebirth/reached_tester.h:

stipulation/goals/exchange/reached_tester.h:

stipulation/goals/immobile/reached_tester.h:

stipulation/goals/notcheck/reached_tester.h:

stipulation/goals/prerequisite_optimiser.h:

stipulation/goals/proofgame/reached_tester.h:

stipulation/goals/reached_tester.h:

stipulation/goals/steingewinn/reached_tester.h:

stipulation/goals/target/reached_tester.h:

stipulation/goals/king_capture/reached_tester.h:

stipulation/help_play/adapter.h:

stipulation/move_player.h:

stipulation/move_played.h:

stipulation/setplay_fork.h:

debugging/trace.h:

debugging/measure.h:

debugging/assert.h:
solving/king_capture_avoider$(OBJ_SUFFIX): solving/king_capture_avoider.c \
 solving/king_capture_avoider.h solving/solve.h stipulation/stipulation.h \
 stipulation/goals/goals.h position/board.h utilities/bitmask.h \
 utilities/boolean.h stipulation/slice_type.h utilities/enumeration.h \
 position/position.h pieces/pieces.h pieces/walks/vectors.h output/mode.h \
 solving/move_effect_journal.h solving/castling_rights.h solving/ply.h \
 position/pieceid.h stipulation/has_solution_type.h stipulation/branch.h \
 stipulation/structure_traversal.h stipulation/slice.h \
 stipulation/traversal.h stipulation/pipe.h stipulation/proxy.h \
 stipulation/help_play/branch.h debugging/trace.h debugging/assert.h

solving/king_capture_avoider.h:

solving/solve.h:

stipulation/stipulation.h:

stipulation/goals/goals.h:

position/board.h:

utilities/bitmask.h:

utilities/boolean.h:

stipulation/slice_type.h:

utilities/enumeration.h:

position/position.h:

pieces/pieces.h:

pieces/walks/vectors.h:

output/mode.h:

solving/move_effect_journal.h:

solving/castling_rights.h:

solving/ply.h:

position/pieceid.h:

stipulation/has_solution_type.h:

stipulation/branch.h:

stipulation/structure_traversal.h:

stipulation/slice.h:

stipulation/traversal.h:

stipulation/pipe.h:

stipulation/proxy.h:

stipulation/help_play/branch.h:

debugging/trace.h:

debugging/assert.h:
solving/recursion_stopper$(OBJ_SUFFIX): solving/recursion_stopper.c \
 solving/recursion_stopper.h solving/solve.h stipulation/stipulation.h \
 stipulation/goals/goals.h position/board.h utilities/bitmask.h \
 utilities/boolean.h stipulation/slice_type.h utilities/enumeration.h \
 position/position.h pieces/pieces.h pieces/walks/vectors.h output/mode.h \
 stipulation/has_solution_type.h stipulation/pipe.h \
 stipulation/structure_traversal.h stipulation/slice.h \
 stipulation/traversal.h solving/ply.h debugging/trace.h \
 debugging/assert.h

solving/recursion_stopper.h:

solving/solve.h:

stipulation/stipulation.h:

stipulation/goals/goals.h:

position/board.h:

utilities/bitmask.h:

utilities/boolean.h:

stipulation/slice_type.h:

utilities/enumeration.h:

position/position.h:

pieces/pieces.h:

pieces/walks/vectors.h:

output/mode.h:

stipulation/has_solution_type.h:

stipulation/pipe.h:

stipulation/structure_traversal.h:

stipulation/slice.h:

stipulation/traversal.h:

solving/ply.h:

debugging/trace.h:

debugging/assert.h:
solving/observation$(OBJ_SUFFIX): solving/observation.c solving/observation.h \
 stipulation/stipulation.h stipulation/goals/goals.h position/board.h \
 utilities/bitmask.h utilities/boolean.h stipulation/slice_type.h \
 utilities/enumeration.h position/position.h pieces/pieces.h \
 pieces/walks/vectors.h output/mode.h solving/ply.h \
 stipulation/temporary_hacks.h conditions/amu/attack_counter.h \
 solving/solve.h conditions/backhome.h conditions/beamten.h \
 conditions/bgl.h solving/move_effect_journal.h solving/castling_rights.h \
 position/pieceid.h conditions/bicolores.h conditions/brunner.h \
 conditions/central.h conditions/disparate.h conditions/geneva.h \
 conditions/imitator.h conditions/immune.h conditions/lortap.h \
 conditions/mummer.h conditions/patrol.h conditions/provocateurs.h \
 conditions/shielded_kings.h conditions/superguards.h \
 conditions/woozles.h conditions/wormhole.h conditions/madrasi.h \
 conditions/masand.h conditions/eiffel.h conditions/monochrome.h \
 solving/move_generator.h conditions/bichrome.h conditions/grid.h \
 conditions/edgemover.h conditions/annan.h conditions/conditions.h \
 conditions/facetoface.h conditions/marscirce/phantom.h \
 conditions/marscirce/plus.h conditions/marscirce/marscirce.h \
 conditions/singlebox/type3.h \
 conditions/transmuting_kings/transmuting_kings.h \
 conditions/transmuting_kings/reflective_kings.h \
 conditions/transmuting_kings/vaulting_kings.h pieces/walks/hunters.h \
 pieces/attributes/paralysing/paralysing.h pieces/attributes/magic.h \
 solving/find_square_observer_tracking_back_from_target.h \
 stipulation/has_solution_type.h stipulation/pipe.h \
 stipulation/structure_traversal.h stipulation/slice.h \
 stipulation/traversal.h stipulation/branch.h \
 optimisations/orthodox_square_observation.h optimisations/observation.h \
 debugging/trace.h debugging/assert.h

solving/observation.h:

stipulation/stipulation.h:

stipulation/goals/goals.h:

position/board.h:

utilities/bitmask.h:

utilities/boolean.h:

stipulation/slice_type.h:

utilities/enumeration.h:

position/position.h:

pieces/pieces.h:

pieces/walks/vectors.h:

output/mode.h:

solving/ply.h:

stipulation/temporary_hacks.h:

conditions/amu/attack_counter.h:

solving/solve.h:

conditions/backhome.h:

conditions/beamten.h:

conditions/bgl.h:

solving/move_effect_journal.h:

solving/castling_rights.h:

position/pieceid.h:

conditions/bicolores.h:

conditions/brunner.h:

conditions/central.h:

conditions/disparate.h:

conditions/geneva.h:

conditions/imitator.h:

conditions/immune.h:

conditions/lortap.h:

conditions/mummer.h:

conditions/patrol.h:

conditions/provocateurs.h:

conditions/shielded_kings.h:

conditions/superguards.h:

conditions/woozles.h:

conditions/wormhole.h:

conditions/madrasi.h:

conditions/masand.h:

conditions/eiffel.h:

conditions/monochrome.h:

solving/move_generator.h:

conditions/bichrome.h:

conditions/grid.h:

conditions/edgemover.h:

conditions/annan.h:

conditions/conditions.h:

conditions/facetoface.h:

conditions/marscirce/phantom.h:

conditions/marscirce/plus.h:

conditions/marscirce/marscirce.h:

conditions/singlebox/type3.h:

conditions/transmuting_kings/transmuting_kings.h:

conditions/transmuting_kings/reflective_kings.h:

conditions/transmuting_kings/vaulting_kings.h:

pieces/walks/hunters.h:

pieces/attributes/paralysing/paralysing.h:

pieces/attributes/magic.h:

solving/find_square_observer_tracking_back_from_target.h:

stipulation/has_solution_type.h:

stipulation/pipe.h:

stipulation/structure_traversal.h:

stipulation/slice.h:

stipulation/traversal.h:

stipulation/branch.h:

optimisations/orthodox_square_observation.h:

optimisations/observation.h:

debugging/trace.h:

debugging/assert.h:
solving/check$(OBJ_SUFFIX): solving/check.c solving/check.h utilities/boolean.h \
 position/position.h position/board.h utilities/bitmask.h pieces/pieces.h \
 pieces/walks/vectors.h utilities/enumeration.h stipulation/stipulation.h \
 stipulation/goals/goals.h stipulation/slice_type.h output/mode.h \
 conditions/circe/assassin.h solving/solve.h conditions/extinction.h \
 conditions/sat.h solving/move_effect_journal.h solving/castling_rights.h \
 solving/ply.h position/pieceid.h conditions/vogtlaender.h \
 conditions/antikings.h solving/observation.h \
 stipulation/temporary_hacks.h solving/move_generator.h \
 stipulation/pipe.h stipulation/structure_traversal.h stipulation/slice.h \
 stipulation/traversal.h stipulation/branch.h debugging/trace.h \
 debugging/measure.h debugging/assert.h

solving/check.h:

utilities/boolean.h:

position/position.h:

position/board.h:

utilities/bitmask.h:

pieces/pieces.h:

pieces/walks/vectors.h:

utilities/enumeration.h:

stipulation/stipulation.h:

stipulation/goals/goals.h:

stipulation/slice_type.h:

output/mode.h:

conditions/circe/assassin.h:

solving/solve.h:

conditions/extinction.h:

conditions/sat.h:

solving/move_effect_journal.h:

solving/castling_rights.h:

solving/ply.h:

position/pieceid.h:

conditions/vogtlaender.h:

conditions/antikings.h:

solving/observation.h:

stipulation/temporary_hacks.h:

solving/move_generator.h:

stipulation/pipe.h:

stipulation/structure_traversal.h:

stipulation/slice.h:

stipulation/traversal.h:

stipulation/branch.h:

debugging/trace.h:

debugging/measure.h:

debugging/assert.h:
solving/find_square_observer_tracking_back_from_target$(OBJ_SUFFIX): \
 solving/find_square_observer_tracking_back_from_target.c \
 solving/find_square_observer_tracking_back_from_target.h \
 solving/observation.h stipulation/stipulation.h \
 stipulation/goals/goals.h position/board.h utilities/bitmask.h \
 utilities/boolean.h stipulation/slice_type.h utilities/enumeration.h \
 position/position.h pieces/pieces.h pieces/walks/vectors.h output/mode.h \
 solving/ply.h stipulation/temporary_hacks.h pieces/walks/leapers.h \
 pieces/walks/riders.h pieces/walks/lions.h pieces/walks/roses.h \
 pieces/walks/bouncer.h pieces/walks/pawns/pawn.h \
 pieces/walks/pawns/berolina.h pieces/walks/pawns/reverse.h \
 pieces/walks/chinese/riders.h pieces/walks/chinese/mao.h \
 pieces/walks/chinese/pawn.h pieces/walks/locusts.h pieces/walks/marine.h \
 pieces/walks/hoppers.h solving/move_generator.h solving/solve.h \
 pieces/walks/bouncy.h pieces/walks/pawns/super.h pieces/walks/cardinal.h \
 pieces/walks/reflecting_bishop.h pieces/walks/combined.h \
 pieces/walks/angle/hoppers.h pieces/walks/angle/angles.h \
 pieces/walks/spiral_springers.h pieces/walks/bob.h pieces/walks/cat.h \
 pieces/walks/skylla_charybdis.h pieces/walks/edgehog.h \
 pieces/walks/kangaroo.h pieces/walks/querquisite.h pieces/walks/ubiubi.h \
 pieces/walks/radial.h pieces/walks/orphan.h pieces/walks/friend.h \
 pieces/walks/hunters.h pieces/walks/sting.h debugging/trace.h \
 debugging/assert.h

solving/find_square_observer_tracking_back_from_target.h:

solving/observation.h:

stipulation/stipulation.h:

stipulation/goals/goals.h:

position/board.h:

utilities/bitmask.h:

utilities/boolean.h:

stipulation/slice_type.h:

utilities/enumeration.h:

position/position.h:

pieces/pieces.h:

pieces/walks/vectors.h:

output/mode.h:

solving/ply.h:

stipulation/temporary_hacks.h:

pieces/walks/leapers.h:

pieces/walks/riders.h:

pieces/walks/lions.h:

pieces/walks/roses.h:

pieces/walks/bouncer.h:

pieces/walks/pawns/pawn.h:

pieces/walks/pawns/berolina.h:

pieces/walks/pawns/reverse.h:

pieces/walks/chinese/riders.h:

pieces/walks/chinese/mao.h:

pieces/walks/chinese/pawn.h:

pieces/walks/locusts.h:

pieces/walks/marine.h:

pieces/walks/hoppers.h:

solving/move_generator.h:

solving/solve.h:

pieces/walks/bouncy.h:

pieces/walks/pawns/super.h:

pieces/walks/cardinal.h:

pieces/walks/reflecting_bishop.h:

pieces/walks/combined.h:

pieces/walks/angle/hoppers.h:

pieces/walks/angle/angles.h:

pieces/walks/spiral_springers.h:

pieces/walks/bob.h:

pieces/walks/cat.h:

pieces/walks/skylla_charybdis.h:

pieces/walks/edgehog.h:

pieces/walks/kangaroo.h:

pieces/walks/querquisite.h:

pieces/walks/ubiubi.h:

pieces/walks/radial.h:

pieces/walks/orphan.h:

pieces/walks/friend.h:

pieces/walks/hunters.h:

pieces/walks/sting.h:

debugging/trace.h:

debugging/assert.h:
solving/ply$(OBJ_SUFFIX): solving/ply.c solving/ply.h position/position.h \
 position/board.h utilities/bitmask.h pieces/pieces.h utilities/boolean.h \
 pieces/walks/vectors.h utilities/enumeration.h \
 pieces/walks/pawns/en_passant.h solving/solve.h \
 stipulation/stipulation.h stipulation/goals/goals.h \
 stipulation/slice_type.h output/mode.h solving/move_effect_journal.h \
 solving/castling_rights.h position/pieceid.h solving/observation.h \
 stipulation/temporary_hacks.h solving/post_move_iteration.h \
 solving/move_generator.h debugging/trace.h debugging/assert.h

solving/ply.h:

position/position.h:

position/board.h:

utilities/bitmask.h:

pieces/pieces.h:

utilities/boolean.h:

pieces/walks/vectors.h:

utilities/enumeration.h:

pieces/walks/pawns/en_passant.h:

solving/solve.h:

stipulation/stipulation.h:

stipulation/goals/goals.h:

stipulation/slice_type.h:

output/mode.h:

solving/move_effect_journal.h:

solving/castling_rights.h:

position/pieceid.h:

solving/observation.h:

stipulation/temporary_hacks.h:

solving/post_move_iteration.h:

solving/move_generator.h:

debugging/trace.h:

debugging/assert.h:
solving/move_diff_code$(OBJ_SUFFIX): solving/move_diff_code.c \
 solving/move_diff_code.h position/board.h utilities/bitmask.h

solving/move_diff_code.h:

position/board.h:

utilities/bitmask.h:
solving/solvers$(OBJ_SUFFIX): solving/solvers.c solving/solvers.h \
 stipulation/stipulation.h stipulation/goals/goals.h position/board.h \
 utilities/bitmask.h utilities/boolean.h stipulation/slice_type.h \
 utilities/enumeration.h position/position.h pieces/pieces.h \
 pieces/walks/vectors.h output/mode.h options/options.h \
 conditions/conditions.h pymsg.h pylang.h utilities/boolean.h \
 solving/selfcheck_guard.h solving/solve.h solving/check.h \
 pieces/walks/pawns/promotion.h solving/move_effect_journal.h \
 solving/castling_rights.h solving/ply.h position/pieceid.h \
 stipulation/proxy.h stipulation/pipe.h stipulation/structure_traversal.h \
 stipulation/slice.h stipulation/traversal.h solving/observation.h \
 stipulation/temporary_hacks.h output/output.h conditions/annan.h \
 conditions/bgl.h conditions/facetoface.h conditions/koeko/contact_grid.h \
 conditions/koeko/koeko.h conditions/koeko/anti.h conditions/koeko/new.h \
 conditions/exclusive.h utilities/table.h conditions/republican.h \
 conditions/blackchecks.h conditions/extinction.h conditions/madrasi.h \
 conditions/maff/immobility_tester.h conditions/owu/immobility_tester.h \
 conditions/ohneschach.h conditions/singlebox/type1.h \
 conditions/singlebox/type2.h pieces/walks/pawns/promotee_sequence.h \
 conditions/singlebox/type3.h conditions/patience.h conditions/isardam.h \
 conditions/masand.h conditions/disparate.h conditions/dynasty.h \
 conditions/eiffel.h conditions/circe/assassin.h \
 conditions/ultraschachzwang/legality_tester.h conditions/sat.h \
 conditions/oscillating_kings.h conditions/messigny.h \
 conditions/actuated_revolving_centre.h \
 conditions/actuated_revolving_board.h conditions/circe/circe.h \
 conditions/circe/antipodes.h conditions/circe/cage.h \
 conditions/circe/chameleon.h pieces/attributes/chameleon.h \
 conditions/circe/clone.h conditions/circe/couscous.h \
 conditions/circe/diagram.h conditions/circe/diametral.h \
 conditions/circe/double_agents.h conditions/circe/file.h \
 conditions/circe/kamikaze.h conditions/circe/parrain.h \
 conditions/circe/volage.h conditions/circe/frischauf.h \
 conditions/circe/mirror.h conditions/circe/pwc.h \
 conditions/circe/super.h conditions/circe/symmetry.h \
 conditions/circe/april.h conditions/circe/takemake.h \
 conditions/circe/rex_inclusive.h conditions/circe/rank.h \
 conditions/circe/capture_fork.h conditions/circe/rebirth_avoider.h \
 conditions/circe/rebirth_square_occupied.h \
 conditions/anticirce/cheylan.h conditions/anticirce/anticirce.h \
 conditions/anticirce/super.h conditions/anticirce/magic_square.h \
 conditions/anticirce/clone.h conditions/sentinelles.h \
 conditions/duellists.h conditions/haunted_chess.h \
 conditions/ghost_chess.h conditions/kobul.h conditions/andernach.h \
 conditions/antiandernach.h conditions/chameleon_pursuit.h \
 conditions/norsk.h conditions/protean.h conditions/einstein/einstein.h \
 conditions/einstein/reverse.h conditions/einstein/anti.h \
 conditions/einstein/en_passant.h conditions/traitor.h \
 conditions/volage.h conditions/magic_square.h conditions/tibet.h \
 conditions/degradierung.h conditions/marscirce/phantom.h \
 conditions/marscirce/marscirce.h conditions/marscirce/anti.h \
 conditions/marscirce/plus.h conditions/line_chameleon.h \
 conditions/haan.h conditions/castling_chess.h \
 conditions/exchange_castling.h conditions/transmuting_kings/super.h \
 conditions/transmuting_kings/reflective_kings.h \
 conditions/amu/attack_counter.h conditions/imitator.h \
 conditions/football.h conditions/mummer.h conditions/woozles.h \
 conditions/immune.h conditions/provocateurs.h conditions/lortap.h \
 conditions/patrol.h conditions/nocapture.h conditions/nopromotion.h \
 conditions/geneva.h conditions/monochrome.h solving/move_generator.h \
 conditions/bichrome.h conditions/edgemover.h conditions/grid.h \
 conditions/take_and_make.h conditions/superguards.h conditions/central.h \
 conditions/beamten.h conditions/brunner.h conditions/wormhole.h \
 conditions/transmuting_kings/transmuting_kings.h \
 conditions/transmuting_kings/vaulting_kings.h conditions/backhome.h \
 conditions/vogtlaender.h conditions/bicolores.h conditions/antikings.h \
 conditions/follow_my_leader.h conditions/alphabetic.h \
 conditions/forced_squares.h conditions/synchronous.h \
 conditions/must_capture.h platform/maxtime.h conditions/shielded_kings.h \
 stipulation/end_of_branch_tester.h stipulation/dead_end.h \
 stipulation/boolean/and.h stipulation/constraint.h \
 stipulation/moves_traversal.h \
 stipulation/goals/immobile/reached_tester.h \
 stipulation/goals/kiss/reached_tester.h stipulation/branch.h \
 stipulation/move.h solving/king_capture_avoider.h solving/testers.h \
 solving/find_shortest.h solving/for_each_move.h \
 solving/battle_play/try.h solving/battle_play/threat.h \
 solving/battle_play/continuation.h solving/battle_play/setplay.h \
 solving/battle_play/min_length_guard.h solving/trivial_end_filter.h \
 solving/avoid_unsolvable.h solving/play_suppressor.h solving/castling.h \
 pieces/walks/pawns/en_passant.h solving/post_move_iteration.h \
 pieces/attributes/magic.h pieces/attributes/paralysing/paralysing.h \
 pieces/attributes/kamikaze/kamikaze.h \
 pieces/attributes/neutral/neutral.h pieces/attributes/neutral/half.h \
 pieces/attributes/hurdle_colour_changing.h pieces/attributes/jigger.h \
 pieces/attributes/uncapturable.h pieces/walks/hunters.h \
 conditions/amu/mate_filter.h conditions/circe/goal_filters.h \
 conditions/ultraschachzwang/goal_filter.h \
 options/no_short_variations/no_short_variations.h optimisations/hash.h \
 DHT/dhtbcmem.h optimisations/intelligent/intelligent.h \
 optimisations/keepmating.h optimisations/killer_move/killer_move.h \
 optimisations/ohneschach/non_checking_first.h \
 optimisations/ohneschach/redundant_immobility_tests.h \
 optimisations/ohneschach/immobility_tests_help.h options/maxtime.h \
 options/degenerate_tree.h options/maxthreatlength.h \
 options/maxflightsquares.h options/nontrivial.h options/movenumbers.h \
 options/maxsolutions/maxsolutions.h \
 options/stoponshortsolutions/stoponshortsolutions.h \
 optimisations/count_nr_opponent_moves/move_generator.h \
 optimisations/orthodox_mating_moves/orthodox_mating_moves_generation.h \
 optimisations/intelligent/limit_nr_solutions_per_target.h \
 optimisations/goals/remove_non_reachers.h \
 optimisations/detect_retraction.h optimisations/observation.h \
 debugging/assert.h debugging/trace.h debugging/measure.h

solving/solvers.h:

stipulation/stipulation.h:

stipulation/goals/goals.h:

position/board.h:

utilities/bitmask.h:

utilities/boolean.h:

stipulation/slice_type.h:

utilities/enumeration.h:

position/position.h:

pieces/pieces.h:

pieces/walks/vectors.h:

output/mode.h:

options/options.h:

conditions/conditions.h:

pymsg.h:

pylang.h:

utilities/boolean.h:

solving/selfcheck_guard.h:

solving/solve.h:

solving/check.h:

pieces/walks/pawns/promotion.h:

solving/move_effect_journal.h:

solving/castling_rights.h:

solving/ply.h:

position/pieceid.h:

stipulation/proxy.h:

stipulation/pipe.h:

stipulation/structure_traversal.h:

stipulation/slice.h:

stipulation/traversal.h:

solving/observation.h:

stipulation/temporary_hacks.h:

output/output.h:

conditions/annan.h:

conditions/bgl.h:

conditions/facetoface.h:

conditions/koeko/contact_grid.h:

conditions/koeko/koeko.h:

conditions/koeko/anti.h:

conditions/koeko/new.h:

conditions/exclusive.h:

utilities/table.h:

conditions/republican.h:

conditions/blackchecks.h:

conditions/extinction.h:

conditions/madrasi.h:

conditions/maff/immobility_tester.h:

conditions/owu/immobility_tester.h:

conditions/ohneschach.h:

conditions/singlebox/type1.h:

conditions/singlebox/type2.h:

pieces/walks/pawns/promotee_sequence.h:

conditions/singlebox/type3.h:

conditions/patience.h:

conditions/isardam.h:

conditions/masand.h:

conditions/disparate.h:

conditions/dynasty.h:

conditions/eiffel.h:

conditions/circe/assassin.h:

conditions/ultraschachzwang/legality_tester.h:

conditions/sat.h:

conditions/oscillating_kings.h:

conditions/messigny.h:

conditions/actuated_revolving_centre.h:

conditions/actuated_revolving_board.h:

conditions/circe/circe.h:

conditions/circe/antipodes.h:

conditions/circe/cage.h:

conditions/circe/chameleon.h:

pieces/attributes/chameleon.h:

conditions/circe/clone.h:

conditions/circe/couscous.h:

conditions/circe/diagram.h:

conditions/circe/diametral.h:

conditions/circe/double_agents.h:

conditions/circe/file.h:

conditions/circe/kamikaze.h:

conditions/circe/parrain.h:

conditions/circe/volage.h:

conditions/circe/frischauf.h:

conditions/circe/mirror.h:

conditions/circe/pwc.h:

conditions/circe/super.h:

conditions/circe/symmetry.h:

conditions/circe/april.h:

conditions/circe/takemake.h:

conditions/circe/rex_inclusive.h:

conditions/circe/rank.h:

conditions/circe/capture_fork.h:

conditions/circe/rebirth_avoider.h:

conditions/circe/rebirth_square_occupied.h:

conditions/anticirce/cheylan.h:

conditions/anticirce/anticirce.h:

conditions/anticirce/super.h:

conditions/anticirce/magic_square.h:

conditions/anticirce/clone.h:

conditions/sentinelles.h:

conditions/duellists.h:

conditions/haunted_chess.h:

conditions/ghost_chess.h:

conditions/kobul.h:

conditions/andernach.h:

conditions/antiandernach.h:

conditions/chameleon_pursuit.h:

conditions/norsk.h:

conditions/protean.h:

conditions/einstein/einstein.h:

conditions/einstein/reverse.h:

conditions/einstein/anti.h:

conditions/einstein/en_passant.h:

conditions/traitor.h:

conditions/volage.h:

conditions/magic_square.h:

conditions/tibet.h:

conditions/degradierung.h:

conditions/marscirce/phantom.h:

conditions/marscirce/marscirce.h:

conditions/marscirce/anti.h:

conditions/marscirce/plus.h:

conditions/line_chameleon.h:

conditions/haan.h:

conditions/castling_chess.h:

conditions/exchange_castling.h:

conditions/transmuting_kings/super.h:

conditions/transmuting_kings/reflective_kings.h:

conditions/amu/attack_counter.h:

conditions/imitator.h:

conditions/football.h:

conditions/mummer.h:

conditions/woozles.h:

conditions/immune.h:

conditions/provocateurs.h:

conditions/lortap.h:

conditions/patrol.h:

conditions/nocapture.h:

conditions/nopromotion.h:

conditions/geneva.h:

conditions/monochrome.h:

solving/move_generator.h:

conditions/bichrome.h:

conditions/edgemover.h:

conditions/grid.h:

conditions/take_and_make.h:

conditions/superguards.h:

conditions/central.h:

conditions/beamten.h:

conditions/brunner.h:

conditions/wormhole.h:

conditions/transmuting_kings/transmuting_kings.h:

conditions/transmuting_kings/vaulting_kings.h:

conditions/backhome.h:

conditions/vogtlaender.h:

conditions/bicolores.h:

conditions/antikings.h:

conditions/follow_my_leader.h:

conditions/alphabetic.h:

conditions/forced_squares.h:

conditions/synchronous.h:

conditions/must_capture.h:

platform/maxtime.h:

conditions/shielded_kings.h:

stipulation/end_of_branch_tester.h:

stipulation/dead_end.h:

stipulation/boolean/and.h:

stipulation/constraint.h:

stipulation/moves_traversal.h:

stipulation/goals/immobile/reached_tester.h:

stipulation/goals/kiss/reached_tester.h:

stipulation/branch.h:

stipulation/move.h:

solving/king_capture_avoider.h:

solving/testers.h:

solving/find_shortest.h:

solving/for_each_move.h:

solving/battle_play/try.h:

solving/battle_play/threat.h:

solving/battle_play/continuation.h:

solving/battle_play/setplay.h:

solving/battle_play/min_length_guard.h:

solving/trivial_end_filter.h:

solving/avoid_unsolvable.h:

solving/play_suppressor.h:

solving/castling.h:

pieces/walks/pawns/en_passant.h:

solving/post_move_iteration.h:

pieces/attributes/magic.h:

pieces/attributes/paralysing/paralysing.h:

pieces/attributes/kamikaze/kamikaze.h:

pieces/attributes/neutral/neutral.h:

pieces/attributes/neutral/half.h:

pieces/attributes/hurdle_colour_changing.h:

pieces/attributes/jigger.h:

pieces/attributes/uncapturable.h:

pieces/walks/hunters.h:

conditions/amu/mate_filter.h:

conditions/circe/goal_filters.h:

conditions/ultraschachzwang/goal_filter.h:

options/no_short_variations/no_short_variations.h:

optimisations/hash.h:

DHT/dhtbcmem.h:

optimisations/intelligent/intelligent.h:

optimisations/keepmating.h:

optimisations/killer_move/killer_move.h:

optimisations/ohneschach/non_checking_first.h:

optimisations/ohneschach/redundant_immobility_tests.h:

optimisations/ohneschach/immobility_tests_help.h:

options/maxtime.h:

options/degenerate_tree.h:

options/maxthreatlength.h:

options/maxflightsquares.h:

options/nontrivial.h:

options/movenumbers.h:

options/maxsolutions/maxsolutions.h:

options/stoponshortsolutions/stoponshortsolutions.h:

optimisations/count_nr_opponent_moves/move_generator.h:

optimisations/orthodox_mating_moves/orthodox_mating_moves_generation.h:

optimisations/intelligent/limit_nr_solutions_per_target.h:

optimisations/goals/remove_non_reachers.h:

optimisations/detect_retraction.h:

optimisations/observation.h:

debugging/assert.h:

debugging/trace.h:

debugging/measure.h:
solving/proofgames$(OBJ_SUFFIX): solving/proofgames.c debugging/assert.h \
 stipulation/stipulation.h stipulation/goals/goals.h position/board.h \
 utilities/bitmask.h utilities/boolean.h stipulation/slice_type.h \
 utilities/enumeration.h position/position.h pieces/pieces.h \
 pieces/walks/vectors.h output/mode.h conditions/conditions.h \
 DHT/dhtbcmem.h solving/proofgames.h pymsg.h pylang.h utilities/boolean.h \
 stipulation/has_solution_type.h solving/solve.h solving/castling.h \
 solving/castling_rights.h solving/move_effect_journal.h solving/ply.h \
 position/pieceid.h pieces/walks/pawns/en_passant.h solving/observation.h \
 stipulation/temporary_hacks.h optimisations/hash.h \
 optimisations/intelligent/moves_left.h \
 optimisations/orthodox_check_directions.h \
 optimisations/intelligent/count_nr_of_moves.h \
 optimisations/intelligent/intelligent.h optimisations/observation.h \
 platform/maxtime.h conditions/circe/circe.h conditions/duellists.h \
 conditions/haunted_chess.h conditions/transmuting_kings/vaulting_kings.h \
 conditions/imitator.h pieces/attributes/neutral/neutral.h \
 pieces/walks/walks.h output/plaintext/language_dependant.h pylang.h \
 options/options.h input/plaintext/twin.h input/plaintext/token.h \
 input/plaintext/line.h conditions/mummer.h \
 conditions/anticirce/anticirce.h conditions/sentinelles.h \
 output/plaintext/pieces.h debugging/trace.h

debugging/assert.h:

stipulation/stipulation.h:

stipulation/goals/goals.h:

position/board.h:

utilities/bitmask.h:

utilities/boolean.h:

stipulation/slice_type.h:

utilities/enumeration.h:

position/position.h:

pieces/pieces.h:

pieces/walks/vectors.h:

output/mode.h:

conditions/conditions.h:

DHT/dhtbcmem.h:

solving/proofgames.h:

pymsg.h:

pylang.h:

utilities/boolean.h:

stipulation/has_solution_type.h:

solving/solve.h:

solving/castling.h:

solving/castling_rights.h:

solving/move_effect_journal.h:

solving/ply.h:

position/pieceid.h:

pieces/walks/pawns/en_passant.h:

solving/observation.h:

stipulation/temporary_hacks.h:

optimisations/hash.h:

optimisations/intelligent/moves_left.h:

optimisations/orthodox_check_directions.h:

optimisations/intelligent/count_nr_of_moves.h:

optimisations/intelligent/intelligent.h:

optimisations/observation.h:

platform/maxtime.h:

conditions/circe/circe.h:

conditions/duellists.h:

conditions/haunted_chess.h:

conditions/transmuting_kings/vaulting_kings.h:

conditions/imitator.h:

pieces/attributes/neutral/neutral.h:

pieces/walks/walks.h:

output/plaintext/language_dependant.h:

pylang.h:

options/options.h:

input/plaintext/twin.h:

input/plaintext/token.h:

input/plaintext/line.h:

conditions/mummer.h:

conditions/anticirce/anticirce.h:

conditions/sentinelles.h:

output/plaintext/pieces.h:

debugging/trace.h:
