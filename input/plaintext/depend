input/plaintext/token$(OBJ_SUFFIX): input/plaintext/token.c input/plaintext/token.h \
 pylang.h input/plaintext/line.h input/plaintext/input_stack.h \
 output/output.h output/mode.h utilities/enumeration.h \
 stipulation/stipulation.h stipulation/goals/goals.h position/board.h \
 utilities/bitmask.h utilities/boolean.h stipulation/slice_type.h \
 position/position.h pieces/pieces.h pieces/walks/vectors.h pymsg.h \
 pylang.h utilities/boolean.h

input/plaintext/token.h:

pylang.h:

input/plaintext/line.h:

input/plaintext/input_stack.h:

output/output.h:

output/mode.h:

utilities/enumeration.h:

stipulation/stipulation.h:

stipulation/goals/goals.h:

position/board.h:

utilities/bitmask.h:

utilities/boolean.h:

stipulation/slice_type.h:

position/position.h:

pieces/pieces.h:

pieces/walks/vectors.h:

pymsg.h:

pylang.h:

utilities/boolean.h:
input/plaintext/pieces$(OBJ_SUFFIX): input/plaintext/pieces.c \
 input/plaintext/pieces.h position/position.h position/board.h \
 utilities/bitmask.h pieces/pieces.h utilities/boolean.h \
 pieces/walks/vectors.h utilities/enumeration.h \
 output/plaintext/language_dependant.h pylang.h conditions/conditions.h \
 options/options.h input/plaintext/twin.h stipulation/stipulation.h \
 stipulation/goals/goals.h stipulation/slice_type.h output/mode.h \
 input/plaintext/token.h input/plaintext/line.h conditions/mummer.h \
 solving/solve.h output/output.h output/latex/latex.h \
 pieces/attributes/neutral/neutral.h pieces/walks/hunters.h \
 solving/observation.h solving/ply.h pyproc.h pieces/walks/vectors.h \
 pieces/pieces.h stipulation/goals/goals.h stipulation/stipulation.h \
 input/plaintext/token.h utilities/boolean.h pymsg.h pylang.h

input/plaintext/pieces.h:

position/position.h:

position/board.h:

utilities/bitmask.h:

pieces/pieces.h:

utilities/boolean.h:

pieces/walks/vectors.h:

utilities/enumeration.h:

output/plaintext/language_dependant.h:

pylang.h:

conditions/conditions.h:

options/options.h:

input/plaintext/twin.h:

stipulation/stipulation.h:

stipulation/goals/goals.h:

stipulation/slice_type.h:

output/mode.h:

input/plaintext/token.h:

input/plaintext/line.h:

conditions/mummer.h:

solving/solve.h:

output/output.h:

output/latex/latex.h:

pieces/attributes/neutral/neutral.h:

pieces/walks/hunters.h:

solving/observation.h:

solving/ply.h:

pyproc.h:

pieces/walks/vectors.h:

pieces/pieces.h:

stipulation/goals/goals.h:

stipulation/stipulation.h:

input/plaintext/token.h:

utilities/boolean.h:

pymsg.h:

pylang.h:
input/plaintext/line$(OBJ_SUFFIX): input/plaintext/line.c input/plaintext/line.h \
 input/plaintext/token.h pylang.h input/plaintext/input_stack.h \
 output/plaintext/plaintext.h stipulation/goals/goals.h position/board.h \
 utilities/bitmask.h utilities/boolean.h pymsg.h pylang.h \
 utilities/boolean.h

input/plaintext/line.h:

input/plaintext/token.h:

pylang.h:

input/plaintext/input_stack.h:

output/plaintext/plaintext.h:

stipulation/goals/goals.h:

position/board.h:

utilities/bitmask.h:

utilities/boolean.h:

pymsg.h:

pylang.h:

utilities/boolean.h:
input/plaintext/input_stack$(OBJ_SUFFIX): input/plaintext/input_stack.c \
 input/plaintext/input_stack.h output/output.h output/mode.h \
 utilities/enumeration.h stipulation/stipulation.h \
 stipulation/goals/goals.h position/board.h utilities/bitmask.h \
 utilities/boolean.h stipulation/slice_type.h position/position.h \
 pieces/pieces.h pieces/walks/vectors.h pymsg.h pylang.h \
 utilities/boolean.h

input/plaintext/input_stack.h:

output/output.h:

output/mode.h:

utilities/enumeration.h:

stipulation/stipulation.h:

stipulation/goals/goals.h:

position/board.h:

utilities/bitmask.h:

utilities/boolean.h:

stipulation/slice_type.h:

position/position.h:

pieces/pieces.h:

pieces/walks/vectors.h:

pymsg.h:

pylang.h:

utilities/boolean.h:
input/plaintext/twin$(OBJ_SUFFIX): input/plaintext/twin.c input/plaintext/twin.h \
 stipulation/stipulation.h stipulation/goals/goals.h position/board.h \
 utilities/bitmask.h utilities/boolean.h stipulation/slice_type.h \
 utilities/enumeration.h position/position.h pieces/pieces.h \
 pieces/walks/vectors.h output/mode.h input/plaintext/token.h pylang.h \
 input/plaintext/line.h input/plaintext/pieces.h \
 input/plaintext/stipulation.h input/plaintext/condition.h \
 input/plaintext/option.h input/plaintext/input_stack.h output/output.h \
 output/plaintext/language_dependant.h conditions/conditions.h \
 options/options.h conditions/mummer.h solving/solve.h \
 output/plaintext/plaintext.h output/plaintext/condition.h \
 output/latex/latex.h conditions/imitator.h solving/move_effect_journal.h \
 solving/castling_rights.h solving/ply.h position/pieceid.h \
 pieces/attributes/neutral/neutral.h stipulation/pipe.h \
 stipulation/structure_traversal.h stipulation/slice.h \
 stipulation/traversal.h platform/maxmem.h pymsg.h pylang.h \
 utilities/boolean.h pyproc.h pieces/walks/vectors.h pieces/pieces.h \
 stipulation/goals/goals.h stipulation/stipulation.h \
 input/plaintext/token.h debugging/trace.h

input/plaintext/twin.h:

stipulation/stipulation.h:

stipulation/goals/goals.h:

position/board.h:

utilities/bitmask.h:

utilities/boolean.h:

stipulation/slice_type.h:

utilities/enumeration.h:

position/position.h:

pieces/pieces.h:

pieces/walks/vectors.h:

output/mode.h:

input/plaintext/token.h:

pylang.h:

input/plaintext/line.h:

input/plaintext/pieces.h:

input/plaintext/stipulation.h:

input/plaintext/condition.h:

input/plaintext/option.h:

input/plaintext/input_stack.h:

output/output.h:

output/plaintext/language_dependant.h:

conditions/conditions.h:

options/options.h:

conditions/mummer.h:

solving/solve.h:

output/plaintext/plaintext.h:

output/plaintext/condition.h:

output/latex/latex.h:

conditions/imitator.h:

solving/move_effect_journal.h:

solving/castling_rights.h:

solving/ply.h:

position/pieceid.h:

pieces/attributes/neutral/neutral.h:

stipulation/pipe.h:

stipulation/structure_traversal.h:

stipulation/slice.h:

stipulation/traversal.h:

platform/maxmem.h:

pymsg.h:

pylang.h:

utilities/boolean.h:

pyproc.h:

pieces/walks/vectors.h:

pieces/pieces.h:

stipulation/goals/goals.h:

stipulation/stipulation.h:

input/plaintext/token.h:

debugging/trace.h:
input/plaintext/stipulation$(OBJ_SUFFIX): input/plaintext/stipulation.c \
 input/plaintext/stipulation.h stipulation/stipulation.h \
 stipulation/goals/goals.h position/board.h utilities/bitmask.h \
 utilities/boolean.h stipulation/slice_type.h utilities/enumeration.h \
 position/position.h pieces/pieces.h pieces/walks/vectors.h output/mode.h \
 input/plaintext/goal.h input/plaintext/token.h pylang.h \
 input/plaintext/line.h output/output.h output/plaintext/plaintext.h \
 conditions/check_zigzag.h position/pieceid.h \
 stipulation/has_solution_type.h stipulation/branch.h \
 stipulation/structure_traversal.h stipulation/slice.h \
 stipulation/traversal.h stipulation/help_play/branch.h solving/solve.h \
 stipulation/battle_play/branch.h stipulation/move_inverter.h \
 stipulation/boolean/and.h stipulation/boolean/not.h stipulation/proxy.h \
 stipulation/pipe.h pymsg.h pylang.h utilities/boolean.h \
 debugging/trace.h

input/plaintext/stipulation.h:

stipulation/stipulation.h:

stipulation/goals/goals.h:

position/board.h:

utilities/bitmask.h:

utilities/boolean.h:

stipulation/slice_type.h:

utilities/enumeration.h:

position/position.h:

pieces/pieces.h:

pieces/walks/vectors.h:

output/mode.h:

input/plaintext/goal.h:

input/plaintext/token.h:

pylang.h:

input/plaintext/line.h:

output/output.h:

output/plaintext/plaintext.h:

conditions/check_zigzag.h:

position/pieceid.h:

stipulation/has_solution_type.h:

stipulation/branch.h:

stipulation/structure_traversal.h:

stipulation/slice.h:

stipulation/traversal.h:

stipulation/help_play/branch.h:

solving/solve.h:

stipulation/battle_play/branch.h:

stipulation/move_inverter.h:

stipulation/boolean/and.h:

stipulation/boolean/not.h:

stipulation/proxy.h:

stipulation/pipe.h:

pymsg.h:

pylang.h:

utilities/boolean.h:

debugging/trace.h:
input/plaintext/sstipulation$(OBJ_SUFFIX): input/plaintext/sstipulation.c \
 input/plaintext/sstipulation.h stipulation/stipulation.h \
 stipulation/goals/goals.h position/board.h utilities/bitmask.h \
 utilities/boolean.h stipulation/slice_type.h utilities/enumeration.h \
 position/position.h pieces/pieces.h pieces/walks/vectors.h output/mode.h \
 input/plaintext/stipulation.h input/plaintext/goal.h \
 input/plaintext/token.h pylang.h input/plaintext/line.h output/output.h \
 output/plaintext/plaintext.h output/plaintext/language_dependant.h \
 conditions/conditions.h options/options.h input/plaintext/twin.h \
 conditions/mummer.h solving/solve.h conditions/check_zigzag.h \
 position/pieceid.h stipulation/has_solution_type.h stipulation/branch.h \
 stipulation/structure_traversal.h stipulation/slice.h \
 stipulation/traversal.h stipulation/help_play/branch.h \
 stipulation/battle_play/branch.h stipulation/move_inverter.h \
 stipulation/boolean/and.h stipulation/boolean/or.h \
 stipulation/boolean/not.h stipulation/proxy.h stipulation/pipe.h \
 solving/play_suppressor.h debugging/trace.h pymsg.h pylang.h \
 utilities/boolean.h

input/plaintext/sstipulation.h:

stipulation/stipulation.h:

stipulation/goals/goals.h:

position/board.h:

utilities/bitmask.h:

utilities/boolean.h:

stipulation/slice_type.h:

utilities/enumeration.h:

position/position.h:

pieces/pieces.h:

pieces/walks/vectors.h:

output/mode.h:

input/plaintext/stipulation.h:

input/plaintext/goal.h:

input/plaintext/token.h:

pylang.h:

input/plaintext/line.h:

output/output.h:

output/plaintext/plaintext.h:

output/plaintext/language_dependant.h:

conditions/conditions.h:

options/options.h:

input/plaintext/twin.h:

conditions/mummer.h:

solving/solve.h:

conditions/check_zigzag.h:

position/pieceid.h:

stipulation/has_solution_type.h:

stipulation/branch.h:

stipulation/structure_traversal.h:

stipulation/slice.h:

stipulation/traversal.h:

stipulation/help_play/branch.h:

stipulation/battle_play/branch.h:

stipulation/move_inverter.h:

stipulation/boolean/and.h:

stipulation/boolean/or.h:

stipulation/boolean/not.h:

stipulation/proxy.h:

stipulation/pipe.h:

solving/play_suppressor.h:

debugging/trace.h:

pymsg.h:

pylang.h:

utilities/boolean.h:
input/plaintext/goal$(OBJ_SUFFIX): input/plaintext/goal.c input/plaintext/goal.h \
 stipulation/stipulation.h stipulation/goals/goals.h position/board.h \
 utilities/bitmask.h utilities/boolean.h stipulation/slice_type.h \
 utilities/enumeration.h position/position.h pieces/pieces.h \
 pieces/walks/vectors.h output/mode.h input/plaintext/pieces.h \
 output/output.h conditions/imitator.h solving/solve.h \
 solving/move_effect_journal.h solving/castling_rights.h solving/ply.h \
 position/pieceid.h stipulation/pipe.h stipulation/structure_traversal.h \
 stipulation/slice.h stipulation/traversal.h \
 stipulation/goals/target/reached_tester.h \
 stipulation/goals/immobile/reached_tester.h \
 stipulation/goals/reached_tester.h \
 stipulation/goals/mate/reached_tester.h \
 stipulation/goals/stalemate/reached_tester.h \
 stipulation/goals/doublestalemate/reached_tester.h \
 stipulation/goals/check/reached_tester.h \
 stipulation/goals/capture/reached_tester.h \
 stipulation/goals/steingewinn/reached_tester.h \
 stipulation/goals/enpassant/reached_tester.h \
 stipulation/goals/doublemate/reached_tester.h \
 stipulation/goals/countermate/reached_tester.h \
 stipulation/goals/castling/reached_tester.h \
 stipulation/goals/autostalemate/reached_tester.h \
 stipulation/goals/circuit/reached_tester.h \
 stipulation/goals/exchange/reached_tester.h \
 stipulation/goals/circuit_by_rebirth/reached_tester.h \
 stipulation/goals/exchange_by_rebirth/reached_tester.h \
 stipulation/goals/any/reached_tester.h \
 stipulation/goals/proofgame/reached_tester.h \
 stipulation/goals/atob/reached_tester.h \
 stipulation/goals/chess81/reached_tester.h debugging/trace.h pymsg.h \
 pylang.h utilities/boolean.h pyproof.h stipulation/stipulation.h

input/plaintext/goal.h:

stipulation/stipulation.h:

stipulation/goals/goals.h:

position/board.h:

utilities/bitmask.h:

utilities/boolean.h:

stipulation/slice_type.h:

utilities/enumeration.h:

position/position.h:

pieces/pieces.h:

pieces/walks/vectors.h:

output/mode.h:

input/plaintext/pieces.h:

output/output.h:

conditions/imitator.h:

solving/solve.h:

solving/move_effect_journal.h:

solving/castling_rights.h:

solving/ply.h:

position/pieceid.h:

stipulation/pipe.h:

stipulation/structure_traversal.h:

stipulation/slice.h:

stipulation/traversal.h:

stipulation/goals/target/reached_tester.h:

stipulation/goals/immobile/reached_tester.h:

stipulation/goals/reached_tester.h:

stipulation/goals/mate/reached_tester.h:

stipulation/goals/stalemate/reached_tester.h:

stipulation/goals/doublestalemate/reached_tester.h:

stipulation/goals/check/reached_tester.h:

stipulation/goals/capture/reached_tester.h:

stipulation/goals/steingewinn/reached_tester.h:

stipulation/goals/enpassant/reached_tester.h:

stipulation/goals/doublemate/reached_tester.h:

stipulation/goals/countermate/reached_tester.h:

stipulation/goals/castling/reached_tester.h:

stipulation/goals/autostalemate/reached_tester.h:

stipulation/goals/circuit/reached_tester.h:

stipulation/goals/exchange/reached_tester.h:

stipulation/goals/circuit_by_rebirth/reached_tester.h:

stipulation/goals/exchange_by_rebirth/reached_tester.h:

stipulation/goals/any/reached_tester.h:

stipulation/goals/proofgame/reached_tester.h:

stipulation/goals/atob/reached_tester.h:

stipulation/goals/chess81/reached_tester.h:

debugging/trace.h:

pymsg.h:

pylang.h:

utilities/boolean.h:

pyproof.h:

stipulation/stipulation.h:
input/plaintext/condition$(OBJ_SUFFIX): input/plaintext/condition.c \
 input/plaintext/condition.h position/board.h utilities/bitmask.h \
 input/plaintext/pieces.h position/position.h pieces/pieces.h \
 utilities/boolean.h pieces/walks/vectors.h utilities/enumeration.h \
 output/output.h output/mode.h stipulation/stipulation.h \
 stipulation/goals/goals.h stipulation/slice_type.h \
 output/plaintext/language_dependant.h pylang.h conditions/conditions.h \
 options/options.h input/plaintext/twin.h input/plaintext/token.h \
 input/plaintext/line.h conditions/mummer.h solving/solve.h \
 pieces/walks/pawns/promotion.h pieces/attributes/chameleon.h \
 solving/ply.h conditions/annan.h conditions/anticirce/anticirce.h \
 conditions/anticirce/cheylan.h conditions/bgl.h \
 solving/move_effect_journal.h solving/castling_rights.h \
 position/pieceid.h conditions/circe/april.h conditions/circe/chameleon.h \
 conditions/circe/circe.h conditions/circe/rex_inclusive.h \
 conditions/football.h conditions/geneva.h conditions/grid.h \
 conditions/imitator.h conditions/immune.h conditions/isardam.h \
 conditions/kobul.h conditions/koeko/anti.h conditions/koeko/koeko.h \
 conditions/madrasi.h conditions/magic_square.h \
 conditions/marscirce/marscirce.h solving/observation.h \
 conditions/messigny.h conditions/oscillating_kings.h \
 conditions/protean.h conditions/phantom.h conditions/republican.h \
 conditions/sat.h conditions/sentinelles.h conditions/singlebox/type1.h \
 conditions/vaulting_kings.h conditions/woozles.h \
 pieces/walks/pawns/en_passant.h solving/castling.h debugging/trace.h \
 pymsg.h pylang.h utilities/boolean.h

input/plaintext/condition.h:

position/board.h:

utilities/bitmask.h:

input/plaintext/pieces.h:

position/position.h:

pieces/pieces.h:

utilities/boolean.h:

pieces/walks/vectors.h:

utilities/enumeration.h:

output/output.h:

output/mode.h:

stipulation/stipulation.h:

stipulation/goals/goals.h:

stipulation/slice_type.h:

output/plaintext/language_dependant.h:

pylang.h:

conditions/conditions.h:

options/options.h:

input/plaintext/twin.h:

input/plaintext/token.h:

input/plaintext/line.h:

conditions/mummer.h:

solving/solve.h:

pieces/walks/pawns/promotion.h:

pieces/attributes/chameleon.h:

solving/ply.h:

conditions/annan.h:

conditions/anticirce/anticirce.h:

conditions/anticirce/cheylan.h:

conditions/bgl.h:

solving/move_effect_journal.h:

solving/castling_rights.h:

position/pieceid.h:

conditions/circe/april.h:

conditions/circe/chameleon.h:

conditions/circe/circe.h:

conditions/circe/rex_inclusive.h:

conditions/football.h:

conditions/geneva.h:

conditions/grid.h:

conditions/imitator.h:

conditions/immune.h:

conditions/isardam.h:

conditions/kobul.h:

conditions/koeko/anti.h:

conditions/koeko/koeko.h:

conditions/madrasi.h:

conditions/magic_square.h:

conditions/marscirce/marscirce.h:

solving/observation.h:

conditions/messigny.h:

conditions/oscillating_kings.h:

conditions/protean.h:

conditions/phantom.h:

conditions/republican.h:

conditions/sat.h:

conditions/sentinelles.h:

conditions/singlebox/type1.h:

conditions/vaulting_kings.h:

conditions/woozles.h:

pieces/walks/pawns/en_passant.h:

solving/castling.h:

debugging/trace.h:

pymsg.h:

pylang.h:

utilities/boolean.h:
input/plaintext/option$(OBJ_SUFFIX): input/plaintext/option.c \
 input/plaintext/option.h stipulation/stipulation.h \
 stipulation/goals/goals.h position/board.h utilities/bitmask.h \
 utilities/boolean.h stipulation/slice_type.h utilities/enumeration.h \
 position/position.h pieces/pieces.h pieces/walks/vectors.h output/mode.h \
 input/plaintext/pieces.h input/plaintext/condition.h \
 input/plaintext/token.h pylang.h input/plaintext/line.h output/output.h \
 options/options.h options/maxsolutions/maxsolutions.h \
 options/movenumbers.h solving/solve.h options/maxthreatlength.h \
 options/degenerate_tree.h options/maxflightsquares.h \
 options/nontrivial.h \
 optimisations/intelligent/limit_nr_solutions_per_target.h \
 output/plaintext/language_dependant.h conditions/conditions.h \
 input/plaintext/twin.h conditions/mummer.h \
 pieces/attributes/neutral/neutral.h solving/move_effect_journal.h \
 solving/castling_rights.h solving/ply.h position/pieceid.h \
 solving/move_generator.h solving/castling.h solving/battle_play/try.h \
 utilities/table.h platform/beep.h platform/maxtime.h pymsg.h pylang.h \
 utilities/boolean.h

input/plaintext/option.h:

stipulation/stipulation.h:

stipulation/goals/goals.h:

position/board.h:

utilities/bitmask.h:

utilities/boolean.h:

stipulation/slice_type.h:

utilities/enumeration.h:

position/position.h:

pieces/pieces.h:

pieces/walks/vectors.h:

output/mode.h:

input/plaintext/pieces.h:

input/plaintext/condition.h:

input/plaintext/token.h:

pylang.h:

input/plaintext/line.h:

output/output.h:

options/options.h:

options/maxsolutions/maxsolutions.h:

options/movenumbers.h:

solving/solve.h:

options/maxthreatlength.h:

options/degenerate_tree.h:

options/maxflightsquares.h:

options/nontrivial.h:

optimisations/intelligent/limit_nr_solutions_per_target.h:

output/plaintext/language_dependant.h:

conditions/conditions.h:

input/plaintext/twin.h:

conditions/mummer.h:

pieces/attributes/neutral/neutral.h:

solving/move_effect_journal.h:

solving/castling_rights.h:

solving/ply.h:

position/pieceid.h:

solving/move_generator.h:

solving/castling.h:

solving/battle_play/try.h:

utilities/table.h:

platform/beep.h:

platform/maxtime.h:

pymsg.h:

pylang.h:

utilities/boolean.h:
