optimisations/immobility_tester_king_first$(OBJ_SUFFIX): \
 optimisations/immobility_tester_king_first.c \
 stipulation/goals/immobile/reached_tester.h stipulation/stipulation.h \
 stipulation/goals/goals.h utilities/boolean.h py.h utilities/boolean.h \
 position/position.h position/board.h utilities/bitmask.h pieces/pieces.h \
 pieces/walks/vectors.h utilities/enumeration.h solving/ply.h \
 position/position.h stipulation/slice_type.h output/mode.h \
 stipulation/structure_traversal.h stipulation/slice.h \
 stipulation/traversal.h solving/solve.h pydata.h py.h \
 conditions/mummer.h stipulation/proxy.h stipulation/pipe.h \
 stipulation/branch.h stipulation/boolean/and.h \
 solving/king_move_generator.h solving/non_king_move_generator.h \
 debugging/trace.h

stipulation/goals/immobile/reached_tester.h:

stipulation/stipulation.h:

stipulation/goals/goals.h:

utilities/boolean.h:

py.h:

utilities/boolean.h:

position/position.h:

position/board.h:

utilities/bitmask.h:

pieces/pieces.h:

pieces/walks/vectors.h:

utilities/enumeration.h:

solving/ply.h:

position/position.h:

stipulation/slice_type.h:

output/mode.h:

stipulation/structure_traversal.h:

stipulation/slice.h:

stipulation/traversal.h:

solving/solve.h:

pydata.h:

py.h:

conditions/mummer.h:

stipulation/proxy.h:

stipulation/pipe.h:

stipulation/branch.h:

stipulation/boolean/and.h:

solving/king_move_generator.h:

solving/non_king_move_generator.h:

debugging/trace.h:
optimisations/keepmating$(OBJ_SUFFIX): optimisations/keepmating.c \
 optimisations/keepmating.h solving/solve.h py.h utilities/boolean.h \
 position/position.h position/board.h utilities/bitmask.h pieces/pieces.h \
 pieces/walks/vectors.h utilities/boolean.h utilities/enumeration.h \
 solving/ply.h position/position.h stipulation/stipulation.h \
 stipulation/goals/goals.h stipulation/slice_type.h output/mode.h \
 pydata.h py.h stipulation/pipe.h stipulation/structure_traversal.h \
 stipulation/slice.h stipulation/traversal.h \
 stipulation/battle_play/branch.h stipulation/help_play/branch.h \
 debugging/trace.h

optimisations/keepmating.h:

solving/solve.h:

py.h:

utilities/boolean.h:

position/position.h:

position/board.h:

utilities/bitmask.h:

pieces/pieces.h:

pieces/walks/vectors.h:

utilities/boolean.h:

utilities/enumeration.h:

solving/ply.h:

position/position.h:

stipulation/stipulation.h:

stipulation/goals/goals.h:

stipulation/slice_type.h:

output/mode.h:

pydata.h:

py.h:

stipulation/pipe.h:

stipulation/structure_traversal.h:

stipulation/slice.h:

stipulation/traversal.h:

stipulation/battle_play/branch.h:

stipulation/help_play/branch.h:

debugging/trace.h:
optimisations/hash$(OBJ_SUFFIX): optimisations/hash.c optimisations/hash.h \
 DHT/dhtbcmem.h py.h utilities/boolean.h position/position.h \
 position/board.h utilities/bitmask.h pieces/pieces.h \
 pieces/walks/vectors.h utilities/boolean.h utilities/enumeration.h \
 solving/ply.h position/position.h solving/solve.h \
 stipulation/stipulation.h stipulation/goals/goals.h \
 stipulation/slice_type.h output/mode.h solving/ply.h pymsg.h pylang.h \
 pyproof.h py.h stipulation/stipulation.h DHT/dhtvalue.h DHT/fxf.h \
 DHT/dht.h pieces/walks/pawns/en_passant.h solving/move_effect_journal.h \
 solving/castling_rights.h position/pieceid.h solving/observation.h \
 conditions/bgl.h conditions/duellists.h conditions/haunted_chess.h \
 conditions/imitator.h options/nontrivial.h solving/avoid_unsolvable.h \
 solving/castling.h stipulation/has_solution_type.h stipulation/proxy.h \
 stipulation/pipe.h stipulation/structure_traversal.h stipulation/slice.h \
 stipulation/traversal.h stipulation/battle_play/branch.h \
 stipulation/help_play/branch.h stipulation/branch.h platform/maxtime.h \
 platform/maxmem.h debugging/trace.h pydata.h options/options.h \
 conditions/conditions.h

optimisations/hash.h:

DHT/dhtbcmem.h:

py.h:

utilities/boolean.h:

position/position.h:

position/board.h:

utilities/bitmask.h:

pieces/pieces.h:

pieces/walks/vectors.h:

utilities/boolean.h:

utilities/enumeration.h:

solving/ply.h:

position/position.h:

solving/solve.h:

stipulation/stipulation.h:

stipulation/goals/goals.h:

stipulation/slice_type.h:

output/mode.h:

solving/ply.h:

pymsg.h:

pylang.h:

pyproof.h:

py.h:

stipulation/stipulation.h:

DHT/dhtvalue.h:

DHT/fxf.h:

DHT/dht.h:

pieces/walks/pawns/en_passant.h:

solving/move_effect_journal.h:

solving/castling_rights.h:

position/pieceid.h:

solving/observation.h:

conditions/bgl.h:

conditions/duellists.h:

conditions/haunted_chess.h:

conditions/imitator.h:

options/nontrivial.h:

solving/avoid_unsolvable.h:

solving/castling.h:

stipulation/has_solution_type.h:

stipulation/proxy.h:

stipulation/pipe.h:

stipulation/structure_traversal.h:

stipulation/slice.h:

stipulation/traversal.h:

stipulation/battle_play/branch.h:

stipulation/help_play/branch.h:

stipulation/branch.h:

platform/maxtime.h:

platform/maxmem.h:

debugging/trace.h:

pydata.h:

options/options.h:

conditions/conditions.h:
optimisations/orthodox_square_observation$(OBJ_SUFFIX): \
 optimisations/orthodox_square_observation.c \
 optimisations/orthodox_square_observation.h position/position.h \
 position/board.h utilities/bitmask.h pieces/pieces.h \
 pieces/walks/vectors.h utilities/boolean.h utilities/enumeration.h \
 pieces/walks/pawns/en_passant.h solving/solve.h py.h utilities/boolean.h \
 position/position.h solving/ply.h stipulation/stipulation.h \
 stipulation/goals/goals.h stipulation/slice_type.h output/mode.h \
 solving/move_effect_journal.h solving/castling_rights.h solving/ply.h \
 position/pieceid.h solving/observation.h debugging/trace.h pydata.h py.h

optimisations/orthodox_square_observation.h:

position/position.h:

position/board.h:

utilities/bitmask.h:

pieces/pieces.h:

pieces/walks/vectors.h:

utilities/boolean.h:

utilities/enumeration.h:

pieces/walks/pawns/en_passant.h:

solving/solve.h:

py.h:

utilities/boolean.h:

position/position.h:

solving/ply.h:

stipulation/stipulation.h:

stipulation/goals/goals.h:

stipulation/slice_type.h:

output/mode.h:

solving/move_effect_journal.h:

solving/castling_rights.h:

solving/ply.h:

position/pieceid.h:

solving/observation.h:

debugging/trace.h:

pydata.h:

py.h:
optimisations/orthodox_check_directions$(OBJ_SUFFIX): \
 optimisations/orthodox_check_directions.c \
 optimisations/orthodox_check_directions.h pieces/walks/vectors.h \
 position/position.h position/board.h utilities/bitmask.h pieces/pieces.h \
 utilities/boolean.h utilities/enumeration.h

optimisations/orthodox_check_directions.h:

pieces/walks/vectors.h:

position/position.h:

position/board.h:

utilities/bitmask.h:

pieces/pieces.h:

utilities/boolean.h:

utilities/enumeration.h:
optimisations/detect_retraction$(OBJ_SUFFIX): optimisations/detect_retraction.c \
 optimisations/detect_retraction.h solving/solve.h py.h \
 utilities/boolean.h position/position.h position/board.h \
 utilities/bitmask.h pieces/pieces.h pieces/walks/vectors.h \
 utilities/boolean.h utilities/enumeration.h solving/ply.h \
 position/position.h stipulation/stipulation.h stipulation/goals/goals.h \
 stipulation/slice_type.h output/mode.h pydata.h py.h \
 solving/move_generator.h solving/ply.h solving/move_effect_journal.h \
 solving/castling_rights.h position/pieceid.h stipulation/pipe.h \
 stipulation/structure_traversal.h stipulation/slice.h \
 stipulation/traversal.h stipulation/has_solution_type.h \
 stipulation/proxy.h stipulation/branch.h debugging/trace.h

optimisations/detect_retraction.h:

solving/solve.h:

py.h:

utilities/boolean.h:

position/position.h:

position/board.h:

utilities/bitmask.h:

pieces/pieces.h:

pieces/walks/vectors.h:

utilities/boolean.h:

utilities/enumeration.h:

solving/ply.h:

position/position.h:

stipulation/stipulation.h:

stipulation/goals/goals.h:

stipulation/slice_type.h:

output/mode.h:

pydata.h:

py.h:

solving/move_generator.h:

solving/ply.h:

solving/move_effect_journal.h:

solving/castling_rights.h:

position/pieceid.h:

stipulation/pipe.h:

stipulation/structure_traversal.h:

stipulation/slice.h:

stipulation/traversal.h:

stipulation/has_solution_type.h:

stipulation/proxy.h:

stipulation/branch.h:

debugging/trace.h:
