optimisations/intelligent/intelligent$(OBJ_SUFFIX): \
 optimisations/intelligent/intelligent.c \
 optimisations/intelligent/intelligent.h pieces/pieces.h \
 utilities/boolean.h position/position.h position/board.h \
 utilities/bitmask.h position/side.h position/side.enum.h \
 position/color.h position/color.enum.h pieces/walks/vectors.h \
 position/pieceid.h stipulation/goals/goals.h solving/machinery/solve.h \
 stipulation/stipulation.h stipulation/slice_type.h \
 stipulation/slice_type.enum.h output/mode.h output/mode.enum.h \
 solving/machinery/dispatch.h debugging/trace.h solving/ply.h \
 optimisations/intelligent/piece_usage.h \
 optimisations/intelligent/piece_usage.enum.h \
 pieces/walks/pawns/en_passant.h solving/move_effect_journal.h \
 solving/castling_rights.h solving/observation.h \
 solving/temporary_hacks.h solving/proofgames.h solving/castling.h \
 solving/check.h stipulation/help_play/branch.h stipulation/fork.h \
 stipulation/structure_traversal.h stipulation/slice.h \
 stipulation/slice_structural_type.h \
 stipulation/slice_structural_type.enum.h \
 stipulation/slice_functional_type.h \
 stipulation/slice_functional_type.enum.h stipulation/traversal.h \
 stipulation/pipe.h stipulation/branch.h \
 optimisations/intelligent/count_nr_of_moves.h \
 optimisations/intelligent/guard_flights.h \
 optimisations/intelligent/moves_left.h \
 optimisations/intelligent/stalemate/filter.h \
 optimisations/intelligent/proof.h \
 optimisations/intelligent/duplicate_avoider.h \
 optimisations/intelligent/limit_nr_solutions_per_target.h \
 optimisations/intelligent/place_black_piece.h \
 optimisations/intelligent/mate/filter.h \
 optimisations/intelligent/mate/generate_checking_moves.h \
 optimisations/intelligent/mate/generate_doublechecking_moves.h \
 output/plaintext/pieces.h platform/maxtime.h options/options.h \
 debugging/assert.h utilities/enumeration.h

optimisations/intelligent/intelligent.h:

pieces/pieces.h:

utilities/boolean.h:

position/position.h:

position/board.h:

utilities/bitmask.h:

position/side.h:

position/side.enum.h:

position/color.h:

position/color.enum.h:

pieces/walks/vectors.h:

position/pieceid.h:

stipulation/goals/goals.h:

solving/machinery/solve.h:

stipulation/stipulation.h:

stipulation/slice_type.h:

stipulation/slice_type.enum.h:

output/mode.h:

output/mode.enum.h:

solving/machinery/dispatch.h:

debugging/trace.h:

solving/ply.h:

optimisations/intelligent/piece_usage.h:

optimisations/intelligent/piece_usage.enum.h:

pieces/walks/pawns/en_passant.h:

solving/move_effect_journal.h:

solving/castling_rights.h:

solving/observation.h:

solving/temporary_hacks.h:

solving/proofgames.h:

solving/castling.h:

solving/check.h:

stipulation/help_play/branch.h:

stipulation/fork.h:

stipulation/structure_traversal.h:

stipulation/slice.h:

stipulation/slice_structural_type.h:

stipulation/slice_structural_type.enum.h:

stipulation/slice_functional_type.h:

stipulation/slice_functional_type.enum.h:

stipulation/traversal.h:

stipulation/pipe.h:

stipulation/branch.h:

optimisations/intelligent/count_nr_of_moves.h:

optimisations/intelligent/guard_flights.h:

optimisations/intelligent/moves_left.h:

optimisations/intelligent/stalemate/filter.h:

optimisations/intelligent/proof.h:

optimisations/intelligent/duplicate_avoider.h:

optimisations/intelligent/limit_nr_solutions_per_target.h:

optimisations/intelligent/place_black_piece.h:

optimisations/intelligent/mate/filter.h:

optimisations/intelligent/mate/generate_checking_moves.h:

optimisations/intelligent/mate/generate_doublechecking_moves.h:

output/plaintext/pieces.h:

platform/maxtime.h:

options/options.h:

debugging/assert.h:

utilities/enumeration.h:
optimisations/intelligent/moves_left$(OBJ_SUFFIX): \
 optimisations/intelligent/moves_left.c \
 optimisations/intelligent/moves_left.h solving/machinery/solve.h \
 stipulation/stipulation.h stipulation/goals/goals.h position/board.h \
 utilities/bitmask.h utilities/boolean.h stipulation/slice_type.h \
 stipulation/slice_type.enum.h position/side.h position/side.enum.h \
 pieces/pieces.h output/mode.h output/mode.enum.h \
 solving/machinery/dispatch.h debugging/trace.h stipulation/pipe.h \
 stipulation/structure_traversal.h stipulation/slice.h \
 stipulation/slice_structural_type.h \
 stipulation/slice_structural_type.enum.h \
 stipulation/slice_functional_type.h \
 stipulation/slice_functional_type.enum.h stipulation/traversal.h \
 solving/has_solution_type.h solving/has_solution_type.enum.h \
 solving/moves_traversal.h solving/pipe.h position/position.h \
 position/color.h position/color.enum.h pieces/walks/vectors.h \
 debugging/assert.h

optimisations/intelligent/moves_left.h:

solving/machinery/solve.h:

stipulation/stipulation.h:

stipulation/goals/goals.h:

position/board.h:

utilities/bitmask.h:

utilities/boolean.h:

stipulation/slice_type.h:

stipulation/slice_type.enum.h:

position/side.h:

position/side.enum.h:

pieces/pieces.h:

output/mode.h:

output/mode.enum.h:

solving/machinery/dispatch.h:

debugging/trace.h:

stipulation/pipe.h:

stipulation/structure_traversal.h:

stipulation/slice.h:

stipulation/slice_structural_type.h:

stipulation/slice_structural_type.enum.h:

stipulation/slice_functional_type.h:

stipulation/slice_functional_type.enum.h:

stipulation/traversal.h:

solving/has_solution_type.h:

solving/has_solution_type.enum.h:

solving/moves_traversal.h:

solving/pipe.h:

position/position.h:

position/color.h:

position/color.enum.h:

pieces/walks/vectors.h:

debugging/assert.h:
optimisations/intelligent/proof$(OBJ_SUFFIX): optimisations/intelligent/proof.c \
 optimisations/intelligent/proof.h solving/machinery/solve.h \
 stipulation/stipulation.h stipulation/goals/goals.h position/board.h \
 utilities/bitmask.h utilities/boolean.h stipulation/slice_type.h \
 stipulation/slice_type.enum.h position/side.h position/side.enum.h \
 pieces/pieces.h output/mode.h output/mode.enum.h \
 solving/machinery/dispatch.h debugging/trace.h solving/proofgames.h \
 stipulation/pipe.h stipulation/structure_traversal.h stipulation/slice.h \
 stipulation/slice_structural_type.h \
 stipulation/slice_structural_type.enum.h \
 stipulation/slice_functional_type.h \
 stipulation/slice_functional_type.enum.h stipulation/traversal.h \
 solving/pipe.h

optimisations/intelligent/proof.h:

solving/machinery/solve.h:

stipulation/stipulation.h:

stipulation/goals/goals.h:

position/board.h:

utilities/bitmask.h:

utilities/boolean.h:

stipulation/slice_type.h:

stipulation/slice_type.enum.h:

position/side.h:

position/side.enum.h:

pieces/pieces.h:

output/mode.h:

output/mode.enum.h:

solving/machinery/dispatch.h:

debugging/trace.h:

solving/proofgames.h:

stipulation/pipe.h:

stipulation/structure_traversal.h:

stipulation/slice.h:

stipulation/slice_structural_type.h:

stipulation/slice_structural_type.enum.h:

stipulation/slice_functional_type.h:

stipulation/slice_functional_type.enum.h:

stipulation/traversal.h:

solving/pipe.h:
optimisations/intelligent/duplicate_avoider$(OBJ_SUFFIX): \
 optimisations/intelligent/duplicate_avoider.c \
 optimisations/intelligent/duplicate_avoider.h solving/machinery/solve.h \
 stipulation/stipulation.h stipulation/goals/goals.h position/board.h \
 utilities/bitmask.h utilities/boolean.h stipulation/slice_type.h \
 stipulation/slice_type.enum.h position/side.h position/side.enum.h \
 pieces/pieces.h output/mode.h output/mode.enum.h \
 solving/machinery/dispatch.h debugging/trace.h \
 optimisations/intelligent/intelligent.h position/position.h \
 position/color.h position/color.enum.h pieces/walks/vectors.h \
 position/pieceid.h solving/ply.h optimisations/intelligent/piece_usage.h \
 optimisations/intelligent/piece_usage.enum.h stipulation/pipe.h \
 stipulation/structure_traversal.h stipulation/slice.h \
 stipulation/slice_structural_type.h \
 stipulation/slice_structural_type.enum.h \
 stipulation/slice_functional_type.h \
 stipulation/slice_functional_type.enum.h stipulation/traversal.h \
 solving/has_solution_type.h solving/has_solution_type.enum.h \
 solving/move_generator.h solving/pipe.h debugging/assert.h

optimisations/intelligent/duplicate_avoider.h:

solving/machinery/solve.h:

stipulation/stipulation.h:

stipulation/goals/goals.h:

position/board.h:

utilities/bitmask.h:

utilities/boolean.h:

stipulation/slice_type.h:

stipulation/slice_type.enum.h:

position/side.h:

position/side.enum.h:

pieces/pieces.h:

output/mode.h:

output/mode.enum.h:

solving/machinery/dispatch.h:

debugging/trace.h:

optimisations/intelligent/intelligent.h:

position/position.h:

position/color.h:

position/color.enum.h:

pieces/walks/vectors.h:

position/pieceid.h:

solving/ply.h:

optimisations/intelligent/piece_usage.h:

optimisations/intelligent/piece_usage.enum.h:

stipulation/pipe.h:

stipulation/structure_traversal.h:

stipulation/slice.h:

stipulation/slice_structural_type.h:

stipulation/slice_structural_type.enum.h:

stipulation/slice_functional_type.h:

stipulation/slice_functional_type.enum.h:

stipulation/traversal.h:

solving/has_solution_type.h:

solving/has_solution_type.enum.h:

solving/move_generator.h:

solving/pipe.h:

debugging/assert.h:
optimisations/intelligent/limit_nr_solutions_per_target$(OBJ_SUFFIX): \
 optimisations/intelligent/limit_nr_solutions_per_target.c \
 optimisations/intelligent/limit_nr_solutions_per_target.h \
 solving/machinery/solve.h stipulation/stipulation.h \
 stipulation/goals/goals.h position/board.h utilities/bitmask.h \
 utilities/boolean.h stipulation/slice_type.h \
 stipulation/slice_type.enum.h position/side.h position/side.enum.h \
 pieces/pieces.h output/mode.h output/mode.enum.h \
 solving/machinery/dispatch.h debugging/trace.h stipulation/pipe.h \
 stipulation/structure_traversal.h stipulation/slice.h \
 stipulation/slice_structural_type.h \
 stipulation/slice_structural_type.enum.h \
 stipulation/slice_functional_type.h \
 stipulation/slice_functional_type.enum.h stipulation/traversal.h \
 solving/has_solution_type.h solving/has_solution_type.enum.h \
 solving/pipe.h

optimisations/intelligent/limit_nr_solutions_per_target.h:

solving/machinery/solve.h:

stipulation/stipulation.h:

stipulation/goals/goals.h:

position/board.h:

utilities/bitmask.h:

utilities/boolean.h:

stipulation/slice_type.h:

stipulation/slice_type.enum.h:

position/side.h:

position/side.enum.h:

pieces/pieces.h:

output/mode.h:

output/mode.enum.h:

solving/machinery/dispatch.h:

debugging/trace.h:

stipulation/pipe.h:

stipulation/structure_traversal.h:

stipulation/slice.h:

stipulation/slice_structural_type.h:

stipulation/slice_structural_type.enum.h:

stipulation/slice_functional_type.h:

stipulation/slice_functional_type.enum.h:

stipulation/traversal.h:

solving/has_solution_type.h:

solving/has_solution_type.enum.h:

solving/pipe.h:
optimisations/intelligent/place_white_piece$(OBJ_SUFFIX): \
 optimisations/intelligent/place_white_piece.c \
 optimisations/intelligent/place_white_piece.h pieces/pieces.h \
 utilities/boolean.h position/position.h position/board.h \
 utilities/bitmask.h position/side.h position/side.enum.h \
 position/color.h position/color.enum.h pieces/walks/vectors.h \
 optimisations/intelligent/intelligent.h position/pieceid.h \
 stipulation/goals/goals.h solving/machinery/solve.h \
 stipulation/stipulation.h stipulation/slice_type.h \
 stipulation/slice_type.enum.h output/mode.h output/mode.enum.h \
 solving/machinery/dispatch.h debugging/trace.h solving/ply.h \
 optimisations/intelligent/piece_usage.h \
 optimisations/intelligent/piece_usage.enum.h \
 optimisations/intelligent/count_nr_of_moves.h \
 optimisations/intelligent/guard_flights.h \
 optimisations/intelligent/intercept_guard_by_white.h \
 pieces/walks/pawns/promotee_sequence.h debugging/assert.h

optimisations/intelligent/place_white_piece.h:

pieces/pieces.h:

utilities/boolean.h:

position/position.h:

position/board.h:

utilities/bitmask.h:

position/side.h:

position/side.enum.h:

position/color.h:

position/color.enum.h:

pieces/walks/vectors.h:

optimisations/intelligent/intelligent.h:

position/pieceid.h:

stipulation/goals/goals.h:

solving/machinery/solve.h:

stipulation/stipulation.h:

stipulation/slice_type.h:

stipulation/slice_type.enum.h:

output/mode.h:

output/mode.enum.h:

solving/machinery/dispatch.h:

debugging/trace.h:

solving/ply.h:

optimisations/intelligent/piece_usage.h:

optimisations/intelligent/piece_usage.enum.h:

optimisations/intelligent/count_nr_of_moves.h:

optimisations/intelligent/guard_flights.h:

optimisations/intelligent/intercept_guard_by_white.h:

pieces/walks/pawns/promotee_sequence.h:

debugging/assert.h:
optimisations/intelligent/place_white_king$(OBJ_SUFFIX): \
 optimisations/intelligent/place_white_king.c \
 optimisations/intelligent/place_white_king.h position/position.h \
 position/board.h utilities/bitmask.h position/side.h \
 position/side.enum.h position/color.h position/color.enum.h \
 pieces/pieces.h utilities/boolean.h pieces/walks/vectors.h \
 optimisations/intelligent/intelligent.h position/pieceid.h \
 stipulation/goals/goals.h solving/machinery/solve.h \
 stipulation/stipulation.h stipulation/slice_type.h \
 stipulation/slice_type.enum.h output/mode.h output/mode.enum.h \
 solving/machinery/dispatch.h debugging/trace.h solving/ply.h \
 optimisations/intelligent/piece_usage.h \
 optimisations/intelligent/piece_usage.enum.h \
 optimisations/intelligent/count_nr_of_moves.h \
 optimisations/intelligent/intercept_check_by_black.h \
 optimisations/orthodox_square_observation.h position/move_diff_code.h \
 debugging/assert.h

optimisations/intelligent/place_white_king.h:

position/position.h:

position/board.h:

utilities/bitmask.h:

position/side.h:

position/side.enum.h:

position/color.h:

position/color.enum.h:

pieces/pieces.h:

utilities/boolean.h:

pieces/walks/vectors.h:

optimisations/intelligent/intelligent.h:

position/pieceid.h:

stipulation/goals/goals.h:

solving/machinery/solve.h:

stipulation/stipulation.h:

stipulation/slice_type.h:

stipulation/slice_type.enum.h:

output/mode.h:

output/mode.enum.h:

solving/machinery/dispatch.h:

debugging/trace.h:

solving/ply.h:

optimisations/intelligent/piece_usage.h:

optimisations/intelligent/piece_usage.enum.h:

optimisations/intelligent/count_nr_of_moves.h:

optimisations/intelligent/intercept_check_by_black.h:

optimisations/orthodox_square_observation.h:

position/move_diff_code.h:

debugging/assert.h:
optimisations/intelligent/place_black_piece$(OBJ_SUFFIX): \
 optimisations/intelligent/place_black_piece.c \
 optimisations/intelligent/place_black_piece.h pieces/pieces.h \
 utilities/boolean.h position/board.h utilities/bitmask.h \
 position/position.h position/side.h position/side.enum.h \
 position/color.h position/color.enum.h pieces/walks/vectors.h \
 optimisations/intelligent/intelligent.h position/pieceid.h \
 stipulation/goals/goals.h solving/machinery/solve.h \
 stipulation/stipulation.h stipulation/slice_type.h \
 stipulation/slice_type.enum.h output/mode.h output/mode.enum.h \
 solving/machinery/dispatch.h debugging/trace.h solving/ply.h \
 optimisations/intelligent/piece_usage.h \
 optimisations/intelligent/piece_usage.enum.h \
 optimisations/intelligent/intercept_check_by_black.h \
 optimisations/intelligent/count_nr_of_moves.h \
 optimisations/intelligent/pin_black_piece.h \
 optimisations/intelligent/stalemate/immobilise_black.h \
 optimisations/intelligent/intercept_black_move.h \
 optimisations/intelligent/mate/generate_checking_moves.h \
 optimisations/orthodox_check_directions.h \
 pieces/walks/pawns/promotee_sequence.h debugging/assert.h

optimisations/intelligent/place_black_piece.h:

pieces/pieces.h:

utilities/boolean.h:

position/board.h:

utilities/bitmask.h:

position/position.h:

position/side.h:

position/side.enum.h:

position/color.h:

position/color.enum.h:

pieces/walks/vectors.h:

optimisations/intelligent/intelligent.h:

position/pieceid.h:

stipulation/goals/goals.h:

solving/machinery/solve.h:

stipulation/stipulation.h:

stipulation/slice_type.h:

stipulation/slice_type.enum.h:

output/mode.h:

output/mode.enum.h:

solving/machinery/dispatch.h:

debugging/trace.h:

solving/ply.h:

optimisations/intelligent/piece_usage.h:

optimisations/intelligent/piece_usage.enum.h:

optimisations/intelligent/intercept_check_by_black.h:

optimisations/intelligent/count_nr_of_moves.h:

optimisations/intelligent/pin_black_piece.h:

optimisations/intelligent/stalemate/immobilise_black.h:

optimisations/intelligent/intercept_black_move.h:

optimisations/intelligent/mate/generate_checking_moves.h:

optimisations/orthodox_check_directions.h:

pieces/walks/pawns/promotee_sequence.h:

debugging/assert.h:
optimisations/intelligent/block_flights$(OBJ_SUFFIX): \
 optimisations/intelligent/block_flights.c \
 optimisations/intelligent/block_flights.h \
 optimisations/intelligent/intelligent.h pieces/pieces.h \
 utilities/boolean.h position/position.h position/board.h \
 utilities/bitmask.h position/side.h position/side.enum.h \
 position/color.h position/color.enum.h pieces/walks/vectors.h \
 position/pieceid.h stipulation/goals/goals.h solving/machinery/solve.h \
 stipulation/stipulation.h stipulation/slice_type.h \
 stipulation/slice_type.enum.h output/mode.h output/mode.enum.h \
 solving/machinery/dispatch.h debugging/trace.h solving/ply.h \
 optimisations/intelligent/piece_usage.h \
 optimisations/intelligent/piece_usage.enum.h \
 optimisations/intelligent/intercept_check_by_black.h \
 optimisations/intelligent/count_nr_of_moves.h \
 optimisations/intelligent/place_black_piece.h \
 optimisations/intelligent/mate/finish.h \
 optimisations/intelligent/place_white_king.h \
 optimisations/intelligent/stalemate/finish.h \
 optimisations/orthodox_square_observation.h \
 options/maxsolutions/maxsolutions.h debugging/assert.h

optimisations/intelligent/block_flights.h:

optimisations/intelligent/intelligent.h:

pieces/pieces.h:

utilities/boolean.h:

position/position.h:

position/board.h:

utilities/bitmask.h:

position/side.h:

position/side.enum.h:

position/color.h:

position/color.enum.h:

pieces/walks/vectors.h:

position/pieceid.h:

stipulation/goals/goals.h:

solving/machinery/solve.h:

stipulation/stipulation.h:

stipulation/slice_type.h:

stipulation/slice_type.enum.h:

output/mode.h:

output/mode.enum.h:

solving/machinery/dispatch.h:

debugging/trace.h:

solving/ply.h:

optimisations/intelligent/piece_usage.h:

optimisations/intelligent/piece_usage.enum.h:

optimisations/intelligent/intercept_check_by_black.h:

optimisations/intelligent/count_nr_of_moves.h:

optimisations/intelligent/place_black_piece.h:

optimisations/intelligent/mate/finish.h:

optimisations/intelligent/place_white_king.h:

optimisations/intelligent/stalemate/finish.h:

optimisations/orthodox_square_observation.h:

options/maxsolutions/maxsolutions.h:

debugging/assert.h:
optimisations/intelligent/guard_flights$(OBJ_SUFFIX): \
 optimisations/intelligent/guard_flights.c \
 optimisations/intelligent/guard_flights.h pieces/walks/vectors.h \
 position/board.h utilities/bitmask.h pieces/pieces.h utilities/boolean.h \
 optimisations/intelligent/intelligent.h position/position.h \
 position/side.h position/side.enum.h position/color.h \
 position/color.enum.h position/pieceid.h stipulation/goals/goals.h \
 solving/machinery/solve.h stipulation/stipulation.h \
 stipulation/slice_type.h stipulation/slice_type.enum.h output/mode.h \
 output/mode.enum.h solving/machinery/dispatch.h debugging/trace.h \
 solving/ply.h optimisations/intelligent/piece_usage.h \
 optimisations/intelligent/piece_usage.enum.h \
 optimisations/intelligent/count_nr_of_moves.h \
 optimisations/intelligent/block_flights.h \
 optimisations/intelligent/place_white_king.h \
 optimisations/intelligent/intercept_check_from_guard.h \
 options/maxsolutions/maxsolutions.h \
 optimisations/orthodox_check_directions.h \
 pieces/walks/pawns/promotee_sequence.h position/move_diff_code.h \
 platform/maxtime.h debugging/assert.h

optimisations/intelligent/guard_flights.h:

pieces/walks/vectors.h:

position/board.h:

utilities/bitmask.h:

pieces/pieces.h:

utilities/boolean.h:

optimisations/intelligent/intelligent.h:

position/position.h:

position/side.h:

position/side.enum.h:

position/color.h:

position/color.enum.h:

position/pieceid.h:

stipulation/goals/goals.h:

solving/machinery/solve.h:

stipulation/stipulation.h:

stipulation/slice_type.h:

stipulation/slice_type.enum.h:

output/mode.h:

output/mode.enum.h:

solving/machinery/dispatch.h:

debugging/trace.h:

solving/ply.h:

optimisations/intelligent/piece_usage.h:

optimisations/intelligent/piece_usage.enum.h:

optimisations/intelligent/count_nr_of_moves.h:

optimisations/intelligent/block_flights.h:

optimisations/intelligent/place_white_king.h:

optimisations/intelligent/intercept_check_from_guard.h:

options/maxsolutions/maxsolutions.h:

optimisations/orthodox_check_directions.h:

pieces/walks/pawns/promotee_sequence.h:

position/move_diff_code.h:

platform/maxtime.h:

debugging/assert.h:
optimisations/intelligent/intercept_check_from_guard$(OBJ_SUFFIX): \
 optimisations/intelligent/intercept_check_from_guard.c \
 optimisations/intelligent/intercept_check_from_guard.h position/board.h \
 utilities/bitmask.h pieces/pieces.h utilities/boolean.h \
 optimisations/intelligent/intelligent.h position/position.h \
 position/side.h position/side.enum.h position/color.h \
 position/color.enum.h pieces/walks/vectors.h position/pieceid.h \
 stipulation/goals/goals.h solving/machinery/solve.h \
 stipulation/stipulation.h stipulation/slice_type.h \
 stipulation/slice_type.enum.h output/mode.h output/mode.enum.h \
 solving/machinery/dispatch.h debugging/trace.h solving/ply.h \
 optimisations/intelligent/piece_usage.h \
 optimisations/intelligent/piece_usage.enum.h \
 optimisations/intelligent/guard_flights.h \
 optimisations/intelligent/count_nr_of_moves.h \
 optimisations/intelligent/place_black_piece.h \
 pieces/walks/pawns/promotee_sequence.h debugging/assert.h

optimisations/intelligent/intercept_check_from_guard.h:

position/board.h:

utilities/bitmask.h:

pieces/pieces.h:

utilities/boolean.h:

optimisations/intelligent/intelligent.h:

position/position.h:

position/side.h:

position/side.enum.h:

position/color.h:

position/color.enum.h:

pieces/walks/vectors.h:

position/pieceid.h:

stipulation/goals/goals.h:

solving/machinery/solve.h:

stipulation/stipulation.h:

stipulation/slice_type.h:

stipulation/slice_type.enum.h:

output/mode.h:

output/mode.enum.h:

solving/machinery/dispatch.h:

debugging/trace.h:

solving/ply.h:

optimisations/intelligent/piece_usage.h:

optimisations/intelligent/piece_usage.enum.h:

optimisations/intelligent/guard_flights.h:

optimisations/intelligent/count_nr_of_moves.h:

optimisations/intelligent/place_black_piece.h:

pieces/walks/pawns/promotee_sequence.h:

debugging/assert.h:
optimisations/intelligent/intercept_check_by_black$(OBJ_SUFFIX): \
 optimisations/intelligent/intercept_check_by_black.c \
 optimisations/intelligent/intercept_check_by_black.h pieces/pieces.h \
 utilities/boolean.h optimisations/intelligent/intelligent.h \
 position/position.h position/board.h utilities/bitmask.h position/side.h \
 position/side.enum.h position/color.h position/color.enum.h \
 pieces/walks/vectors.h position/pieceid.h stipulation/goals/goals.h \
 solving/machinery/solve.h stipulation/stipulation.h \
 stipulation/slice_type.h stipulation/slice_type.enum.h output/mode.h \
 output/mode.enum.h solving/machinery/dispatch.h debugging/trace.h \
 solving/ply.h optimisations/intelligent/piece_usage.h \
 optimisations/intelligent/piece_usage.enum.h \
 optimisations/intelligent/place_white_piece.h \
 optimisations/intelligent/place_black_piece.h \
 optimisations/intelligent/count_nr_of_moves.h \
 optimisations/intelligent/intercept_guard_by_white.h \
 pieces/walks/pawns/promotee_sequence.h debugging/assert.h

optimisations/intelligent/intercept_check_by_black.h:

pieces/pieces.h:

utilities/boolean.h:

optimisations/intelligent/intelligent.h:

position/position.h:

position/board.h:

utilities/bitmask.h:

position/side.h:

position/side.enum.h:

position/color.h:

position/color.enum.h:

pieces/walks/vectors.h:

position/pieceid.h:

stipulation/goals/goals.h:

solving/machinery/solve.h:

stipulation/stipulation.h:

stipulation/slice_type.h:

stipulation/slice_type.enum.h:

output/mode.h:

output/mode.enum.h:

solving/machinery/dispatch.h:

debugging/trace.h:

solving/ply.h:

optimisations/intelligent/piece_usage.h:

optimisations/intelligent/piece_usage.enum.h:

optimisations/intelligent/place_white_piece.h:

optimisations/intelligent/place_black_piece.h:

optimisations/intelligent/count_nr_of_moves.h:

optimisations/intelligent/intercept_guard_by_white.h:

pieces/walks/pawns/promotee_sequence.h:

debugging/assert.h:
optimisations/intelligent/intercept_guard_by_white$(OBJ_SUFFIX): \
 optimisations/intelligent/intercept_guard_by_white.c \
 optimisations/intelligent/intercept_guard_by_white.h position/position.h \
 position/board.h utilities/bitmask.h position/side.h \
 position/side.enum.h position/color.h position/color.enum.h \
 pieces/pieces.h utilities/boolean.h pieces/walks/vectors.h \
 optimisations/intelligent/intelligent.h position/pieceid.h \
 stipulation/goals/goals.h solving/machinery/solve.h \
 stipulation/stipulation.h stipulation/slice_type.h \
 stipulation/slice_type.enum.h output/mode.h output/mode.enum.h \
 solving/machinery/dispatch.h debugging/trace.h solving/ply.h \
 optimisations/intelligent/piece_usage.h \
 optimisations/intelligent/piece_usage.enum.h \
 optimisations/intelligent/place_white_piece.h \
 optimisations/intelligent/place_black_piece.h \
 optimisations/intelligent/count_nr_of_moves.h \
 optimisations/intelligent/place_white_king.h \
 pieces/walks/pawns/promotee_sequence.h debugging/assert.h

optimisations/intelligent/intercept_guard_by_white.h:

position/position.h:

position/board.h:

utilities/bitmask.h:

position/side.h:

position/side.enum.h:

position/color.h:

position/color.enum.h:

pieces/pieces.h:

utilities/boolean.h:

pieces/walks/vectors.h:

optimisations/intelligent/intelligent.h:

position/pieceid.h:

stipulation/goals/goals.h:

solving/machinery/solve.h:

stipulation/stipulation.h:

stipulation/slice_type.h:

stipulation/slice_type.enum.h:

output/mode.h:

output/mode.enum.h:

solving/machinery/dispatch.h:

debugging/trace.h:

solving/ply.h:

optimisations/intelligent/piece_usage.h:

optimisations/intelligent/piece_usage.enum.h:

optimisations/intelligent/place_white_piece.h:

optimisations/intelligent/place_black_piece.h:

optimisations/intelligent/count_nr_of_moves.h:

optimisations/intelligent/place_white_king.h:

pieces/walks/pawns/promotee_sequence.h:

debugging/assert.h:
optimisations/intelligent/intercept_black_move$(OBJ_SUFFIX): \
 optimisations/intelligent/intercept_black_move.c \
 optimisations/intelligent/intercept_black_move.h position/board.h \
 utilities/bitmask.h optimisations/intelligent/intelligent.h \
 pieces/pieces.h utilities/boolean.h position/position.h position/side.h \
 position/side.enum.h position/color.h position/color.enum.h \
 pieces/walks/vectors.h position/pieceid.h stipulation/goals/goals.h \
 solving/machinery/solve.h stipulation/stipulation.h \
 stipulation/slice_type.h stipulation/slice_type.enum.h output/mode.h \
 output/mode.enum.h solving/machinery/dispatch.h debugging/trace.h \
 solving/ply.h optimisations/intelligent/piece_usage.h \
 optimisations/intelligent/piece_usage.enum.h \
 optimisations/intelligent/place_white_piece.h \
 optimisations/intelligent/place_black_piece.h \
 optimisations/intelligent/count_nr_of_moves.h \
 optimisations/orthodox_check_directions.h debugging/assert.h

optimisations/intelligent/intercept_black_move.h:

position/board.h:

utilities/bitmask.h:

optimisations/intelligent/intelligent.h:

pieces/pieces.h:

utilities/boolean.h:

position/position.h:

position/side.h:

position/side.enum.h:

position/color.h:

position/color.enum.h:

pieces/walks/vectors.h:

position/pieceid.h:

stipulation/goals/goals.h:

solving/machinery/solve.h:

stipulation/stipulation.h:

stipulation/slice_type.h:

stipulation/slice_type.enum.h:

output/mode.h:

output/mode.enum.h:

solving/machinery/dispatch.h:

debugging/trace.h:

solving/ply.h:

optimisations/intelligent/piece_usage.h:

optimisations/intelligent/piece_usage.enum.h:

optimisations/intelligent/place_white_piece.h:

optimisations/intelligent/place_black_piece.h:

optimisations/intelligent/count_nr_of_moves.h:

optimisations/orthodox_check_directions.h:

debugging/assert.h:
optimisations/intelligent/pin_black_piece$(OBJ_SUFFIX): \
 optimisations/intelligent/pin_black_piece.c \
 optimisations/intelligent/pin_black_piece.h \
 optimisations/intelligent/stalemate/immobilise_black.h \
 stipulation/stipulation.h stipulation/goals/goals.h position/board.h \
 utilities/bitmask.h utilities/boolean.h stipulation/slice_type.h \
 stipulation/slice_type.enum.h position/side.h position/side.enum.h \
 pieces/pieces.h output/mode.h output/mode.enum.h \
 optimisations/intelligent/intelligent.h position/position.h \
 position/color.h position/color.enum.h pieces/walks/vectors.h \
 position/pieceid.h solving/machinery/solve.h \
 solving/machinery/dispatch.h debugging/trace.h solving/ply.h \
 optimisations/intelligent/piece_usage.h \
 optimisations/intelligent/piece_usage.enum.h \
 optimisations/intelligent/count_nr_of_moves.h \
 optimisations/orthodox_check_directions.h debugging/assert.h

optimisations/intelligent/pin_black_piece.h:

optimisations/intelligent/stalemate/immobilise_black.h:

stipulation/stipulation.h:

stipulation/goals/goals.h:

position/board.h:

utilities/bitmask.h:

utilities/boolean.h:

stipulation/slice_type.h:

stipulation/slice_type.enum.h:

position/side.h:

position/side.enum.h:

pieces/pieces.h:

output/mode.h:

output/mode.enum.h:

optimisations/intelligent/intelligent.h:

position/position.h:

position/color.h:

position/color.enum.h:

pieces/walks/vectors.h:

position/pieceid.h:

solving/machinery/solve.h:

solving/machinery/dispatch.h:

debugging/trace.h:

solving/ply.h:

optimisations/intelligent/piece_usage.h:

optimisations/intelligent/piece_usage.enum.h:

optimisations/intelligent/count_nr_of_moves.h:

optimisations/orthodox_check_directions.h:

debugging/assert.h:
optimisations/intelligent/count_nr_of_moves$(OBJ_SUFFIX): \
 optimisations/intelligent/count_nr_of_moves.c \
 optimisations/intelligent/count_nr_of_moves.h pieces/pieces.h \
 utilities/boolean.h position/board.h utilities/bitmask.h position/side.h \
 position/side.enum.h optimisations/intelligent/intelligent.h \
 position/position.h position/color.h position/color.enum.h \
 pieces/walks/vectors.h position/pieceid.h stipulation/goals/goals.h \
 solving/machinery/solve.h stipulation/stipulation.h \
 stipulation/slice_type.h stipulation/slice_type.enum.h output/mode.h \
 output/mode.enum.h solving/machinery/dispatch.h debugging/trace.h \
 solving/ply.h optimisations/intelligent/piece_usage.h \
 optimisations/intelligent/piece_usage.enum.h solving/proofgames.h \
 pieces/walks/pawns/en_passant.h solving/move_effect_journal.h \
 solving/castling_rights.h solving/observation.h \
 solving/temporary_hacks.h pieces/walks/pawns/promotee_sequence.h \
 solving/castling.h position/move_diff_code.h \
 optimisations/intelligent/moves_left.h \
 optimisations/orthodox_check_directions.h debugging/assert.h

optimisations/intelligent/count_nr_of_moves.h:

pieces/pieces.h:

utilities/boolean.h:

position/board.h:

utilities/bitmask.h:

position/side.h:

position/side.enum.h:

optimisations/intelligent/intelligent.h:

position/position.h:

position/color.h:

position/color.enum.h:

pieces/walks/vectors.h:

position/pieceid.h:

stipulation/goals/goals.h:

solving/machinery/solve.h:

stipulation/stipulation.h:

stipulation/slice_type.h:

stipulation/slice_type.enum.h:

output/mode.h:

output/mode.enum.h:

solving/machinery/dispatch.h:

debugging/trace.h:

solving/ply.h:

optimisations/intelligent/piece_usage.h:

optimisations/intelligent/piece_usage.enum.h:

solving/proofgames.h:

pieces/walks/pawns/en_passant.h:

solving/move_effect_journal.h:

solving/castling_rights.h:

solving/observation.h:

solving/temporary_hacks.h:

pieces/walks/pawns/promotee_sequence.h:

solving/castling.h:

position/move_diff_code.h:

optimisations/intelligent/moves_left.h:

optimisations/orthodox_check_directions.h:

debugging/assert.h:
optimisations/intelligent/piece_usage$(OBJ_SUFFIX): \
 optimisations/intelligent/piece_usage.c \
 optimisations/intelligent/piece_usage.h \
 optimisations/intelligent/piece_usage.enum.h \
 optimisations/intelligent/piece_usage.enum utilities/enumeration.h

optimisations/intelligent/piece_usage.h:

optimisations/intelligent/piece_usage.enum.h:

optimisations/intelligent/piece_usage.enum:

utilities/enumeration.h:
