# -*- Makefile -*-
#
# This is the Makefile for py4.x, tested mainly under Linux with GNU
# make.
# It is expected to work pretty portably on Unix-ish platforms with
# GNU make.

# Revision info:
# CVS: $Id: makefile.unx,v 1.97 2010/01/04 06:01:48 thomasmaeder Exp $

# +++++ Warning +++++++

# This Makefile you are reading now, will not do it with:
# Microsoft C  on DOS
# Turbo C  on DOS
# TopSpeed C  on DOS
# Turbo C  on ATARI
# MPW  on Macintosh

# They are all great, but the options of the commands are totally
# different to UNIX ones.
# GRRRHHH !!!

# ++++ End Warning ++++


include makefile.defaults

# we could use $(abspath .), but abspath has only been available since
# GNU make 3.81
HERE = $(shell pwd)

MAKEFILES = \
	$(HERE)/makefile.defaults \
	$(HERE)/toolchains/$(TOOLCHAIN)/make.incl \
	$(HERE)/makefile.options \
#

# ===========================================================
# default target: build executable

default: all


# stem of distributed files
DISTFILESTEM = popeye-$(VERSION)

# name of tar file containing sources to be distributed
SOURCESTARFILE = $(DISTFILESTEM)-sources.tar

# name of directory used for creating archives (gz, zip, ...) 
# containing source files
SOURCEDISTDIR = $(VERSION)

# ===========================================================
# gzip archive of sources

GZIPDISTFILE = $(SOURCESTARFILE).gz
UUGZIPDISTFILE = $(GZIPDISTFILE).uu

gzipdist: $(GZIPDISTFILE) $(UUGZIPDISTFILE)

$(GZIPDISTFILE): ./sourcedist
	tar cfv $(SOURCESTARFILE) $(SOURCEDISTDIR)
	gzip $(SOURCESTARFILE)
	rm -rf $(SOURCEDISTDIR)

$(UUGZIPDISTFILE): $(GZIPDISTFILE)
		uuencode $^ $^ > $@


# ===========================================================
# zip archive of sources

SOURCESZIPFILE = $(DISTFILESTEM)-sources.zip

zipdist:	$(SOURCESZIPFILE)

$(SOURCESZIPFILE): ./sourcedist
	zip -r $(SOURCESZIPFILE) $(SOURCEDISTDIR)
	rm -rf $(SOURCEDISTDIR)


# ===========================================================
# .Z (compress) archive of sources

COMPRESSDISTFILE = $(SOURCESTARFILE).Z

compressdist: $(COMPRESSDISTFILE)

$(COMPRESSDISTFILE): ./sourcedist
	tar cfv $(SOURCESTARFILE) $(SOURCEDISTDIR)
	$(COMPRESS) $(SOURCESTARFILE)
	rm -rf $(SOURCEDISTDIR)

# ===========================================================
# Target for creating a tar archive containing all sources

# System V
DEVFLOPPY=/dev/rfd0

# Linux
#DEVFLOPPY=/dev/fd0

tardist:	/tmp/$(DISTFILESTEM).tar

/tmp/$(DISTFILESTEM).tar: ./sourcedist
	tar cfv $(DEVFLOPPY) $(SOURCEDISTDIR)
	rm -rf $(SOURCEDISTDIR)


# ===========================================================
# Target for creating a sequence of shell archive (shar) files
# containing the complete sources; each generated file
# fits on a floppy disk

shardist:	/tmp/$(DISTFILESTEM).shar

/tmp/$(DISTFILESTEM).shar: ./sourcedist
	find $(SOURCEDISTDIR) -type f -print | shar -S -l40 -o$@
	rm -rf $(SOURCEDISTDIR)


# ===========================================================
# Target for creating various archive files containing the example
# input files

BEISPIELTARFILE = $(DISTFILESTEM)-beispiel.tar
BEISPIELGZIPFILE = $(BEISPIELTARFILE).gz
BEISPIELCOMPRESSFILE = $(BEISPIELTARFILE).Z
BEISPIELZIPFILE = $(DISTFILESTEM)-beispiel.zip

EXAMPLESTARFILE = $(DISTFILESTEM)-examples.tar
EXAMPLESGZIPFILE = $(EXAMPLESTARFILE).gz
EXAMPLESCOMPRESSFILE = $(EXAMPLESTARFILE).Z
EXAMPLESZIPFILE = $(DISTFILESTEM)-examples.zip

$(BEISPIELTARFILE): BEISPIEL/*.inp
		tar cf $@ $^

$(BEISPIELGZIPFILE): $(BEISPIELTARFILE)
		gzip < $^ > $@

$(BEISPIELCOMPRESSFILE): $(BEISPIELTARFILE)
		$(COMPRESS) $^

$(BEISPIELZIPFILE): BEISPIEL/*.inp
		zip -r $@ $^


$(EXAMPLESTARFILE): EXAMPLES/*.inp
		tar cf $@ $^

$(EXAMPLESGZIPFILE): $(EXAMPLESTARFILE)
		gzip < $^ > $@

$(EXAMPLESCOMPRESSFILE): $(EXAMPLESTARFILE)
		$(COMPRESS) $^

$(EXAMPLESZIPFILE): EXAMPLES/*.inp
		zip -r $@ $^

.INTERMEDIATE: $(BEISPIELTARFILE) $(EXAMPLESTARFILE)

EXAMPLESdist: $(BEISPIELGZIPFILE) $(BEISPIELCOMPRESSFILE) $(BEISPIELZIPFILE)\
	 $(EXAMPLESGZIPFILE) $(EXAMPLESCOMPRESSFILE) $(EXAMPLESZIPFILE)


# ===========================================================
# Target for creating various archive files containing the LaTeX
# utility files

LATEXTARFILE = $(DISTFILESTEM)-latex.tar
LATEXGZIPFILE = $(LATEXTARFILE).gz
LATEXCOMPRESSFILE = $(LATEXTARFILE).Z
LATEXZIPFILE = $(DISTFILESTEM)-latex.zip

$(LATEXTARFILE): $(TEXFILES)
		tar cf $@ $^

$(LATEXGZIPFILE): $(LATEXTARFILE)
		gzip < $^ > $@

$(LATEXCOMPRESSFILE): $(LATEXTARFILE)
		$(COMPRESS) $^

$(LATEXZIPFILE): $(TEXFILES)
		zip -r $@ $^

.INTERMEDIATE: $(LATEXTARFILE)

LATEXdist: $(LATEXGZIPFILE) $(LATEXCOMPRESSFILE) $(LATEXZIPFILE)


# ===========================================================
# targets built using recursive makes

all depend ./sourcedist clean clobber: FORCE
	$(MAKE) BASEPWD=$(HERE)/ CURRPWD=./ -C . -f makefile.local $@

FORCE:
