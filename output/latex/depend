output/latex/latex$(OBJ_SUFFIX): output/latex/latex.c output/latex/latex.h \
 position/position.h position/board.h utilities/bitmask.h position/side.h \
 position/side.enum.h position/color.h position/color.enum.h \
 pieces/pieces.h utilities/boolean.h pieces/walks/vectors.h \
 position/castling_rights.h input/plaintext/twin.h \
 stipulation/stipulation.h stipulation/goals/goals.h \
 stipulation/slice_type.h stipulation/slice_type.enum.h output/mode.h \
 output/mode.enum.h input/plaintext/token.h input/plaintext/language.h \
 output/output.h output/plaintext/plaintext.h output/latex/diagram.h \
 output/latex/twinning.h output/latex/line/line.h \
 output/latex/tree/tree.h output/plaintext/language_dependant.h \
 conditions/conditions.h options/options.h conditions/mummer.h \
 solving/machinery/solve.h solving/machinery/dispatch.h debugging/trace.h \
 conditions/anticirce/anticirce.h conditions/circe/circe.h \
 stipulation/structure_traversal.h stipulation/slice.h \
 stipulation/slice_structural_type.h \
 stipulation/slice_structural_type.enum.h \
 stipulation/slice_functional_type.h \
 stipulation/slice_functional_type.enum.h \
 stipulation/slice_contextual_type.h \
 stipulation/slice_contextual_type.enum.h stipulation/traversal.h \
 stipulation/slice_insertion.h solving/move_effect_journal.h \
 solving/ply.h position/pieceid.h solving/machinery/twin.h \
 conditions/circe/rebirth_square_occupied.h \
 conditions/circe/reborn_piece.h conditions/circe/rebirth_square.h \
 conditions/circe/relevant_capture.h conditions/circe/relevant_piece.h \
 conditions/circe/relevant_side.h conditions/sentinelles.h \
 output/plaintext/message.h output/message.h output/plaintext/pieces.h \
 output/plaintext/condition.h input/plaintext/problem.h \
 input/plaintext/pieces.h input/plaintext/stipulation.h \
 options/maxsolutions/maxsolutions.h \
 options/stoponshortsolutions/stoponshortsolutions.h \
 optimisations/intelligent/limit_nr_solutions_per_target.h \
 pieces/walks/classification.h pieces/attributes/neutral/neutral.h \
 stipulation/pipe.h solving/pipe.h conditions/bgl.h conditions/grid.h \
 conditions/singlebox/type1.h platform/maxtime.h debugging/assert.h

output/latex/latex.h:

position/position.h:

position/board.h:

utilities/bitmask.h:

position/side.h:

position/side.enum.h:

position/color.h:

position/color.enum.h:

pieces/pieces.h:

utilities/boolean.h:

pieces/walks/vectors.h:

position/castling_rights.h:

input/plaintext/twin.h:

stipulation/stipulation.h:

stipulation/goals/goals.h:

stipulation/slice_type.h:

stipulation/slice_type.enum.h:

output/mode.h:

output/mode.enum.h:

input/plaintext/token.h:

input/plaintext/language.h:

output/output.h:

output/plaintext/plaintext.h:

output/latex/diagram.h:

output/latex/twinning.h:

output/latex/line/line.h:

output/latex/tree/tree.h:

output/plaintext/language_dependant.h:

conditions/conditions.h:

options/options.h:

conditions/mummer.h:

solving/machinery/solve.h:

solving/machinery/dispatch.h:

debugging/trace.h:

conditions/anticirce/anticirce.h:

conditions/circe/circe.h:

stipulation/structure_traversal.h:

stipulation/slice.h:

stipulation/slice_structural_type.h:

stipulation/slice_structural_type.enum.h:

stipulation/slice_functional_type.h:

stipulation/slice_functional_type.enum.h:

stipulation/slice_contextual_type.h:

stipulation/slice_contextual_type.enum.h:

stipulation/traversal.h:

stipulation/slice_insertion.h:

solving/move_effect_journal.h:

solving/ply.h:

position/pieceid.h:

solving/machinery/twin.h:

conditions/circe/rebirth_square_occupied.h:

conditions/circe/reborn_piece.h:

conditions/circe/rebirth_square.h:

conditions/circe/relevant_capture.h:

conditions/circe/relevant_piece.h:

conditions/circe/relevant_side.h:

conditions/sentinelles.h:

output/plaintext/message.h:

output/message.h:

output/plaintext/pieces.h:

output/plaintext/condition.h:

input/plaintext/problem.h:

input/plaintext/pieces.h:

input/plaintext/stipulation.h:

options/maxsolutions/maxsolutions.h:

options/stoponshortsolutions/stoponshortsolutions.h:

optimisations/intelligent/limit_nr_solutions_per_target.h:

pieces/walks/classification.h:

pieces/attributes/neutral/neutral.h:

stipulation/pipe.h:

solving/pipe.h:

conditions/bgl.h:

conditions/grid.h:

conditions/singlebox/type1.h:

platform/maxtime.h:

debugging/assert.h:
output/latex/diagram$(OBJ_SUFFIX): output/latex/diagram.c output/latex/diagram.h \
 stipulation/stipulation.h stipulation/goals/goals.h position/board.h \
 utilities/bitmask.h utilities/boolean.h stipulation/slice_type.h \
 stipulation/slice_type.enum.h position/side.h position/side.enum.h \
 pieces/pieces.h output/mode.h output/mode.enum.h output/latex/latex.h \
 position/position.h position/color.h position/color.enum.h \
 pieces/walks/vectors.h position/castling_rights.h input/plaintext/twin.h \
 input/plaintext/token.h input/plaintext/language.h output/output.h \
 output/plaintext/plaintext.h output/latex/twinning.h stipulation/pipe.h \
 stipulation/structure_traversal.h stipulation/slice.h \
 stipulation/slice_structural_type.h \
 stipulation/slice_structural_type.enum.h \
 stipulation/slice_functional_type.h \
 stipulation/slice_functional_type.enum.h \
 stipulation/slice_contextual_type.h \
 stipulation/slice_contextual_type.enum.h stipulation/traversal.h \
 solving/pipe.h solving/machinery/solve.h solving/machinery/dispatch.h \
 debugging/trace.h solving/duplex.h solving/machinery/twin.h \
 solving/move_effect_journal.h solving/ply.h position/pieceid.h \
 debugging/assert.h

output/latex/diagram.h:

stipulation/stipulation.h:

stipulation/goals/goals.h:

position/board.h:

utilities/bitmask.h:

utilities/boolean.h:

stipulation/slice_type.h:

stipulation/slice_type.enum.h:

position/side.h:

position/side.enum.h:

pieces/pieces.h:

output/mode.h:

output/mode.enum.h:

output/latex/latex.h:

position/position.h:

position/color.h:

position/color.enum.h:

pieces/walks/vectors.h:

position/castling_rights.h:

input/plaintext/twin.h:

input/plaintext/token.h:

input/plaintext/language.h:

output/output.h:

output/plaintext/plaintext.h:

output/latex/twinning.h:

stipulation/pipe.h:

stipulation/structure_traversal.h:

stipulation/slice.h:

stipulation/slice_structural_type.h:

stipulation/slice_structural_type.enum.h:

stipulation/slice_functional_type.h:

stipulation/slice_functional_type.enum.h:

stipulation/slice_contextual_type.h:

stipulation/slice_contextual_type.enum.h:

stipulation/traversal.h:

solving/pipe.h:

solving/machinery/solve.h:

solving/machinery/dispatch.h:

debugging/trace.h:

solving/duplex.h:

solving/machinery/twin.h:

solving/move_effect_journal.h:

solving/ply.h:

position/pieceid.h:

debugging/assert.h:
output/latex/twinning$(OBJ_SUFFIX): output/latex/twinning.c output/latex/twinning.h \
 stipulation/stipulation.h stipulation/goals/goals.h position/board.h \
 utilities/bitmask.h utilities/boolean.h stipulation/slice_type.h \
 stipulation/slice_type.enum.h position/side.h position/side.enum.h \
 pieces/pieces.h output/mode.h output/mode.enum.h output/latex/latex.h \
 position/position.h position/color.h position/color.enum.h \
 pieces/walks/vectors.h position/castling_rights.h input/plaintext/twin.h \
 input/plaintext/token.h input/plaintext/language.h output/output.h \
 output/plaintext/plaintext.h output/plaintext/language_dependant.h \
 conditions/conditions.h options/options.h conditions/mummer.h \
 solving/machinery/solve.h solving/machinery/dispatch.h debugging/trace.h \
 conditions/anticirce/anticirce.h conditions/circe/circe.h \
 stipulation/structure_traversal.h stipulation/slice.h \
 stipulation/slice_structural_type.h \
 stipulation/slice_structural_type.enum.h \
 stipulation/slice_functional_type.h \
 stipulation/slice_functional_type.enum.h \
 stipulation/slice_contextual_type.h \
 stipulation/slice_contextual_type.enum.h stipulation/traversal.h \
 stipulation/slice_insertion.h solving/move_effect_journal.h \
 solving/ply.h position/pieceid.h solving/machinery/twin.h \
 conditions/circe/rebirth_square_occupied.h \
 conditions/circe/reborn_piece.h conditions/circe/rebirth_square.h \
 conditions/circe/relevant_capture.h conditions/circe/relevant_piece.h \
 conditions/circe/relevant_side.h conditions/sentinelles.h \
 output/plaintext/message.h output/message.h output/plaintext/pieces.h \
 output/plaintext/condition.h input/plaintext/stipulation.h \
 pieces/attributes/neutral/neutral.h stipulation/pipe.h solving/pipe.h \
 solving/duplex.h debugging/assert.h

output/latex/twinning.h:

stipulation/stipulation.h:

stipulation/goals/goals.h:

position/board.h:

utilities/bitmask.h:

utilities/boolean.h:

stipulation/slice_type.h:

stipulation/slice_type.enum.h:

position/side.h:

position/side.enum.h:

pieces/pieces.h:

output/mode.h:

output/mode.enum.h:

output/latex/latex.h:

position/position.h:

position/color.h:

position/color.enum.h:

pieces/walks/vectors.h:

position/castling_rights.h:

input/plaintext/twin.h:

input/plaintext/token.h:

input/plaintext/language.h:

output/output.h:

output/plaintext/plaintext.h:

output/plaintext/language_dependant.h:

conditions/conditions.h:

options/options.h:

conditions/mummer.h:

solving/machinery/solve.h:

solving/machinery/dispatch.h:

debugging/trace.h:

conditions/anticirce/anticirce.h:

conditions/circe/circe.h:

stipulation/structure_traversal.h:

stipulation/slice.h:

stipulation/slice_structural_type.h:

stipulation/slice_structural_type.enum.h:

stipulation/slice_functional_type.h:

stipulation/slice_functional_type.enum.h:

stipulation/slice_contextual_type.h:

stipulation/slice_contextual_type.enum.h:

stipulation/traversal.h:

stipulation/slice_insertion.h:

solving/move_effect_journal.h:

solving/ply.h:

position/pieceid.h:

solving/machinery/twin.h:

conditions/circe/rebirth_square_occupied.h:

conditions/circe/reborn_piece.h:

conditions/circe/rebirth_square.h:

conditions/circe/relevant_capture.h:

conditions/circe/relevant_piece.h:

conditions/circe/relevant_side.h:

conditions/sentinelles.h:

output/plaintext/message.h:

output/message.h:

output/plaintext/pieces.h:

output/plaintext/condition.h:

input/plaintext/stipulation.h:

pieces/attributes/neutral/neutral.h:

stipulation/pipe.h:

solving/pipe.h:

solving/duplex.h:

debugging/assert.h:
output/latex/goal_writer$(OBJ_SUFFIX): output/latex/goal_writer.c \
 output/latex/goal_writer.h stipulation/goals/goals.h position/board.h \
 utilities/bitmask.h utilities/boolean.h solving/machinery/solve.h \
 stipulation/stipulation.h stipulation/slice_type.h \
 stipulation/slice_type.enum.h position/side.h position/side.enum.h \
 pieces/pieces.h output/mode.h output/mode.enum.h \
 solving/machinery/dispatch.h debugging/trace.h stipulation/pipe.h \
 stipulation/structure_traversal.h stipulation/slice.h \
 stipulation/slice_structural_type.h \
 stipulation/slice_structural_type.enum.h \
 stipulation/slice_functional_type.h \
 stipulation/slice_functional_type.enum.h \
 stipulation/slice_contextual_type.h \
 stipulation/slice_contextual_type.enum.h stipulation/traversal.h \
 output/plaintext/tree/tree.h solving/pipe.h debugging/assert.h

output/latex/goal_writer.h:

stipulation/goals/goals.h:

position/board.h:

utilities/bitmask.h:

utilities/boolean.h:

solving/machinery/solve.h:

stipulation/stipulation.h:

stipulation/slice_type.h:

stipulation/slice_type.enum.h:

position/side.h:

position/side.enum.h:

pieces/pieces.h:

output/mode.h:

output/mode.enum.h:

solving/machinery/dispatch.h:

debugging/trace.h:

stipulation/pipe.h:

stipulation/structure_traversal.h:

stipulation/slice.h:

stipulation/slice_structural_type.h:

stipulation/slice_structural_type.enum.h:

stipulation/slice_functional_type.h:

stipulation/slice_functional_type.enum.h:

stipulation/slice_contextual_type.h:

stipulation/slice_contextual_type.enum.h:

stipulation/traversal.h:

output/plaintext/tree/tree.h:

solving/pipe.h:

debugging/assert.h:
output/latex/message$(OBJ_SUFFIX): output/latex/message.c output/latex/message.h \
 output/message.h input/plaintext/language.h

output/latex/message.h:

output/message.h:

input/plaintext/language.h:
