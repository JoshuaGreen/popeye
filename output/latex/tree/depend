output/latex/tree/tree$(OBJ_SUFFIX): output/latex/tree/tree.c \
 output/latex/tree/tree.h stipulation/stipulation.h \
 stipulation/goals/goals.h position/board.h utilities/bitmask.h \
 utilities/boolean.h stipulation/slice_type.h \
 stipulation/slice_type.enum.h position/side.h position/side.enum.h \
 pieces/pieces.h output/mode.h output/mode.enum.h stipulation/pipe.h \
 stipulation/structure_traversal.h stipulation/slice.h \
 stipulation/slice_structural_type.h \
 stipulation/slice_structural_type.enum.h \
 stipulation/slice_functional_type.h \
 stipulation/slice_functional_type.enum.h stipulation/traversal.h \
 stipulation/fork.h stipulation/slice_insertion.h stipulation/move.h \
 stipulation/battle_play/branch.h stipulation/help_play/branch.h \
 solving/machinery/solve.h solving/machinery/dispatch.h debugging/trace.h \
 solving/trivial_end_filter.h output/latex/latex.h position/position.h \
 position/color.h position/color.enum.h pieces/walks/vectors.h \
 input/plaintext/twin.h input/plaintext/token.h \
 input/plaintext/language.h output/plaintext/plaintext.h \
 solving/move_effect_journal.h solving/castling_rights.h solving/ply.h \
 position/pieceid.h output/latex/goal_writer.h \
 output/latex/tree/end_of_solution_writer.h \
 output/latex/tree/check_writer.h output/latex/tree/threat_writer.h \
 output/latex/tree/move_writer.h output/latex/tree/zugzwang_writer.h \
 output/latex/tree/key_writer.h output/latex/tree/try_writer.h \
 output/latex/tree/refuting_variation_writer.h \
 output/latex/tree/refutation_writer.h options/options.h \
 conditions/conditions.h debugging/assert.h

output/latex/tree/tree.h:

stipulation/stipulation.h:

stipulation/goals/goals.h:

position/board.h:

utilities/bitmask.h:

utilities/boolean.h:

stipulation/slice_type.h:

stipulation/slice_type.enum.h:

position/side.h:

position/side.enum.h:

pieces/pieces.h:

output/mode.h:

output/mode.enum.h:

stipulation/pipe.h:

stipulation/structure_traversal.h:

stipulation/slice.h:

stipulation/slice_structural_type.h:

stipulation/slice_structural_type.enum.h:

stipulation/slice_functional_type.h:

stipulation/slice_functional_type.enum.h:

stipulation/traversal.h:

stipulation/fork.h:

stipulation/slice_insertion.h:

stipulation/move.h:

stipulation/battle_play/branch.h:

stipulation/help_play/branch.h:

solving/machinery/solve.h:

solving/machinery/dispatch.h:

debugging/trace.h:

solving/trivial_end_filter.h:

output/latex/latex.h:

position/position.h:

position/color.h:

position/color.enum.h:

pieces/walks/vectors.h:

input/plaintext/twin.h:

input/plaintext/token.h:

input/plaintext/language.h:

output/plaintext/plaintext.h:

solving/move_effect_journal.h:

solving/castling_rights.h:

solving/ply.h:

position/pieceid.h:

output/latex/goal_writer.h:

output/latex/tree/end_of_solution_writer.h:

output/latex/tree/check_writer.h:

output/latex/tree/threat_writer.h:

output/latex/tree/move_writer.h:

output/latex/tree/zugzwang_writer.h:

output/latex/tree/key_writer.h:

output/latex/tree/try_writer.h:

output/latex/tree/refuting_variation_writer.h:

output/latex/tree/refutation_writer.h:

options/options.h:

conditions/conditions.h:

debugging/assert.h:
output/latex/tree/end_of_solution_writer$(OBJ_SUFFIX): \
 output/latex/tree/end_of_solution_writer.c \
 output/latex/tree/end_of_solution_writer.h solving/machinery/solve.h \
 stipulation/stipulation.h stipulation/goals/goals.h position/board.h \
 utilities/bitmask.h utilities/boolean.h stipulation/slice_type.h \
 stipulation/slice_type.enum.h position/side.h position/side.enum.h \
 pieces/pieces.h output/mode.h output/mode.enum.h \
 solving/machinery/dispatch.h debugging/trace.h stipulation/pipe.h \
 stipulation/structure_traversal.h stipulation/slice.h \
 stipulation/slice_structural_type.h \
 stipulation/slice_structural_type.enum.h \
 stipulation/slice_functional_type.h \
 stipulation/slice_functional_type.enum.h stipulation/traversal.h \
 solving/has_solution_type.h solving/has_solution_type.enum.h \
 output/latex/latex.h position/position.h position/color.h \
 position/color.enum.h pieces/walks/vectors.h input/plaintext/twin.h \
 input/plaintext/token.h input/plaintext/language.h \
 output/plaintext/plaintext.h solving/move_effect_journal.h \
 solving/castling_rights.h solving/ply.h position/pieceid.h \
 solving/pipe.h

output/latex/tree/end_of_solution_writer.h:

solving/machinery/solve.h:

stipulation/stipulation.h:

stipulation/goals/goals.h:

position/board.h:

utilities/bitmask.h:

utilities/boolean.h:

stipulation/slice_type.h:

stipulation/slice_type.enum.h:

position/side.h:

position/side.enum.h:

pieces/pieces.h:

output/mode.h:

output/mode.enum.h:

solving/machinery/dispatch.h:

debugging/trace.h:

stipulation/pipe.h:

stipulation/structure_traversal.h:

stipulation/slice.h:

stipulation/slice_structural_type.h:

stipulation/slice_structural_type.enum.h:

stipulation/slice_functional_type.h:

stipulation/slice_functional_type.enum.h:

stipulation/traversal.h:

solving/has_solution_type.h:

solving/has_solution_type.enum.h:

output/latex/latex.h:

position/position.h:

position/color.h:

position/color.enum.h:

pieces/walks/vectors.h:

input/plaintext/twin.h:

input/plaintext/token.h:

input/plaintext/language.h:

output/plaintext/plaintext.h:

solving/move_effect_journal.h:

solving/castling_rights.h:

solving/ply.h:

position/pieceid.h:

solving/pipe.h:
output/latex/tree/check_writer$(OBJ_SUFFIX): output/latex/tree/check_writer.c \
 output/latex/tree/check_writer.h solving/machinery/solve.h \
 stipulation/stipulation.h stipulation/goals/goals.h position/board.h \
 utilities/bitmask.h utilities/boolean.h stipulation/slice_type.h \
 stipulation/slice_type.enum.h position/side.h position/side.enum.h \
 pieces/pieces.h output/mode.h output/mode.enum.h \
 solving/machinery/dispatch.h debugging/trace.h solving/check.h \
 stipulation/pipe.h stipulation/structure_traversal.h stipulation/slice.h \
 stipulation/slice_structural_type.h \
 stipulation/slice_structural_type.enum.h \
 stipulation/slice_functional_type.h \
 stipulation/slice_functional_type.enum.h stipulation/traversal.h \
 output/latex/latex.h position/position.h position/color.h \
 position/color.enum.h pieces/walks/vectors.h input/plaintext/twin.h \
 input/plaintext/token.h input/plaintext/language.h \
 output/plaintext/plaintext.h solving/move_effect_journal.h \
 solving/castling_rights.h solving/ply.h position/pieceid.h \
 solving/pipe.h

output/latex/tree/check_writer.h:

solving/machinery/solve.h:

stipulation/stipulation.h:

stipulation/goals/goals.h:

position/board.h:

utilities/bitmask.h:

utilities/boolean.h:

stipulation/slice_type.h:

stipulation/slice_type.enum.h:

position/side.h:

position/side.enum.h:

pieces/pieces.h:

output/mode.h:

output/mode.enum.h:

solving/machinery/dispatch.h:

debugging/trace.h:

solving/check.h:

stipulation/pipe.h:

stipulation/structure_traversal.h:

stipulation/slice.h:

stipulation/slice_structural_type.h:

stipulation/slice_structural_type.enum.h:

stipulation/slice_functional_type.h:

stipulation/slice_functional_type.enum.h:

stipulation/traversal.h:

output/latex/latex.h:

position/position.h:

position/color.h:

position/color.enum.h:

pieces/walks/vectors.h:

input/plaintext/twin.h:

input/plaintext/token.h:

input/plaintext/language.h:

output/plaintext/plaintext.h:

solving/move_effect_journal.h:

solving/castling_rights.h:

solving/ply.h:

position/pieceid.h:

solving/pipe.h:
output/latex/tree/threat_writer$(OBJ_SUFFIX): output/latex/tree/threat_writer.c \
 output/latex/tree/threat_writer.h solving/machinery/solve.h \
 stipulation/stipulation.h stipulation/goals/goals.h position/board.h \
 utilities/bitmask.h utilities/boolean.h stipulation/slice_type.h \
 stipulation/slice_type.enum.h position/side.h position/side.enum.h \
 pieces/pieces.h output/mode.h output/mode.enum.h \
 solving/machinery/dispatch.h debugging/trace.h output/latex/latex.h \
 position/position.h position/color.h position/color.enum.h \
 pieces/walks/vectors.h input/plaintext/twin.h input/plaintext/token.h \
 input/plaintext/language.h output/plaintext/plaintext.h \
 solving/move_effect_journal.h solving/castling_rights.h solving/ply.h \
 position/pieceid.h output/plaintext/message.h stipulation/pipe.h \
 stipulation/structure_traversal.h stipulation/slice.h \
 stipulation/slice_structural_type.h \
 stipulation/slice_structural_type.enum.h \
 stipulation/slice_functional_type.h \
 stipulation/slice_functional_type.enum.h stipulation/traversal.h \
 solving/battle_play/threat.h utilities/table.h solving/pipe.h

output/latex/tree/threat_writer.h:

solving/machinery/solve.h:

stipulation/stipulation.h:

stipulation/goals/goals.h:

position/board.h:

utilities/bitmask.h:

utilities/boolean.h:

stipulation/slice_type.h:

stipulation/slice_type.enum.h:

position/side.h:

position/side.enum.h:

pieces/pieces.h:

output/mode.h:

output/mode.enum.h:

solving/machinery/dispatch.h:

debugging/trace.h:

output/latex/latex.h:

position/position.h:

position/color.h:

position/color.enum.h:

pieces/walks/vectors.h:

input/plaintext/twin.h:

input/plaintext/token.h:

input/plaintext/language.h:

output/plaintext/plaintext.h:

solving/move_effect_journal.h:

solving/castling_rights.h:

solving/ply.h:

position/pieceid.h:

output/plaintext/message.h:

stipulation/pipe.h:

stipulation/structure_traversal.h:

stipulation/slice.h:

stipulation/slice_structural_type.h:

stipulation/slice_structural_type.enum.h:

stipulation/slice_functional_type.h:

stipulation/slice_functional_type.enum.h:

stipulation/traversal.h:

solving/battle_play/threat.h:

utilities/table.h:

solving/pipe.h:
output/latex/tree/move_writer$(OBJ_SUFFIX): output/latex/tree/move_writer.c \
 output/latex/tree/move_writer.h solving/machinery/solve.h \
 stipulation/stipulation.h stipulation/goals/goals.h position/board.h \
 utilities/bitmask.h utilities/boolean.h stipulation/slice_type.h \
 stipulation/slice_type.enum.h position/side.h position/side.enum.h \
 pieces/pieces.h output/mode.h output/mode.enum.h \
 solving/machinery/dispatch.h debugging/trace.h output/latex/latex.h \
 position/position.h position/color.h position/color.enum.h \
 pieces/walks/vectors.h input/plaintext/twin.h input/plaintext/token.h \
 input/plaintext/language.h output/plaintext/plaintext.h \
 solving/move_effect_journal.h solving/castling_rights.h solving/ply.h \
 position/pieceid.h stipulation/pipe.h stipulation/structure_traversal.h \
 stipulation/slice.h stipulation/slice_structural_type.h \
 stipulation/slice_structural_type.enum.h \
 stipulation/slice_functional_type.h \
 stipulation/slice_functional_type.enum.h stipulation/traversal.h \
 output/plaintext/tree/tree.h output/plaintext/move_inversion_counter.h \
 solving/pipe.h

output/latex/tree/move_writer.h:

solving/machinery/solve.h:

stipulation/stipulation.h:

stipulation/goals/goals.h:

position/board.h:

utilities/bitmask.h:

utilities/boolean.h:

stipulation/slice_type.h:

stipulation/slice_type.enum.h:

position/side.h:

position/side.enum.h:

pieces/pieces.h:

output/mode.h:

output/mode.enum.h:

solving/machinery/dispatch.h:

debugging/trace.h:

output/latex/latex.h:

position/position.h:

position/color.h:

position/color.enum.h:

pieces/walks/vectors.h:

input/plaintext/twin.h:

input/plaintext/token.h:

input/plaintext/language.h:

output/plaintext/plaintext.h:

solving/move_effect_journal.h:

solving/castling_rights.h:

solving/ply.h:

position/pieceid.h:

stipulation/pipe.h:

stipulation/structure_traversal.h:

stipulation/slice.h:

stipulation/slice_structural_type.h:

stipulation/slice_structural_type.enum.h:

stipulation/slice_functional_type.h:

stipulation/slice_functional_type.enum.h:

stipulation/traversal.h:

output/plaintext/tree/tree.h:

output/plaintext/move_inversion_counter.h:

solving/pipe.h:
output/latex/tree/zugzwang_writer$(OBJ_SUFFIX): output/latex/tree/zugzwang_writer.c \
 output/latex/tree/zugzwang_writer.h solving/machinery/solve.h \
 stipulation/stipulation.h stipulation/goals/goals.h position/board.h \
 utilities/bitmask.h utilities/boolean.h stipulation/slice_type.h \
 stipulation/slice_type.enum.h position/side.h position/side.enum.h \
 pieces/pieces.h output/mode.h output/mode.enum.h \
 solving/machinery/dispatch.h debugging/trace.h \
 output/plaintext/message.h input/plaintext/language.h \
 output/latex/latex.h position/position.h position/color.h \
 position/color.enum.h pieces/walks/vectors.h input/plaintext/twin.h \
 input/plaintext/token.h output/plaintext/plaintext.h \
 solving/move_effect_journal.h solving/castling_rights.h solving/ply.h \
 position/pieceid.h stipulation/pipe.h stipulation/structure_traversal.h \
 stipulation/slice.h stipulation/slice_structural_type.h \
 stipulation/slice_structural_type.enum.h \
 stipulation/slice_functional_type.h \
 stipulation/slice_functional_type.enum.h stipulation/traversal.h \
 solving/has_solution_type.h solving/has_solution_type.enum.h \
 solving/pipe.h

output/latex/tree/zugzwang_writer.h:

solving/machinery/solve.h:

stipulation/stipulation.h:

stipulation/goals/goals.h:

position/board.h:

utilities/bitmask.h:

utilities/boolean.h:

stipulation/slice_type.h:

stipulation/slice_type.enum.h:

position/side.h:

position/side.enum.h:

pieces/pieces.h:

output/mode.h:

output/mode.enum.h:

solving/machinery/dispatch.h:

debugging/trace.h:

output/plaintext/message.h:

input/plaintext/language.h:

output/latex/latex.h:

position/position.h:

position/color.h:

position/color.enum.h:

pieces/walks/vectors.h:

input/plaintext/twin.h:

input/plaintext/token.h:

output/plaintext/plaintext.h:

solving/move_effect_journal.h:

solving/castling_rights.h:

solving/ply.h:

position/pieceid.h:

stipulation/pipe.h:

stipulation/structure_traversal.h:

stipulation/slice.h:

stipulation/slice_structural_type.h:

stipulation/slice_structural_type.enum.h:

stipulation/slice_functional_type.h:

stipulation/slice_functional_type.enum.h:

stipulation/traversal.h:

solving/has_solution_type.h:

solving/has_solution_type.enum.h:

solving/pipe.h:
output/latex/tree/key_writer$(OBJ_SUFFIX): output/latex/tree/key_writer.c \
 output/latex/tree/key_writer.h solving/machinery/solve.h \
 stipulation/stipulation.h stipulation/goals/goals.h position/board.h \
 utilities/bitmask.h utilities/boolean.h stipulation/slice_type.h \
 stipulation/slice_type.enum.h position/side.h position/side.enum.h \
 pieces/pieces.h output/mode.h output/mode.enum.h \
 solving/machinery/dispatch.h debugging/trace.h stipulation/pipe.h \
 stipulation/structure_traversal.h stipulation/slice.h \
 stipulation/slice_structural_type.h \
 stipulation/slice_structural_type.enum.h \
 stipulation/slice_functional_type.h \
 stipulation/slice_functional_type.enum.h stipulation/traversal.h \
 output/latex/latex.h position/position.h position/color.h \
 position/color.enum.h pieces/walks/vectors.h input/plaintext/twin.h \
 input/plaintext/token.h input/plaintext/language.h \
 output/plaintext/plaintext.h solving/move_effect_journal.h \
 solving/castling_rights.h solving/ply.h position/pieceid.h \
 output/plaintext/message.h platform/beep.h solving/pipe.h \
 options/options.h debugging/assert.h

output/latex/tree/key_writer.h:

solving/machinery/solve.h:

stipulation/stipulation.h:

stipulation/goals/goals.h:

position/board.h:

utilities/bitmask.h:

utilities/boolean.h:

stipulation/slice_type.h:

stipulation/slice_type.enum.h:

position/side.h:

position/side.enum.h:

pieces/pieces.h:

output/mode.h:

output/mode.enum.h:

solving/machinery/dispatch.h:

debugging/trace.h:

stipulation/pipe.h:

stipulation/structure_traversal.h:

stipulation/slice.h:

stipulation/slice_structural_type.h:

stipulation/slice_structural_type.enum.h:

stipulation/slice_functional_type.h:

stipulation/slice_functional_type.enum.h:

stipulation/traversal.h:

output/latex/latex.h:

position/position.h:

position/color.h:

position/color.enum.h:

pieces/walks/vectors.h:

input/plaintext/twin.h:

input/plaintext/token.h:

input/plaintext/language.h:

output/plaintext/plaintext.h:

solving/move_effect_journal.h:

solving/castling_rights.h:

solving/ply.h:

position/pieceid.h:

output/plaintext/message.h:

platform/beep.h:

solving/pipe.h:

options/options.h:

debugging/assert.h:
output/latex/tree/try_writer$(OBJ_SUFFIX): output/latex/tree/try_writer.c \
 output/latex/tree/try_writer.h solving/machinery/solve.h \
 stipulation/stipulation.h stipulation/goals/goals.h position/board.h \
 utilities/bitmask.h utilities/boolean.h stipulation/slice_type.h \
 stipulation/slice_type.enum.h position/side.h position/side.enum.h \
 pieces/pieces.h output/mode.h output/mode.enum.h \
 solving/machinery/dispatch.h debugging/trace.h stipulation/pipe.h \
 stipulation/structure_traversal.h stipulation/slice.h \
 stipulation/slice_structural_type.h \
 stipulation/slice_structural_type.enum.h \
 stipulation/slice_functional_type.h \
 stipulation/slice_functional_type.enum.h stipulation/traversal.h \
 solving/battle_play/try.h utilities/table.h solving/trivial_end_filter.h \
 output/latex/latex.h position/position.h position/color.h \
 position/color.enum.h pieces/walks/vectors.h input/plaintext/twin.h \
 input/plaintext/token.h input/plaintext/language.h \
 output/plaintext/plaintext.h solving/move_effect_journal.h \
 solving/castling_rights.h solving/ply.h position/pieceid.h \
 output/latex/tree/key_writer.h solving/pipe.h debugging/assert.h

output/latex/tree/try_writer.h:

solving/machinery/solve.h:

stipulation/stipulation.h:

stipulation/goals/goals.h:

position/board.h:

utilities/bitmask.h:

utilities/boolean.h:

stipulation/slice_type.h:

stipulation/slice_type.enum.h:

position/side.h:

position/side.enum.h:

pieces/pieces.h:

output/mode.h:

output/mode.enum.h:

solving/machinery/dispatch.h:

debugging/trace.h:

stipulation/pipe.h:

stipulation/structure_traversal.h:

stipulation/slice.h:

stipulation/slice_structural_type.h:

stipulation/slice_structural_type.enum.h:

stipulation/slice_functional_type.h:

stipulation/slice_functional_type.enum.h:

stipulation/traversal.h:

solving/battle_play/try.h:

utilities/table.h:

solving/trivial_end_filter.h:

output/latex/latex.h:

position/position.h:

position/color.h:

position/color.enum.h:

pieces/walks/vectors.h:

input/plaintext/twin.h:

input/plaintext/token.h:

input/plaintext/language.h:

output/plaintext/plaintext.h:

solving/move_effect_journal.h:

solving/castling_rights.h:

solving/ply.h:

position/pieceid.h:

output/latex/tree/key_writer.h:

solving/pipe.h:

debugging/assert.h:
output/latex/tree/refuting_variation_writer$(OBJ_SUFFIX): \
 output/latex/tree/refuting_variation_writer.c \
 output/latex/tree/refuting_variation_writer.h solving/machinery/solve.h \
 stipulation/stipulation.h stipulation/goals/goals.h position/board.h \
 utilities/bitmask.h utilities/boolean.h stipulation/slice_type.h \
 stipulation/slice_type.enum.h position/side.h position/side.enum.h \
 pieces/pieces.h output/mode.h output/mode.enum.h \
 solving/machinery/dispatch.h debugging/trace.h stipulation/pipe.h \
 stipulation/structure_traversal.h stipulation/slice.h \
 stipulation/slice_structural_type.h \
 stipulation/slice_structural_type.enum.h \
 stipulation/slice_functional_type.h \
 stipulation/slice_functional_type.enum.h stipulation/traversal.h \
 stipulation/branch.h solving/ply.h output/latex/latex.h \
 position/position.h position/color.h position/color.enum.h \
 pieces/walks/vectors.h input/plaintext/twin.h input/plaintext/token.h \
 input/plaintext/language.h output/plaintext/plaintext.h \
 solving/move_effect_journal.h solving/castling_rights.h \
 position/pieceid.h output/plaintext/move_inversion_counter.h \
 output/plaintext/message.h solving/pipe.h

output/latex/tree/refuting_variation_writer.h:

solving/machinery/solve.h:

stipulation/stipulation.h:

stipulation/goals/goals.h:

position/board.h:

utilities/bitmask.h:

utilities/boolean.h:

stipulation/slice_type.h:

stipulation/slice_type.enum.h:

position/side.h:

position/side.enum.h:

pieces/pieces.h:

output/mode.h:

output/mode.enum.h:

solving/machinery/dispatch.h:

debugging/trace.h:

stipulation/pipe.h:

stipulation/structure_traversal.h:

stipulation/slice.h:

stipulation/slice_structural_type.h:

stipulation/slice_structural_type.enum.h:

stipulation/slice_functional_type.h:

stipulation/slice_functional_type.enum.h:

stipulation/traversal.h:

stipulation/branch.h:

solving/ply.h:

output/latex/latex.h:

position/position.h:

position/color.h:

position/color.enum.h:

pieces/walks/vectors.h:

input/plaintext/twin.h:

input/plaintext/token.h:

input/plaintext/language.h:

output/plaintext/plaintext.h:

solving/move_effect_journal.h:

solving/castling_rights.h:

position/pieceid.h:

output/plaintext/move_inversion_counter.h:

output/plaintext/message.h:

solving/pipe.h:
output/latex/tree/refutation_writer$(OBJ_SUFFIX): \
 output/latex/tree/refutation_writer.c \
 output/latex/tree/refutation_writer.h solving/machinery/solve.h \
 stipulation/stipulation.h stipulation/goals/goals.h position/board.h \
 utilities/bitmask.h utilities/boolean.h stipulation/slice_type.h \
 stipulation/slice_type.enum.h position/side.h position/side.enum.h \
 pieces/pieces.h output/mode.h output/mode.enum.h \
 solving/machinery/dispatch.h debugging/trace.h stipulation/pipe.h \
 stipulation/structure_traversal.h stipulation/slice.h \
 stipulation/slice_structural_type.h \
 stipulation/slice_structural_type.enum.h \
 stipulation/slice_functional_type.h \
 stipulation/slice_functional_type.enum.h stipulation/traversal.h \
 output/latex/latex.h position/position.h position/color.h \
 position/color.enum.h pieces/walks/vectors.h input/plaintext/twin.h \
 input/plaintext/token.h input/plaintext/language.h \
 output/plaintext/plaintext.h solving/move_effect_journal.h \
 solving/castling_rights.h solving/ply.h position/pieceid.h \
 output/latex/tree/tree.h output/latex/tree/check_writer.h \
 output/plaintext/message.h solving/pipe.h

output/latex/tree/refutation_writer.h:

solving/machinery/solve.h:

stipulation/stipulation.h:

stipulation/goals/goals.h:

position/board.h:

utilities/bitmask.h:

utilities/boolean.h:

stipulation/slice_type.h:

stipulation/slice_type.enum.h:

position/side.h:

position/side.enum.h:

pieces/pieces.h:

output/mode.h:

output/mode.enum.h:

solving/machinery/dispatch.h:

debugging/trace.h:

stipulation/pipe.h:

stipulation/structure_traversal.h:

stipulation/slice.h:

stipulation/slice_structural_type.h:

stipulation/slice_structural_type.enum.h:

stipulation/slice_functional_type.h:

stipulation/slice_functional_type.enum.h:

stipulation/traversal.h:

output/latex/latex.h:

position/position.h:

position/color.h:

position/color.enum.h:

pieces/walks/vectors.h:

input/plaintext/twin.h:

input/plaintext/token.h:

input/plaintext/language.h:

output/plaintext/plaintext.h:

solving/move_effect_journal.h:

solving/castling_rights.h:

solving/ply.h:

position/pieceid.h:

output/latex/tree/tree.h:

output/latex/tree/check_writer.h:

output/plaintext/message.h:

solving/pipe.h:
