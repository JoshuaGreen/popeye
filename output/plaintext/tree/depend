output/plaintext/tree/tree$(OBJ_SUFFIX): output/plaintext/tree/tree.c \
  output/plaintext/tree/tree.h pydata.h pymsg.h pypipe.h \
  output/plaintext/plaintext.h output/plaintext/end_of_phase_writer.h \
  output/plaintext/tree/end_of_solution_writer.h \
  output/plaintext/tree/check_detector.h \
  output/plaintext/tree/continuation_writer.h \
  output/plaintext/tree/zugzwang_writer.h \
  output/plaintext/tree/battle_play_solution_writer.h \
  output/plaintext/tree/variation_writer.h \
  output/plaintext/tree/refuting_variation_writer.h \
  output/plaintext/tree/refutation_writer.h \
  output/plaintext/tree/goal_writer.h \
  output/plaintext/tree/move_inversion_counter.h platform/beep.h trace.h

output/plaintext/tree/tree.h:

pydata.h:

pymsg.h:

pypipe.h:

output/plaintext/plaintext.h:

output/plaintext/end_of_phase_writer.h:

output/plaintext/tree/end_of_solution_writer.h:

output/plaintext/tree/check_detector.h:

output/plaintext/tree/continuation_writer.h:

output/plaintext/tree/zugzwang_writer.h:

output/plaintext/tree/battle_play_solution_writer.h:

output/plaintext/tree/variation_writer.h:

output/plaintext/tree/refuting_variation_writer.h:

output/plaintext/tree/refutation_writer.h:

output/plaintext/tree/goal_writer.h:

output/plaintext/tree/move_inversion_counter.h:

platform/beep.h:

trace.h:
output/plaintext/tree/end_of_solution_writer$(OBJ_SUFFIX):  \
 output/plaintext/tree/end_of_solution_writer.c \
  output/plaintext/tree/end_of_solution_writer.h pyoutput.h pypipe.h \
  pydata.h pymsg.h stipulation/battle_play/defense_play.h \
  output/plaintext/tree/tree.h output/plaintext/tree/check_detector.h \
  trace.h

output/plaintext/tree/end_of_solution_writer.h:

pyoutput.h:

pypipe.h:

pydata.h:

pymsg.h:

stipulation/battle_play/defense_play.h:

output/plaintext/tree/tree.h:

output/plaintext/tree/check_detector.h:

trace.h:
output/plaintext/tree/battle_play_solution_writer$(OBJ_SUFFIX):  \
 output/plaintext/tree/battle_play_solution_writer.c \
  output/plaintext/tree/battle_play_solution_writer.h pyoutput.h pydata.h \
  pymsg.h pypipe.h stipulation/battle_play/defense_play.h \
  stipulation/battle_play/try.h output/plaintext/tree/tree.h \
  output/plaintext/tree/check_detector.h trace.h

output/plaintext/tree/battle_play_solution_writer.h:

pyoutput.h:

pydata.h:

pymsg.h:

pypipe.h:

stipulation/battle_play/defense_play.h:

stipulation/battle_play/try.h:

output/plaintext/tree/tree.h:

output/plaintext/tree/check_detector.h:

trace.h:
output/plaintext/tree/continuation_writer$(OBJ_SUFFIX):  \
 output/plaintext/tree/continuation_writer.c \
  output/plaintext/tree/continuation_writer.h pyoutput.h pydata.h \
  pypipe.h pytable.h pymsg.h stipulation/branch.h \
  stipulation/battle_play/defense_play.h stipulation/battle_play/threat.h \
  output/plaintext/tree/tree.h output/plaintext/tree/check_detector.h \
  trace.h

output/plaintext/tree/continuation_writer.h:

pyoutput.h:

pydata.h:

pypipe.h:

pytable.h:

pymsg.h:

stipulation/branch.h:

stipulation/battle_play/defense_play.h:

stipulation/battle_play/threat.h:

output/plaintext/tree/tree.h:

output/plaintext/tree/check_detector.h:

trace.h:
output/plaintext/tree/variation_writer$(OBJ_SUFFIX):  \
 output/plaintext/tree/variation_writer.c \
  output/plaintext/tree/variation_writer.h pyoutput.h pydata.h pypipe.h \
  stipulation/branch.h stipulation/battle_play/attack_play.h \
  output/plaintext/tree/tree.h output/plaintext/tree/check_detector.h \
  trace.h

output/plaintext/tree/variation_writer.h:

pyoutput.h:

pydata.h:

pypipe.h:

stipulation/branch.h:

stipulation/battle_play/attack_play.h:

output/plaintext/tree/tree.h:

output/plaintext/tree/check_detector.h:

trace.h:
output/plaintext/tree/refuting_variation_writer$(OBJ_SUFFIX):  \
 output/plaintext/tree/refuting_variation_writer.c \
  output/plaintext/tree/refuting_variation_writer.h pyoutput.h pydata.h \
  pymsg.h pypipe.h stipulation/branch.h \
  stipulation/battle_play/attack_play.h \
  output/plaintext/tree/move_inversion_counter.h trace.h

output/plaintext/tree/refuting_variation_writer.h:

pyoutput.h:

pydata.h:

pymsg.h:

pypipe.h:

stipulation/branch.h:

stipulation/battle_play/attack_play.h:

output/plaintext/tree/move_inversion_counter.h:

trace.h:
output/plaintext/tree/refutation_writer$(OBJ_SUFFIX):  \
 output/plaintext/tree/refutation_writer.c \
  output/plaintext/tree/refutation_writer.h pyoutput.h pydata.h pypipe.h \
  stipulation/battle_play/attack_play.h stipulation/battle_play/try.h \
  output/plaintext/tree/tree.h output/plaintext/tree/check_detector.h \
  trace.h

output/plaintext/tree/refutation_writer.h:

pyoutput.h:

pydata.h:

pypipe.h:

stipulation/battle_play/attack_play.h:

stipulation/battle_play/try.h:

output/plaintext/tree/tree.h:

output/plaintext/tree/check_detector.h:

trace.h:
output/plaintext/tree/zugzwang_writer$(OBJ_SUFFIX):  \
 output/plaintext/tree/zugzwang_writer.c \
  output/plaintext/tree/zugzwang_writer.h pyoutput.h pymsg.h pydata.h \
  pypipe.h stipulation/battle_play/attack_play.h \
  stipulation/battle_play/threat.h output/plaintext/tree/tree.h \
  output/plaintext/tree/check_detector.h trace.h

output/plaintext/tree/zugzwang_writer.h:

pyoutput.h:

pymsg.h:

pydata.h:

pypipe.h:

stipulation/battle_play/attack_play.h:

stipulation/battle_play/threat.h:

output/plaintext/tree/tree.h:

output/plaintext/tree/check_detector.h:

trace.h:
output/plaintext/tree/goal_writer$(OBJ_SUFFIX): output/plaintext/tree/goal_writer.c \
  output/plaintext/tree/goal_writer.h pyproc.h pypipe.h pyoutput.h \
  trace.h

output/plaintext/tree/goal_writer.h:

pyproc.h:

pypipe.h:

pyoutput.h:

trace.h:
output/plaintext/tree/check_detector$(OBJ_SUFFIX):  \
 output/plaintext/tree/check_detector.c \
  output/plaintext/tree/check_detector.h stipulation/branch.h \
  stipulation/battle_play/attack_play.h \
  stipulation/battle_play/defense_play.h output/plaintext/tree/tree.h \
  trace.h

output/plaintext/tree/check_detector.h:

stipulation/branch.h:

stipulation/battle_play/attack_play.h:

stipulation/battle_play/defense_play.h:

output/plaintext/tree/tree.h:

trace.h:
output/plaintext/tree/move_inversion_counter$(OBJ_SUFFIX):  \
 output/plaintext/tree/move_inversion_counter.c \
  output/plaintext/tree/move_inversion_counter.h pypipe.h pyoutput.h \
  trace.h

output/plaintext/tree/move_inversion_counter.h:

pypipe.h:

pyoutput.h:

trace.h:
