output/plaintext/plaintext$(OBJ_SUFFIX): output/plaintext/plaintext.c \
 output/plaintext/plaintext.h stipulation/goals/goals.h position/board.h \
 utilities/bitmask.h utilities/boolean.h output/plaintext/condition.h \
 output/plaintext/pieces.h position/position.h pieces/pieces.h \
 pieces/walks/vectors.h utilities/enumeration.h pymsg.h pylang.h \
 utilities/boolean.h conditions/conditions.h conditions/republican.h \
 solving/solve.h stipulation/stipulation.h stipulation/slice_type.h \
 output/mode.h conditions/bgl.h solving/move_effect_journal.h \
 solving/castling_rights.h solving/ply.h position/pieceid.h \
 conditions/kobul.h conditions/imitator.h conditions/singlebox/type1.h \
 pieces/walks/pawns/en_passant.h solving/observation.h \
 stipulation/temporary_hacks.h pieces/walks/classification.h \
 debugging/trace.h

output/plaintext/plaintext.h:

stipulation/goals/goals.h:

position/board.h:

utilities/bitmask.h:

utilities/boolean.h:

output/plaintext/condition.h:

output/plaintext/pieces.h:

position/position.h:

pieces/pieces.h:

pieces/walks/vectors.h:

utilities/enumeration.h:

pymsg.h:

pylang.h:

utilities/boolean.h:

conditions/conditions.h:

conditions/republican.h:

solving/solve.h:

stipulation/stipulation.h:

stipulation/slice_type.h:

output/mode.h:

conditions/bgl.h:

solving/move_effect_journal.h:

solving/castling_rights.h:

solving/ply.h:

position/pieceid.h:

conditions/kobul.h:

conditions/imitator.h:

conditions/singlebox/type1.h:

pieces/walks/pawns/en_passant.h:

solving/observation.h:

stipulation/temporary_hacks.h:

pieces/walks/classification.h:

debugging/trace.h:
output/plaintext/end_of_phase_writer$(OBJ_SUFFIX): \
 output/plaintext/end_of_phase_writer.c \
 output/plaintext/end_of_phase_writer.h solving/solve.h \
 stipulation/stipulation.h stipulation/goals/goals.h position/board.h \
 utilities/bitmask.h utilities/boolean.h stipulation/slice_type.h \
 utilities/enumeration.h position/position.h pieces/pieces.h \
 pieces/walks/vectors.h output/mode.h pymsg.h pylang.h \
 utilities/boolean.h stipulation/pipe.h stipulation/structure_traversal.h \
 stipulation/slice.h stipulation/traversal.h debugging/trace.h

output/plaintext/end_of_phase_writer.h:

solving/solve.h:

stipulation/stipulation.h:

stipulation/goals/goals.h:

position/board.h:

utilities/bitmask.h:

utilities/boolean.h:

stipulation/slice_type.h:

utilities/enumeration.h:

position/position.h:

pieces/pieces.h:

pieces/walks/vectors.h:

output/mode.h:

pymsg.h:

pylang.h:

utilities/boolean.h:

stipulation/pipe.h:

stipulation/structure_traversal.h:

stipulation/slice.h:

stipulation/traversal.h:

debugging/trace.h:
output/plaintext/illegal_selfcheck_writer$(OBJ_SUFFIX): \
 output/plaintext/illegal_selfcheck_writer.c \
 output/plaintext/illegal_selfcheck_writer.h solving/solve.h \
 stipulation/stipulation.h stipulation/goals/goals.h position/board.h \
 utilities/bitmask.h utilities/boolean.h stipulation/slice_type.h \
 utilities/enumeration.h position/position.h pieces/pieces.h \
 pieces/walks/vectors.h output/mode.h pymsg.h pylang.h \
 utilities/boolean.h stipulation/pipe.h stipulation/structure_traversal.h \
 stipulation/slice.h stipulation/traversal.h \
 stipulation/has_solution_type.h debugging/trace.h

output/plaintext/illegal_selfcheck_writer.h:

solving/solve.h:

stipulation/stipulation.h:

stipulation/goals/goals.h:

position/board.h:

utilities/bitmask.h:

utilities/boolean.h:

stipulation/slice_type.h:

utilities/enumeration.h:

position/position.h:

pieces/pieces.h:

pieces/walks/vectors.h:

output/mode.h:

pymsg.h:

pylang.h:

utilities/boolean.h:

stipulation/pipe.h:

stipulation/structure_traversal.h:

stipulation/slice.h:

stipulation/traversal.h:

stipulation/has_solution_type.h:

debugging/trace.h:
output/plaintext/move_inversion_counter$(OBJ_SUFFIX): \
 output/plaintext/move_inversion_counter.c \
 output/plaintext/move_inversion_counter.h solving/solve.h \
 stipulation/stipulation.h stipulation/goals/goals.h position/board.h \
 utilities/bitmask.h utilities/boolean.h stipulation/slice_type.h \
 utilities/enumeration.h position/position.h pieces/pieces.h \
 pieces/walks/vectors.h output/mode.h stipulation/pipe.h \
 stipulation/structure_traversal.h stipulation/slice.h \
 stipulation/traversal.h debugging/trace.h

output/plaintext/move_inversion_counter.h:

solving/solve.h:

stipulation/stipulation.h:

stipulation/goals/goals.h:

position/board.h:

utilities/bitmask.h:

utilities/boolean.h:

stipulation/slice_type.h:

utilities/enumeration.h:

position/position.h:

pieces/pieces.h:

pieces/walks/vectors.h:

output/mode.h:

stipulation/pipe.h:

stipulation/structure_traversal.h:

stipulation/slice.h:

stipulation/traversal.h:

debugging/trace.h:
output/plaintext/ohneschach_detect_undecidable_goal$(OBJ_SUFFIX): \
 output/plaintext/ohneschach_detect_undecidable_goal.c \
 output/plaintext/ohneschach_detect_undecidable_goal.h solving/solve.h \
 stipulation/stipulation.h stipulation/goals/goals.h position/board.h \
 utilities/bitmask.h utilities/boolean.h stipulation/slice_type.h \
 utilities/enumeration.h position/position.h pieces/pieces.h \
 pieces/walks/vectors.h output/mode.h stipulation/pipe.h \
 stipulation/structure_traversal.h stipulation/slice.h \
 stipulation/traversal.h stipulation/has_solution_type.h \
 conditions/ohneschach.h solving/ply.h debugging/trace.h pymsg.h pylang.h \
 utilities/boolean.h

output/plaintext/ohneschach_detect_undecidable_goal.h:

solving/solve.h:

stipulation/stipulation.h:

stipulation/goals/goals.h:

position/board.h:

utilities/bitmask.h:

utilities/boolean.h:

stipulation/slice_type.h:

utilities/enumeration.h:

position/position.h:

pieces/pieces.h:

pieces/walks/vectors.h:

output/mode.h:

stipulation/pipe.h:

stipulation/structure_traversal.h:

stipulation/slice.h:

stipulation/traversal.h:

stipulation/has_solution_type.h:

conditions/ohneschach.h:

solving/ply.h:

debugging/trace.h:

pymsg.h:

pylang.h:

utilities/boolean.h:
output/plaintext/goal_writer$(OBJ_SUFFIX): output/plaintext/goal_writer.c \
 output/plaintext/goal_writer.h stipulation/goals/goals.h \
 position/board.h utilities/bitmask.h utilities/boolean.h solving/solve.h \
 stipulation/stipulation.h stipulation/slice_type.h \
 utilities/enumeration.h position/position.h pieces/pieces.h \
 pieces/walks/vectors.h output/mode.h pymsg.h pylang.h \
 utilities/boolean.h stipulation/pipe.h stipulation/structure_traversal.h \
 stipulation/slice.h stipulation/traversal.h output/plaintext/tree/tree.h \
 debugging/trace.h

output/plaintext/goal_writer.h:

stipulation/goals/goals.h:

position/board.h:

utilities/bitmask.h:

utilities/boolean.h:

solving/solve.h:

stipulation/stipulation.h:

stipulation/slice_type.h:

utilities/enumeration.h:

position/position.h:

pieces/pieces.h:

pieces/walks/vectors.h:

output/mode.h:

pymsg.h:

pylang.h:

utilities/boolean.h:

stipulation/pipe.h:

stipulation/structure_traversal.h:

stipulation/slice.h:

stipulation/traversal.h:

output/plaintext/tree/tree.h:

debugging/trace.h:
output/plaintext/language_dependant$(OBJ_SUFFIX): \
 output/plaintext/language_dependant.c \
 output/plaintext/language_dependant.h pieces/pieces.h \
 utilities/boolean.h position/position.h position/board.h \
 utilities/bitmask.h pieces/walks/vectors.h utilities/enumeration.h \
 pylang.h conditions/conditions.h options/options.h \
 input/plaintext/twin.h stipulation/stipulation.h \
 stipulation/goals/goals.h stipulation/slice_type.h output/mode.h \
 input/plaintext/token.h input/plaintext/line.h conditions/mummer.h \
 solving/solve.h

output/plaintext/language_dependant.h:

pieces/pieces.h:

utilities/boolean.h:

position/position.h:

position/board.h:

utilities/bitmask.h:

pieces/walks/vectors.h:

utilities/enumeration.h:

pylang.h:

conditions/conditions.h:

options/options.h:

input/plaintext/twin.h:

stipulation/stipulation.h:

stipulation/goals/goals.h:

stipulation/slice_type.h:

output/mode.h:

input/plaintext/token.h:

input/plaintext/line.h:

conditions/mummer.h:

solving/solve.h:
output/plaintext/condition$(OBJ_SUFFIX): output/plaintext/condition.c \
 output/plaintext/condition.h utilities/boolean.h output/output.h \
 output/mode.h utilities/enumeration.h stipulation/stipulation.h \
 stipulation/goals/goals.h position/board.h utilities/bitmask.h \
 stipulation/slice_type.h position/position.h pieces/pieces.h \
 pieces/walks/vectors.h output/plaintext/language_dependant.h pylang.h \
 conditions/conditions.h options/options.h input/plaintext/twin.h \
 input/plaintext/token.h input/plaintext/line.h conditions/mummer.h \
 solving/solve.h output/plaintext/pieces.h input/plaintext/condition.h \
 pieces/walks/pawns/promotee_sequence.h pieces/attributes/chameleon.h \
 conditions/annan.h conditions/bgl.h solving/move_effect_journal.h \
 solving/castling_rights.h solving/ply.h position/pieceid.h \
 conditions/circe/april.h conditions/circe/rex_inclusive.h \
 conditions/circe/chameleon.h conditions/anticirce/anticirce.h \
 conditions/football.h conditions/geneva.h conditions/grid.h \
 conditions/imitator.h conditions/immune.h conditions/isardam.h \
 conditions/kobul.h conditions/koeko/anti.h conditions/koeko/koeko.h \
 conditions/madrasi.h conditions/magic_square.h conditions/messigny.h \
 conditions/oscillating_kings.h conditions/phantom.h \
 solving/observation.h stipulation/temporary_hacks.h conditions/protean.h \
 conditions/republican.h conditions/sat.h conditions/sentinelles.h \
 conditions/singlebox/type1.h \
 conditions/transmuting_kings/vaulting_kings.h conditions/woozles.h

output/plaintext/condition.h:

utilities/boolean.h:

output/output.h:

output/mode.h:

utilities/enumeration.h:

stipulation/stipulation.h:

stipulation/goals/goals.h:

position/board.h:

utilities/bitmask.h:

stipulation/slice_type.h:

position/position.h:

pieces/pieces.h:

pieces/walks/vectors.h:

output/plaintext/language_dependant.h:

pylang.h:

conditions/conditions.h:

options/options.h:

input/plaintext/twin.h:

input/plaintext/token.h:

input/plaintext/line.h:

conditions/mummer.h:

solving/solve.h:

output/plaintext/pieces.h:

input/plaintext/condition.h:

pieces/walks/pawns/promotee_sequence.h:

pieces/attributes/chameleon.h:

conditions/annan.h:

conditions/bgl.h:

solving/move_effect_journal.h:

solving/castling_rights.h:

solving/ply.h:

position/pieceid.h:

conditions/circe/april.h:

conditions/circe/rex_inclusive.h:

conditions/circe/chameleon.h:

conditions/anticirce/anticirce.h:

conditions/football.h:

conditions/geneva.h:

conditions/grid.h:

conditions/imitator.h:

conditions/immune.h:

conditions/isardam.h:

conditions/kobul.h:

conditions/koeko/anti.h:

conditions/koeko/koeko.h:

conditions/madrasi.h:

conditions/magic_square.h:

conditions/messigny.h:

conditions/oscillating_kings.h:

conditions/phantom.h:

solving/observation.h:

stipulation/temporary_hacks.h:

conditions/protean.h:

conditions/republican.h:

conditions/sat.h:

conditions/sentinelles.h:

conditions/singlebox/type1.h:

conditions/transmuting_kings/vaulting_kings.h:

conditions/woozles.h:
output/plaintext/proofgame$(OBJ_SUFFIX): output/plaintext/proofgame.c \
 output/plaintext/proofgame.h stipulation/stipulation.h \
 stipulation/goals/goals.h position/board.h utilities/bitmask.h \
 utilities/boolean.h stipulation/slice_type.h utilities/enumeration.h \
 position/position.h pieces/pieces.h pieces/walks/vectors.h output/mode.h \
 output/plaintext/language_dependant.h pylang.h conditions/conditions.h \
 options/options.h input/plaintext/twin.h input/plaintext/token.h \
 input/plaintext/line.h conditions/mummer.h solving/solve.h \
 output/plaintext/position.h pymsg.h pylang.h utilities/boolean.h

output/plaintext/proofgame.h:

stipulation/stipulation.h:

stipulation/goals/goals.h:

position/board.h:

utilities/bitmask.h:

utilities/boolean.h:

stipulation/slice_type.h:

utilities/enumeration.h:

position/position.h:

pieces/pieces.h:

pieces/walks/vectors.h:

output/mode.h:

output/plaintext/language_dependant.h:

pylang.h:

conditions/conditions.h:

options/options.h:

input/plaintext/twin.h:

input/plaintext/token.h:

input/plaintext/line.h:

conditions/mummer.h:

solving/solve.h:

output/plaintext/position.h:

pymsg.h:

pylang.h:

utilities/boolean.h:
output/plaintext/position$(OBJ_SUFFIX): output/plaintext/position.c \
 output/plaintext/position.h output/plaintext/plaintext.h \
 stipulation/goals/goals.h position/board.h utilities/bitmask.h \
 utilities/boolean.h output/plaintext/language_dependant.h \
 pieces/pieces.h position/position.h pieces/walks/vectors.h \
 utilities/enumeration.h pylang.h conditions/conditions.h \
 options/options.h input/plaintext/twin.h stipulation/stipulation.h \
 stipulation/slice_type.h output/mode.h input/plaintext/token.h \
 input/plaintext/line.h conditions/mummer.h solving/solve.h \
 output/plaintext/condition.h output/plaintext/pieces.h output/output.h \
 input/plaintext/problem.h input/plaintext/stipulation.h \
 options/maxthreatlength.h options/maxflightsquares.h \
 options/nontrivial.h conditions/grid.h conditions/imitator.h \
 solving/move_effect_journal.h solving/castling_rights.h solving/ply.h \
 position/pieceid.h pieces/attributes/neutral/neutral.h \
 pieces/walks/classification.h pieces/walks/hunters.h \
 solving/observation.h stipulation/temporary_hacks.h solving/castling.h \
 solving/move_generator.h pymsg.h pylang.h utilities/boolean.h

output/plaintext/position.h:

output/plaintext/plaintext.h:

stipulation/goals/goals.h:

position/board.h:

utilities/bitmask.h:

utilities/boolean.h:

output/plaintext/language_dependant.h:

pieces/pieces.h:

position/position.h:

pieces/walks/vectors.h:

utilities/enumeration.h:

pylang.h:

conditions/conditions.h:

options/options.h:

input/plaintext/twin.h:

stipulation/stipulation.h:

stipulation/slice_type.h:

output/mode.h:

input/plaintext/token.h:

input/plaintext/line.h:

conditions/mummer.h:

solving/solve.h:

output/plaintext/condition.h:

output/plaintext/pieces.h:

output/output.h:

input/plaintext/problem.h:

input/plaintext/stipulation.h:

options/maxthreatlength.h:

options/maxflightsquares.h:

options/nontrivial.h:

conditions/grid.h:

conditions/imitator.h:

solving/move_effect_journal.h:

solving/castling_rights.h:

solving/ply.h:

position/pieceid.h:

pieces/attributes/neutral/neutral.h:

pieces/walks/classification.h:

pieces/walks/hunters.h:

solving/observation.h:

stipulation/temporary_hacks.h:

solving/castling.h:

solving/move_generator.h:

pymsg.h:

pylang.h:

utilities/boolean.h:
output/plaintext/pieces$(OBJ_SUFFIX): output/plaintext/pieces.c \
 output/plaintext/pieces.h position/position.h position/board.h \
 utilities/bitmask.h pieces/pieces.h utilities/boolean.h \
 pieces/walks/vectors.h utilities/enumeration.h \
 output/plaintext/language_dependant.h pylang.h conditions/conditions.h \
 options/options.h input/plaintext/twin.h stipulation/stipulation.h \
 stipulation/goals/goals.h stipulation/slice_type.h output/mode.h \
 input/plaintext/token.h input/plaintext/line.h conditions/mummer.h \
 solving/solve.h pieces/attributes/neutral/neutral.h \
 pieces/walks/classification.h pieces/walks/hunters.h \
 solving/observation.h solving/ply.h stipulation/temporary_hacks.h \
 pymsg.h pylang.h utilities/boolean.h

output/plaintext/pieces.h:

position/position.h:

position/board.h:

utilities/bitmask.h:

pieces/pieces.h:

utilities/boolean.h:

pieces/walks/vectors.h:

utilities/enumeration.h:

output/plaintext/language_dependant.h:

pylang.h:

conditions/conditions.h:

options/options.h:

input/plaintext/twin.h:

stipulation/stipulation.h:

stipulation/goals/goals.h:

stipulation/slice_type.h:

output/mode.h:

input/plaintext/token.h:

input/plaintext/line.h:

conditions/mummer.h:

solving/solve.h:

pieces/attributes/neutral/neutral.h:

pieces/walks/classification.h:

pieces/walks/hunters.h:

solving/observation.h:

solving/ply.h:

stipulation/temporary_hacks.h:

pymsg.h:

pylang.h:

utilities/boolean.h:
output/plaintext/twinning$(OBJ_SUFFIX): output/plaintext/twinning.c \
 output/plaintext/twinning.h output/plaintext/plaintext.h \
 stipulation/goals/goals.h position/board.h utilities/bitmask.h \
 utilities/boolean.h pymsg.h pylang.h utilities/boolean.h

output/plaintext/twinning.h:

output/plaintext/plaintext.h:

stipulation/goals/goals.h:

position/board.h:

utilities/bitmask.h:

utilities/boolean.h:

pymsg.h:

pylang.h:

utilities/boolean.h:
