output/plaintext/plaintext$(OBJ_SUFFIX): output/plaintext/plaintext.c \
 output/plaintext/plaintext.h stipulation/goals/goals.h position/board.h \
 utilities/bitmask.h utilities/boolean.h output/plaintext/condition.h \
 output/plaintext/pieces.h position/position.h position/side.h \
 position/side.enum.h position/color.h position/color.enum.h \
 pieces/pieces.h pieces/walks/vectors.h output/plaintext/message.h \
 input/plaintext/language.h conditions/conditions.h \
 conditions/republican.h solving/machinery/solve.h \
 stipulation/stipulation.h stipulation/slice_type.h \
 stipulation/slice_type.enum.h output/mode.h output/mode.enum.h \
 solving/machinery/dispatch.h debugging/trace.h conditions/bgl.h \
 solving/move_effect_journal.h solving/castling_rights.h solving/ply.h \
 position/pieceid.h conditions/kobul.h conditions/imitator.h \
 conditions/singlebox/type1.h pieces/walks/pawns/en_passant.h \
 solving/observation.h solving/temporary_hacks.h \
 pieces/walks/classification.h debugging/assert.h

output/plaintext/plaintext.h:

stipulation/goals/goals.h:

position/board.h:

utilities/bitmask.h:

utilities/boolean.h:

output/plaintext/condition.h:

output/plaintext/pieces.h:

position/position.h:

position/side.h:

position/side.enum.h:

position/color.h:

position/color.enum.h:

pieces/pieces.h:

pieces/walks/vectors.h:

output/plaintext/message.h:

input/plaintext/language.h:

conditions/conditions.h:

conditions/republican.h:

solving/machinery/solve.h:

stipulation/stipulation.h:

stipulation/slice_type.h:

stipulation/slice_type.enum.h:

output/mode.h:

output/mode.enum.h:

solving/machinery/dispatch.h:

debugging/trace.h:

conditions/bgl.h:

solving/move_effect_journal.h:

solving/castling_rights.h:

solving/ply.h:

position/pieceid.h:

conditions/kobul.h:

conditions/imitator.h:

conditions/singlebox/type1.h:

pieces/walks/pawns/en_passant.h:

solving/observation.h:

solving/temporary_hacks.h:

pieces/walks/classification.h:

debugging/assert.h:
output/plaintext/end_of_phase_writer$(OBJ_SUFFIX): \
 output/plaintext/end_of_phase_writer.c \
 output/plaintext/end_of_phase_writer.h solving/machinery/solve.h \
 stipulation/stipulation.h stipulation/goals/goals.h position/board.h \
 utilities/bitmask.h utilities/boolean.h stipulation/slice_type.h \
 stipulation/slice_type.enum.h position/side.h position/side.enum.h \
 pieces/pieces.h output/mode.h output/mode.enum.h \
 solving/machinery/dispatch.h debugging/trace.h \
 output/plaintext/message.h input/plaintext/language.h stipulation/pipe.h \
 stipulation/structure_traversal.h stipulation/slice.h \
 stipulation/slice_structural_type.h \
 stipulation/slice_structural_type.enum.h \
 stipulation/slice_functional_type.h \
 stipulation/slice_functional_type.enum.h stipulation/traversal.h \
 solving/pipe.h

output/plaintext/end_of_phase_writer.h:

solving/machinery/solve.h:

stipulation/stipulation.h:

stipulation/goals/goals.h:

position/board.h:

utilities/bitmask.h:

utilities/boolean.h:

stipulation/slice_type.h:

stipulation/slice_type.enum.h:

position/side.h:

position/side.enum.h:

pieces/pieces.h:

output/mode.h:

output/mode.enum.h:

solving/machinery/dispatch.h:

debugging/trace.h:

output/plaintext/message.h:

input/plaintext/language.h:

stipulation/pipe.h:

stipulation/structure_traversal.h:

stipulation/slice.h:

stipulation/slice_structural_type.h:

stipulation/slice_structural_type.enum.h:

stipulation/slice_functional_type.h:

stipulation/slice_functional_type.enum.h:

stipulation/traversal.h:

solving/pipe.h:
output/plaintext/illegal_selfcheck_writer$(OBJ_SUFFIX): \
 output/plaintext/illegal_selfcheck_writer.c \
 output/plaintext/illegal_selfcheck_writer.h solving/machinery/solve.h \
 stipulation/stipulation.h stipulation/goals/goals.h position/board.h \
 utilities/bitmask.h utilities/boolean.h stipulation/slice_type.h \
 stipulation/slice_type.enum.h position/side.h position/side.enum.h \
 pieces/pieces.h output/mode.h output/mode.enum.h \
 solving/machinery/dispatch.h debugging/trace.h \
 output/plaintext/message.h input/plaintext/language.h stipulation/pipe.h \
 stipulation/structure_traversal.h stipulation/slice.h \
 stipulation/slice_structural_type.h \
 stipulation/slice_structural_type.enum.h \
 stipulation/slice_functional_type.h \
 stipulation/slice_functional_type.enum.h stipulation/traversal.h \
 solving/has_solution_type.h solving/has_solution_type.enum.h \
 solving/pipe.h

output/plaintext/illegal_selfcheck_writer.h:

solving/machinery/solve.h:

stipulation/stipulation.h:

stipulation/goals/goals.h:

position/board.h:

utilities/bitmask.h:

utilities/boolean.h:

stipulation/slice_type.h:

stipulation/slice_type.enum.h:

position/side.h:

position/side.enum.h:

pieces/pieces.h:

output/mode.h:

output/mode.enum.h:

solving/machinery/dispatch.h:

debugging/trace.h:

output/plaintext/message.h:

input/plaintext/language.h:

stipulation/pipe.h:

stipulation/structure_traversal.h:

stipulation/slice.h:

stipulation/slice_structural_type.h:

stipulation/slice_structural_type.enum.h:

stipulation/slice_functional_type.h:

stipulation/slice_functional_type.enum.h:

stipulation/traversal.h:

solving/has_solution_type.h:

solving/has_solution_type.enum.h:

solving/pipe.h:
output/plaintext/move_inversion_counter$(OBJ_SUFFIX): \
 output/plaintext/move_inversion_counter.c \
 output/plaintext/move_inversion_counter.h solving/machinery/solve.h \
 stipulation/stipulation.h stipulation/goals/goals.h position/board.h \
 utilities/bitmask.h utilities/boolean.h stipulation/slice_type.h \
 stipulation/slice_type.enum.h position/side.h position/side.enum.h \
 pieces/pieces.h output/mode.h output/mode.enum.h \
 solving/machinery/dispatch.h debugging/trace.h stipulation/pipe.h \
 stipulation/structure_traversal.h stipulation/slice.h \
 stipulation/slice_structural_type.h \
 stipulation/slice_structural_type.enum.h \
 stipulation/slice_functional_type.h \
 stipulation/slice_functional_type.enum.h stipulation/traversal.h \
 solving/pipe.h debugging/assert.h

output/plaintext/move_inversion_counter.h:

solving/machinery/solve.h:

stipulation/stipulation.h:

stipulation/goals/goals.h:

position/board.h:

utilities/bitmask.h:

utilities/boolean.h:

stipulation/slice_type.h:

stipulation/slice_type.enum.h:

position/side.h:

position/side.enum.h:

pieces/pieces.h:

output/mode.h:

output/mode.enum.h:

solving/machinery/dispatch.h:

debugging/trace.h:

stipulation/pipe.h:

stipulation/structure_traversal.h:

stipulation/slice.h:

stipulation/slice_structural_type.h:

stipulation/slice_structural_type.enum.h:

stipulation/slice_functional_type.h:

stipulation/slice_functional_type.enum.h:

stipulation/traversal.h:

solving/pipe.h:

debugging/assert.h:
output/plaintext/ohneschach_detect_undecidable_goal$(OBJ_SUFFIX): \
 output/plaintext/ohneschach_detect_undecidable_goal.c \
 output/plaintext/ohneschach_detect_undecidable_goal.h \
 solving/machinery/solve.h stipulation/stipulation.h \
 stipulation/goals/goals.h position/board.h utilities/bitmask.h \
 utilities/boolean.h stipulation/slice_type.h \
 stipulation/slice_type.enum.h position/side.h position/side.enum.h \
 pieces/pieces.h output/mode.h output/mode.enum.h \
 solving/machinery/dispatch.h debugging/trace.h stipulation/pipe.h \
 stipulation/structure_traversal.h stipulation/slice.h \
 stipulation/slice_structural_type.h \
 stipulation/slice_structural_type.enum.h \
 stipulation/slice_functional_type.h \
 stipulation/slice_functional_type.enum.h stipulation/traversal.h \
 solving/has_solution_type.h solving/has_solution_type.enum.h \
 conditions/ohneschach.h solving/ply.h output/plaintext/message.h \
 input/plaintext/language.h solving/pipe.h

output/plaintext/ohneschach_detect_undecidable_goal.h:

solving/machinery/solve.h:

stipulation/stipulation.h:

stipulation/goals/goals.h:

position/board.h:

utilities/bitmask.h:

utilities/boolean.h:

stipulation/slice_type.h:

stipulation/slice_type.enum.h:

position/side.h:

position/side.enum.h:

pieces/pieces.h:

output/mode.h:

output/mode.enum.h:

solving/machinery/dispatch.h:

debugging/trace.h:

stipulation/pipe.h:

stipulation/structure_traversal.h:

stipulation/slice.h:

stipulation/slice_structural_type.h:

stipulation/slice_structural_type.enum.h:

stipulation/slice_functional_type.h:

stipulation/slice_functional_type.enum.h:

stipulation/traversal.h:

solving/has_solution_type.h:

solving/has_solution_type.enum.h:

conditions/ohneschach.h:

solving/ply.h:

output/plaintext/message.h:

input/plaintext/language.h:

solving/pipe.h:
output/plaintext/goal_writer$(OBJ_SUFFIX): output/plaintext/goal_writer.c \
 output/plaintext/goal_writer.h stipulation/goals/goals.h \
 position/board.h utilities/bitmask.h utilities/boolean.h \
 solving/machinery/solve.h stipulation/stipulation.h \
 stipulation/slice_type.h stipulation/slice_type.enum.h position/side.h \
 position/side.enum.h pieces/pieces.h output/mode.h output/mode.enum.h \
 solving/machinery/dispatch.h debugging/trace.h stipulation/pipe.h \
 stipulation/structure_traversal.h stipulation/slice.h \
 stipulation/slice_structural_type.h \
 stipulation/slice_structural_type.enum.h \
 stipulation/slice_functional_type.h \
 stipulation/slice_functional_type.enum.h stipulation/traversal.h \
 output/plaintext/tree/tree.h output/plaintext/message.h \
 input/plaintext/language.h solving/pipe.h debugging/assert.h

output/plaintext/goal_writer.h:

stipulation/goals/goals.h:

position/board.h:

utilities/bitmask.h:

utilities/boolean.h:

solving/machinery/solve.h:

stipulation/stipulation.h:

stipulation/slice_type.h:

stipulation/slice_type.enum.h:

position/side.h:

position/side.enum.h:

pieces/pieces.h:

output/mode.h:

output/mode.enum.h:

solving/machinery/dispatch.h:

debugging/trace.h:

stipulation/pipe.h:

stipulation/structure_traversal.h:

stipulation/slice.h:

stipulation/slice_structural_type.h:

stipulation/slice_structural_type.enum.h:

stipulation/slice_functional_type.h:

stipulation/slice_functional_type.enum.h:

stipulation/traversal.h:

output/plaintext/tree/tree.h:

output/plaintext/message.h:

input/plaintext/language.h:

solving/pipe.h:

debugging/assert.h:
output/plaintext/language_dependant$(OBJ_SUFFIX): \
 output/plaintext/language_dependant.c \
 output/plaintext/language_dependant.h pieces/pieces.h \
 utilities/boolean.h position/position.h position/board.h \
 utilities/bitmask.h position/side.h position/side.enum.h \
 position/color.h position/color.enum.h pieces/walks/vectors.h \
 conditions/conditions.h options/options.h input/plaintext/twin.h \
 stipulation/stipulation.h stipulation/goals/goals.h \
 stipulation/slice_type.h stipulation/slice_type.enum.h output/mode.h \
 output/mode.enum.h input/plaintext/token.h input/plaintext/language.h \
 input/plaintext/line.h conditions/mummer.h solving/machinery/solve.h \
 solving/machinery/dispatch.h debugging/trace.h \
 conditions/anticirce/anticirce.h conditions/circe/circe.h \
 stipulation/structure_traversal.h stipulation/slice.h \
 stipulation/slice_structural_type.h \
 stipulation/slice_structural_type.enum.h \
 stipulation/slice_functional_type.h \
 stipulation/slice_functional_type.enum.h stipulation/traversal.h \
 stipulation/slice_insertion.h solving/move_effect_journal.h \
 solving/castling_rights.h solving/ply.h position/pieceid.h \
 solving/machinery/twin.h conditions/circe/rebirth_square_occupied.h \
 conditions/circe/reborn_piece.h conditions/circe/rebirth_square.h \
 conditions/circe/relevant_capture.h conditions/circe/relevant_piece.h \
 conditions/circe/relevant_side.h conditions/sentinelles.h \
 output/plaintext/message.h debugging/assert.h

output/plaintext/language_dependant.h:

pieces/pieces.h:

utilities/boolean.h:

position/position.h:

position/board.h:

utilities/bitmask.h:

position/side.h:

position/side.enum.h:

position/color.h:

position/color.enum.h:

pieces/walks/vectors.h:

conditions/conditions.h:

options/options.h:

input/plaintext/twin.h:

stipulation/stipulation.h:

stipulation/goals/goals.h:

stipulation/slice_type.h:

stipulation/slice_type.enum.h:

output/mode.h:

output/mode.enum.h:

input/plaintext/token.h:

input/plaintext/language.h:

input/plaintext/line.h:

conditions/mummer.h:

solving/machinery/solve.h:

solving/machinery/dispatch.h:

debugging/trace.h:

conditions/anticirce/anticirce.h:

conditions/circe/circe.h:

stipulation/structure_traversal.h:

stipulation/slice.h:

stipulation/slice_structural_type.h:

stipulation/slice_structural_type.enum.h:

stipulation/slice_functional_type.h:

stipulation/slice_functional_type.enum.h:

stipulation/traversal.h:

stipulation/slice_insertion.h:

solving/move_effect_journal.h:

solving/castling_rights.h:

solving/ply.h:

position/pieceid.h:

solving/machinery/twin.h:

conditions/circe/rebirth_square_occupied.h:

conditions/circe/reborn_piece.h:

conditions/circe/rebirth_square.h:

conditions/circe/relevant_capture.h:

conditions/circe/relevant_piece.h:

conditions/circe/relevant_side.h:

conditions/sentinelles.h:

output/plaintext/message.h:

debugging/assert.h:
output/plaintext/condition$(OBJ_SUFFIX): output/plaintext/condition.c \
 output/plaintext/condition.h utilities/boolean.h output/output.h \
 output/mode.h output/mode.enum.h stipulation/stipulation.h \
 stipulation/goals/goals.h position/board.h utilities/bitmask.h \
 stipulation/slice_type.h stipulation/slice_type.enum.h position/side.h \
 position/side.enum.h pieces/pieces.h \
 output/plaintext/language_dependant.h position/position.h \
 position/color.h position/color.enum.h pieces/walks/vectors.h \
 conditions/conditions.h options/options.h input/plaintext/twin.h \
 input/plaintext/token.h input/plaintext/language.h \
 input/plaintext/line.h conditions/mummer.h solving/machinery/solve.h \
 solving/machinery/dispatch.h debugging/trace.h \
 conditions/anticirce/anticirce.h conditions/circe/circe.h \
 stipulation/structure_traversal.h stipulation/slice.h \
 stipulation/slice_structural_type.h \
 stipulation/slice_structural_type.enum.h \
 stipulation/slice_functional_type.h \
 stipulation/slice_functional_type.enum.h stipulation/traversal.h \
 stipulation/slice_insertion.h solving/move_effect_journal.h \
 solving/castling_rights.h solving/ply.h position/pieceid.h \
 solving/machinery/twin.h conditions/circe/rebirth_square_occupied.h \
 conditions/circe/reborn_piece.h conditions/circe/rebirth_square.h \
 conditions/circe/relevant_capture.h conditions/circe/relevant_piece.h \
 conditions/circe/relevant_side.h conditions/sentinelles.h \
 output/plaintext/message.h output/plaintext/pieces.h \
 input/plaintext/condition.h pieces/walks/pawns/promotee_sequence.h \
 pieces/attributes/chameleon.h conditions/annan.h conditions/bgl.h \
 conditions/circe/april.h conditions/circe/rex_inclusive.h \
 conditions/circe/chameleon.h conditions/football.h conditions/geneva.h \
 conditions/grid.h conditions/imitator.h conditions/immune.h \
 conditions/isardam.h conditions/kobul.h conditions/koeko/anti.h \
 conditions/koeko/koeko.h conditions/madrasi.h conditions/magic_square.h \
 conditions/marscirce/marscirce.h solving/observation.h \
 solving/temporary_hacks.h solving/move_generator.h \
 conditions/marscirce/anti.h conditions/marscirce/phantom.h \
 conditions/messigny.h conditions/oscillating_kings.h \
 conditions/protean.h conditions/republican.h conditions/sat.h \
 conditions/singlebox/type1.h \
 conditions/transmuting_kings/vaulting_kings.h conditions/woozles.h \
 debugging/assert.h

output/plaintext/condition.h:

utilities/boolean.h:

output/output.h:

output/mode.h:

output/mode.enum.h:

stipulation/stipulation.h:

stipulation/goals/goals.h:

position/board.h:

utilities/bitmask.h:

stipulation/slice_type.h:

stipulation/slice_type.enum.h:

position/side.h:

position/side.enum.h:

pieces/pieces.h:

output/plaintext/language_dependant.h:

position/position.h:

position/color.h:

position/color.enum.h:

pieces/walks/vectors.h:

conditions/conditions.h:

options/options.h:

input/plaintext/twin.h:

input/plaintext/token.h:

input/plaintext/language.h:

input/plaintext/line.h:

conditions/mummer.h:

solving/machinery/solve.h:

solving/machinery/dispatch.h:

debugging/trace.h:

conditions/anticirce/anticirce.h:

conditions/circe/circe.h:

stipulation/structure_traversal.h:

stipulation/slice.h:

stipulation/slice_structural_type.h:

stipulation/slice_structural_type.enum.h:

stipulation/slice_functional_type.h:

stipulation/slice_functional_type.enum.h:

stipulation/traversal.h:

stipulation/slice_insertion.h:

solving/move_effect_journal.h:

solving/castling_rights.h:

solving/ply.h:

position/pieceid.h:

solving/machinery/twin.h:

conditions/circe/rebirth_square_occupied.h:

conditions/circe/reborn_piece.h:

conditions/circe/rebirth_square.h:

conditions/circe/relevant_capture.h:

conditions/circe/relevant_piece.h:

conditions/circe/relevant_side.h:

conditions/sentinelles.h:

output/plaintext/message.h:

output/plaintext/pieces.h:

input/plaintext/condition.h:

pieces/walks/pawns/promotee_sequence.h:

pieces/attributes/chameleon.h:

conditions/annan.h:

conditions/bgl.h:

conditions/circe/april.h:

conditions/circe/rex_inclusive.h:

conditions/circe/chameleon.h:

conditions/football.h:

conditions/geneva.h:

conditions/grid.h:

conditions/imitator.h:

conditions/immune.h:

conditions/isardam.h:

conditions/kobul.h:

conditions/koeko/anti.h:

conditions/koeko/koeko.h:

conditions/madrasi.h:

conditions/magic_square.h:

conditions/marscirce/marscirce.h:

solving/observation.h:

solving/temporary_hacks.h:

solving/move_generator.h:

conditions/marscirce/anti.h:

conditions/marscirce/phantom.h:

conditions/messigny.h:

conditions/oscillating_kings.h:

conditions/protean.h:

conditions/republican.h:

conditions/sat.h:

conditions/singlebox/type1.h:

conditions/transmuting_kings/vaulting_kings.h:

conditions/woozles.h:

debugging/assert.h:
output/plaintext/position$(OBJ_SUFFIX): output/plaintext/position.c \
 output/plaintext/position.h position/position.h position/board.h \
 utilities/bitmask.h position/side.h position/side.enum.h \
 position/color.h position/color.enum.h pieces/pieces.h \
 utilities/boolean.h pieces/walks/vectors.h output/plaintext/plaintext.h \
 stipulation/goals/goals.h output/plaintext/language_dependant.h \
 conditions/conditions.h options/options.h input/plaintext/twin.h \
 stipulation/stipulation.h stipulation/slice_type.h \
 stipulation/slice_type.enum.h output/mode.h output/mode.enum.h \
 input/plaintext/token.h input/plaintext/language.h \
 input/plaintext/line.h conditions/mummer.h solving/machinery/solve.h \
 solving/machinery/dispatch.h debugging/trace.h \
 conditions/anticirce/anticirce.h conditions/circe/circe.h \
 stipulation/structure_traversal.h stipulation/slice.h \
 stipulation/slice_structural_type.h \
 stipulation/slice_structural_type.enum.h \
 stipulation/slice_functional_type.h \
 stipulation/slice_functional_type.enum.h stipulation/traversal.h \
 stipulation/slice_insertion.h solving/move_effect_journal.h \
 solving/castling_rights.h solving/ply.h position/pieceid.h \
 solving/machinery/twin.h conditions/circe/rebirth_square_occupied.h \
 conditions/circe/reborn_piece.h conditions/circe/rebirth_square.h \
 conditions/circe/relevant_capture.h conditions/circe/relevant_piece.h \
 conditions/circe/relevant_side.h conditions/sentinelles.h \
 output/plaintext/message.h output/plaintext/condition.h \
 output/plaintext/pieces.h output/output.h input/plaintext/problem.h \
 input/plaintext/stipulation.h options/maxthreatlength.h \
 options/maxflightsquares.h options/nontrivial.h conditions/grid.h \
 conditions/imitator.h pieces/attributes/neutral/neutral.h \
 pieces/walks/classification.h pieces/walks/hunters.h \
 solving/observation.h solving/temporary_hacks.h solving/castling.h \
 solving/move_generator.h debugging/assert.h

output/plaintext/position.h:

position/position.h:

position/board.h:

utilities/bitmask.h:

position/side.h:

position/side.enum.h:

position/color.h:

position/color.enum.h:

pieces/pieces.h:

utilities/boolean.h:

pieces/walks/vectors.h:

output/plaintext/plaintext.h:

stipulation/goals/goals.h:

output/plaintext/language_dependant.h:

conditions/conditions.h:

options/options.h:

input/plaintext/twin.h:

stipulation/stipulation.h:

stipulation/slice_type.h:

stipulation/slice_type.enum.h:

output/mode.h:

output/mode.enum.h:

input/plaintext/token.h:

input/plaintext/language.h:

input/plaintext/line.h:

conditions/mummer.h:

solving/machinery/solve.h:

solving/machinery/dispatch.h:

debugging/trace.h:

conditions/anticirce/anticirce.h:

conditions/circe/circe.h:

stipulation/structure_traversal.h:

stipulation/slice.h:

stipulation/slice_structural_type.h:

stipulation/slice_structural_type.enum.h:

stipulation/slice_functional_type.h:

stipulation/slice_functional_type.enum.h:

stipulation/traversal.h:

stipulation/slice_insertion.h:

solving/move_effect_journal.h:

solving/castling_rights.h:

solving/ply.h:

position/pieceid.h:

solving/machinery/twin.h:

conditions/circe/rebirth_square_occupied.h:

conditions/circe/reborn_piece.h:

conditions/circe/rebirth_square.h:

conditions/circe/relevant_capture.h:

conditions/circe/relevant_piece.h:

conditions/circe/relevant_side.h:

conditions/sentinelles.h:

output/plaintext/message.h:

output/plaintext/condition.h:

output/plaintext/pieces.h:

output/output.h:

input/plaintext/problem.h:

input/plaintext/stipulation.h:

options/maxthreatlength.h:

options/maxflightsquares.h:

options/nontrivial.h:

conditions/grid.h:

conditions/imitator.h:

pieces/attributes/neutral/neutral.h:

pieces/walks/classification.h:

pieces/walks/hunters.h:

solving/observation.h:

solving/temporary_hacks.h:

solving/castling.h:

solving/move_generator.h:

debugging/assert.h:
output/plaintext/pieces$(OBJ_SUFFIX): output/plaintext/pieces.c \
 output/plaintext/pieces.h position/position.h position/board.h \
 utilities/bitmask.h position/side.h position/side.enum.h \
 position/color.h position/color.enum.h pieces/pieces.h \
 utilities/boolean.h pieces/walks/vectors.h \
 output/plaintext/language_dependant.h conditions/conditions.h \
 options/options.h input/plaintext/twin.h stipulation/stipulation.h \
 stipulation/goals/goals.h stipulation/slice_type.h \
 stipulation/slice_type.enum.h output/mode.h output/mode.enum.h \
 input/plaintext/token.h input/plaintext/language.h \
 input/plaintext/line.h conditions/mummer.h solving/machinery/solve.h \
 solving/machinery/dispatch.h debugging/trace.h \
 conditions/anticirce/anticirce.h conditions/circe/circe.h \
 stipulation/structure_traversal.h stipulation/slice.h \
 stipulation/slice_structural_type.h \
 stipulation/slice_structural_type.enum.h \
 stipulation/slice_functional_type.h \
 stipulation/slice_functional_type.enum.h stipulation/traversal.h \
 stipulation/slice_insertion.h solving/move_effect_journal.h \
 solving/castling_rights.h solving/ply.h position/pieceid.h \
 solving/machinery/twin.h conditions/circe/rebirth_square_occupied.h \
 conditions/circe/reborn_piece.h conditions/circe/rebirth_square.h \
 conditions/circe/relevant_capture.h conditions/circe/relevant_piece.h \
 conditions/circe/relevant_side.h conditions/sentinelles.h \
 output/plaintext/message.h pieces/attributes/neutral/neutral.h \
 pieces/walks/classification.h pieces/walks/hunters.h \
 solving/observation.h solving/temporary_hacks.h debugging/assert.h

output/plaintext/pieces.h:

position/position.h:

position/board.h:

utilities/bitmask.h:

position/side.h:

position/side.enum.h:

position/color.h:

position/color.enum.h:

pieces/pieces.h:

utilities/boolean.h:

pieces/walks/vectors.h:

output/plaintext/language_dependant.h:

conditions/conditions.h:

options/options.h:

input/plaintext/twin.h:

stipulation/stipulation.h:

stipulation/goals/goals.h:

stipulation/slice_type.h:

stipulation/slice_type.enum.h:

output/mode.h:

output/mode.enum.h:

input/plaintext/token.h:

input/plaintext/language.h:

input/plaintext/line.h:

conditions/mummer.h:

solving/machinery/solve.h:

solving/machinery/dispatch.h:

debugging/trace.h:

conditions/anticirce/anticirce.h:

conditions/circe/circe.h:

stipulation/structure_traversal.h:

stipulation/slice.h:

stipulation/slice_structural_type.h:

stipulation/slice_structural_type.enum.h:

stipulation/slice_functional_type.h:

stipulation/slice_functional_type.enum.h:

stipulation/traversal.h:

stipulation/slice_insertion.h:

solving/move_effect_journal.h:

solving/castling_rights.h:

solving/ply.h:

position/pieceid.h:

solving/machinery/twin.h:

conditions/circe/rebirth_square_occupied.h:

conditions/circe/reborn_piece.h:

conditions/circe/rebirth_square.h:

conditions/circe/relevant_capture.h:

conditions/circe/relevant_piece.h:

conditions/circe/relevant_side.h:

conditions/sentinelles.h:

output/plaintext/message.h:

pieces/attributes/neutral/neutral.h:

pieces/walks/classification.h:

pieces/walks/hunters.h:

solving/observation.h:

solving/temporary_hacks.h:

debugging/assert.h:
output/plaintext/twinning$(OBJ_SUFFIX): output/plaintext/twinning.c \
 output/plaintext/twinning.h output/plaintext/plaintext.h \
 stipulation/goals/goals.h position/board.h utilities/bitmask.h \
 utilities/boolean.h output/plaintext/message.h \
 input/plaintext/language.h

output/plaintext/twinning.h:

output/plaintext/plaintext.h:

stipulation/goals/goals.h:

position/board.h:

utilities/bitmask.h:

utilities/boolean.h:

output/plaintext/message.h:

input/plaintext/language.h:
output/plaintext/message$(OBJ_SUFFIX): output/plaintext/message.c \
 output/plaintext/message.h input/plaintext/language.h \
 utilities/boolean.h input/plaintext/line.h output/output.h output/mode.h \
 output/mode.enum.h stipulation/stipulation.h stipulation/goals/goals.h \
 position/board.h utilities/bitmask.h stipulation/slice_type.h \
 stipulation/slice_type.enum.h position/side.h position/side.enum.h \
 pieces/pieces.h output/plaintext/plaintext.h \
 output/plaintext/language_dependant.h position/position.h \
 position/color.h position/color.enum.h pieces/walks/vectors.h \
 conditions/conditions.h options/options.h input/plaintext/twin.h \
 input/plaintext/token.h conditions/mummer.h solving/machinery/solve.h \
 solving/machinery/dispatch.h debugging/trace.h \
 conditions/anticirce/anticirce.h conditions/circe/circe.h \
 stipulation/structure_traversal.h stipulation/slice.h \
 stipulation/slice_structural_type.h \
 stipulation/slice_structural_type.enum.h \
 stipulation/slice_functional_type.h \
 stipulation/slice_functional_type.enum.h stipulation/traversal.h \
 stipulation/slice_insertion.h solving/move_effect_journal.h \
 solving/castling_rights.h solving/ply.h position/pieceid.h \
 solving/machinery/twin.h conditions/circe/rebirth_square_occupied.h \
 conditions/circe/reborn_piece.h conditions/circe/rebirth_square.h \
 conditions/circe/relevant_capture.h conditions/circe/relevant_piece.h \
 conditions/circe/relevant_side.h conditions/sentinelles.h \
 output/latex/latex.h platform/pytime.h

output/plaintext/message.h:

input/plaintext/language.h:

utilities/boolean.h:

input/plaintext/line.h:

output/output.h:

output/mode.h:

output/mode.enum.h:

stipulation/stipulation.h:

stipulation/goals/goals.h:

position/board.h:

utilities/bitmask.h:

stipulation/slice_type.h:

stipulation/slice_type.enum.h:

position/side.h:

position/side.enum.h:

pieces/pieces.h:

output/plaintext/plaintext.h:

output/plaintext/language_dependant.h:

position/position.h:

position/color.h:

position/color.enum.h:

pieces/walks/vectors.h:

conditions/conditions.h:

options/options.h:

input/plaintext/twin.h:

input/plaintext/token.h:

conditions/mummer.h:

solving/machinery/solve.h:

solving/machinery/dispatch.h:

debugging/trace.h:

conditions/anticirce/anticirce.h:

conditions/circe/circe.h:

stipulation/structure_traversal.h:

stipulation/slice.h:

stipulation/slice_structural_type.h:

stipulation/slice_structural_type.enum.h:

stipulation/slice_functional_type.h:

stipulation/slice_functional_type.enum.h:

stipulation/traversal.h:

stipulation/slice_insertion.h:

solving/move_effect_journal.h:

solving/castling_rights.h:

solving/ply.h:

position/pieceid.h:

solving/machinery/twin.h:

conditions/circe/rebirth_square_occupied.h:

conditions/circe/reborn_piece.h:

conditions/circe/rebirth_square.h:

conditions/circe/relevant_capture.h:

conditions/circe/relevant_piece.h:

conditions/circe/relevant_side.h:

conditions/sentinelles.h:

output/latex/latex.h:

platform/pytime.h:
