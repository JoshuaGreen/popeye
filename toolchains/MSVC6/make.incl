# -*- Makefile -*-
#

# Include file for makefile.unx for compiling on Windows using
# Microsoft Visual C++ v6
# I.e. Windows (32bit) is both host and target platform

# Requirements:
#
# The following tools can be used to produce executables for the host
# and target plarform and can be found in the $PATH
# - MSPDB60.DLL
#
# (LINK.EXE used to belong to this list, but we now have to fully
# qualify this executable to disambiguate it from Cygwin's
# /usr/bin/link)


# Compiler selection
# ==================

# Microsoft Visual C++ 98 default installation directory
# (Why on earth they chose to install this thing into a path
#  - that contains spaces
#  - that depends on the system language
#  is really beyond me (TM).)
MSVC6_DEFAULT_INSTALLDIR=C:/Program Files/Microsoft Visual Studio/VC98

# By default, use the default installation directory
MSVC6_INSTALLDIR=$(MSVC6_DEFAULT_INSTALLDIR)

# Default installation dir for German Windows
# derive the one for your Windows system language if necessary
#MSVC6_INSTALLDIR=C:/Programme/Microsoft Visual Studio/VC98

# Compiler for creating executables on host
CCHOST="${MSVC6_INSTALLDIR}/Bin/CL.EXE"

# Linker for creating executables on host
# (fully qualified to disambiguate from Cygwin's /usr/bin/link)
LDHOST="${MSVC6_INSTALLDIR}/Bin/LINK.EXE"

# Compiler for creating executables on target
CCTARGET="${MSVC6_INSTALLDIR}/Bin/CL.EXE"

# Linker for creating executables on target
# (fully qualified to disambiguate from Cygwin's /usr/bin/link)
LDTARGET="${MSVC6_INSTALLDIR}/Bin/LINK.EXE"


# Librarian
# ---------

# A library is called archive on Unix-ish platforms

# Archive generator
ARCHIVER="${MSVC6_INSTALLDIR}/Bin/LIB.EXE"

# Archiver options
# suppress logo - other options will be added by makefile.unx based
# on setttings below
ARCHIVERFLAGS=/NOLOGO


# Compiler options
# ================

# suppress logo - other options will be added by makefile.unx based
# on setttings below
CFLAGS=/nologo

# Select whether to produce an executable with debugging and profiling
# info
#DBG=/Zi /Yd
DBG=

# Select target compiler optimization level
CCOPTIM=/GAs /O2gitb2

# Option for producing dependency information in makefile format
# none - we re-use the dependency file generated using gcc

# Option for compiling only
COMPILEONLY=/c

# Option for indicating generated object file
OBJFILE=/Fo

# Option for defining a C preprocessor macro
DEFINEMACRO=/D

INCLUDEPATHS="/I${MSVC6_INSTALLDIR}/Include"


# Librarian options
# =================

# Option for indicating generated library file
LIBFILE=/OUT:


# Linker options
# ==============

# suppress "logo" - other options will be added by makefile.unx based
# on setttings below
LDFLAGS=/NOLOGO

# Select taret linker optimization level
LDOPTIM=

# Option for indicating generated executable file
EXEFILE=/OUT:

# Path to library files to be linked
LIBRARYPATHS=

# Names of libraries to link
LIBRARIES=WINMM.LIB
# WINMM = Windows Multimedia Library (we use Multimedia Timers to
# implement option maxtime)


# Platform spedific file name suffixes
# ====================================

# suffix for objects
OBJ_SUFFIX=.obj

# suffix for libraries
LIB_SUFFIX=.lib

# suffix for executables
EXE_SUFFIX=.exe


# Meta information
# ----------------
OSTYPE=Windows


# Selector for platform-specific files
# ====================================

PLATFORM=windows32

# tell Windows 98 version from regular Windows 32 version
# OTHER=$(DEFINEMACRO)_WIN98
