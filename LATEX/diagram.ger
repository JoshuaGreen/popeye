% \iffalse
%-----------------------------------------------------------------
% Dies ist DIAGRAM.GER
% eine LaTeX-Style Datei um Schachdiagramme zu setzen. Der Style
% ist insbesondere f"ur Problemschachdiagramme gedacht.
%
% DIAGRAM.STY wurde entwickelt von
%   Thomas Brand
%   Kulmke 216
%   D-44269 Dortmund
%
%       und
%
%   Stefan H\"oning
%   Auf'm Kamp 83
%   D-41462 Neuss
%   (Tel.: +2131/58352)
%
% Der Style basiert auf CHESS.TEX, einem Macropacket von
% Elmar Bartel, der dieses f"ur den Satz der Zeitschrift
% Problemkiste verwendet.
%
% (c) 1994      Th. Brand, D-Dortmund,
%               El. Bartel D-M\"unchen,
%               St. H\"oning D-Neuss
%
% !!!!!
% !!!!!  Dieser Style kann nur benutzt werden, wenn man zumindest
% !!!!!  einen der beiden Fonts ELCHnn oder FSELCHnn von Elmar
% !!!!!  Bartel installiert hat.
% !!!!!
%
%-----------------------------------------------------------------
% \fi
% \iffalse
%<*install>
{\expandafter\ifx\csname diagram\endcsname\relax\else\endinput\fi}
{
    \global\let\yyyy\relax
    \expandafter\ifx\csname documentstyle\endcsname\relax
        \gdef\xxxx#1{#1}
    \else
        \gdef\xxxx#1{}
        \ifcat a\noexpand @\else
            \gdef\yyyy{%
                \documentstyle[german,doc,diagram]{article}\MakePercentIgnore
                \csname iffalse\endcsname
            }
        \fi
    \fi
}
\xxxx{\def\batchfile{diagram.ger}}
\xxxx{\input docstrip.tex }
\xxxx{\generateFile{diagram.sty}{t}{\from{diagram.ger}{style}}}
\xxxx{\endinput}
\yyyy
%</install>
% \fi

\def\fileversion{1.1}
\def\filedate{94/06/22}
\def\docdate {94/04/03}

%% \CheckSum{3480}
%% \CharacterTable
%%  {Upper-case    \A\B\C\D\E\F\G\H\I\J\K\L\M\N\O\P\Q\R\S\T\U\V\W\X\Y\Z
%%   Lower-case    \a\b\c\d\e\f\g\h\i\j\k\l\m\n\o\p\q\r\s\t\u\v\w\x\y\z
%%   Digits        \0\1\2\3\4\5\6\7\8\9
%%   Exclamation   \!     Double quote  \"     Hash (number) \#
%%   Dollar        \$     Percent       \%     Ampersand     \&
%%   Acute accent  \'     Left paren    \(     Right paren   \)
%%   Asterisk      \*     Plus          \+     Comma         \,
%%   Minus         \-     Point         \.     Solidus       \/
%%   Colon         \:     Semicolon     \;     Less than     \<
%%   Equals        \=     Greater than  \>     Question mark \?
%%   Commercial at \@     Left bracket  \[     Backslash     \\
%%   Right bracket \]     Circumflex    \^     Underscore    \_
%%   Grave accent  \`     Left brace    \{     Vertical bar  \|
%%   Right brace   \}     Tilde         \~}
%%

% \DoNotIndex{\@ifundefined,\endinput,\chardef,\def,\mbox,\rightarrow}
% \DoNotIndex{\let,\ifmmode,\times,\else,\fi,\set,\kern,\raise,\hbox}
% \DoNotIndex{\relax,\sim,\newcount,\global,\gdef,\csname,\endcsname}
% \DoNotIndex{\ifcase,\font,\z@,\@ne,\tw@,\@ptsize,\or,\leftrightarrow}
% \DoNotIndex{\m@ne,\advance,\newif,\newcounter,\ifx}
% \DoNotIndex{\pagenumbering,\newskip,\raggedright,\raggedleft}
% \DoNotIndex{\centering,\@p,\vskip,\@arabic,\newbox,\begin,\newdimen}
% \DoNotIndex{\end,\newtoks,\dotfill,\closeout,\@m,\after}
% \DoNotIndex{\baselineskip,\begingroup,\endgroup,\bgroup,\egroup}
% \DoNotIndex{\bf,\box,\char,\ ,\errmessage,\exhyphenpenalty}
% \DoNotIndex{\expandafter,\fontdimen,\futurelet,\hangafter}
% \DoNotIndex{\hangindent,\hfil,\hrule,\hskip,\hss,\if,\ifdim}
% \DoNotIndex{\ifnum,\ifodd,\immediate,\index,\input,\jobname}
% \DoNotIndex{\lineskip,\llap,\loop,\lower,\multiply,\newindex}
% \DoNotIndex{\newwrite,\noexpand,\noindent,\openout,\ref}
% \DoNotIndex{\refstepcounter,\repeat,\rlap,\setbox,\space}
% \DoNotIndex{\textwidth,\the,\thr@@,\tolerance,\typeout,\unhbox}
% \DoNotIndex{\vbox,\vrule,\vtop,\write,\slash,\wd,\xdef,\medskip}
% \DoNotIndex{\par,\parindent,\printindex,\long,\hsize,\count}
% \DoNotIndex{\@ifnextchar,\@ifstar}

% \CodelineIndex
% \RecordChanges
% \OnlyDescription
% \MakeShortVerb{\=}

% \IndexPrologue{%
%    \section*{Befehlsregister}%
%    Nummern in {\it Kursivschrift} verweisen auf die Seite,
%    auf denen ein Befehl beschrieben ist. 
%    \underline{Unterstrichene} Zahlen sind die Zeilennummern im 
%    Sourcecode des Stylefiles, die die Befehlsdefinition enthalten.
%    Alle anderen Zahlen verweisen auf die Zeile des Sourcecodes, wo
%    die Befehle benutzt werden.
% }

% \def\bsl{\ifmmode\backslash\else$\backslash$\fi}
% \textwidth15cm
% \oddsidemargin4cm
% \textheight24cm
% \parindent0mm
% \parskip1.5ex plus .5ex minus .2ex
% \pagestyle{myheadings}
% \markright{Dokumentation zu {\tt diagram.sty}}
%
% \title{diagram.sty\\Ein \LaTeX{}-Style\\
%        zum Setzen von Schachdiagrammen}
% \author{Thomas Brand, Dortmund\\Stefan H"oning, Neuss}
% \date{Version: \fileversion\\\docdate}
% \begin{document}
% \pagenumbering{roman}
% \maketitle
% \begin{abstract}
% Das Style File {\tt diagram.sty} erm"oglicht das einfache Setzen
% von Schachdiagrammen. Es ist haupts"achlich f"ur die Anforderungen
% von {\sl Problemisten} gedacht. Das Schreiben von Schachpartien ist 
% prinzipiell m"oglich. Es empfiehlt sich jedoch daf"ur den {\tt 
% chess.sty} von {\it Piet Tutelaers} zu verwenden.
%
% Kurz zur Geschichte vom {\tt diagram.sty}: Elmar Bartel aus M"unchen hat vor 
% einigen Jahren {\tt Metafont} Zeichens"atze f"ur Schachfiguren 
% geschrieben, wobei er auch an M"archenfiguren (also etwa das Drehen 
% von Steinen) gedacht hat. Dieser Zeichensatz wird seither zusammen mit 
% {\TeX}-Include-Files zum Setzen der {\sl Problemkiste} genutzt. Thomas Brand 
% setzte die damals entstandenen {\TeX}-Macros in einen {\LaTeX}-Style 
% um.
%
% Inzwischen ist auf der einen Seite von Elmar Bartel ein weiterer 
% Zeichensatz entworfen worden, der in Zukunft bei der Erstellung der 
% Diagramme in {\sl feenschach} Verwendung finden wird. Andererseits 
% wurden die {\TeX}-Include-Files sowie auch der {\LaTeX}-Style 
% weiterentwickelt, um bestimmte Bed"urfnisse --- insbesondere 
% Anforderungen bei der Erstellung von B"uchern --- zu erf"ullen.
%
% In der vorliegenden Version des {\tt diagram.sty} lassen sich 
% verschiedene Informationen zu einem Diagramm sehr detailliert erfassen, 
% da f"ur viele Diagrammkomponenten eigene Befehle vorhanden sind.  
% Diese Tatsache erm"oglicht einerseits, da"s Aufgaben, die einmal f"ur 
% den Druck einer Zeitschrift oder eines Buches erfa"st wurden, 
% anschlie"send in eine Datenbank "ubernommen werden k"onnen. 
% Andererseits l"a"st sich die Gestaltung eines Diagramms durch eine 
% Anpassung der Style-Datei erzielen, ohne manuelle "Anderungen an den
% einzelnen Diagrammen vornehmen zu m"ussen.
% \end{abstract}
%
% \newpage
% \tableofcontents
% \newpage
% \pagenumbering{arabic}
% \section{Das Setzen von Diagrammen}
%
% \subsection{Ein einf"uhrendes Beispiel}
% Betrachten wir einmal die folgenden beiden Diagramme einschlie"slich
% der L"osung (Hier geht es weniger um den problemschachlichen Inhalt,
% sondern um die Frage: {\sl Wie werden Diagramme gesetzt?})\par\bigskip
%
% \begin{diagram}
%  \label{BSP1}
%  \author{Brand, Thomas}
%  \source{Problemkiste} \year{1992}
%  \dedic{Elmar Bartel gew.}
%  \pieces{wKd1, wBe2, sKh8, sBe4, sTa4}
%  \stip{h\#7}
%  \sol{1.Ta3 Kc2!, 2.Tf3 e\x f3, 3.e3 f4, 4.e2 f5, 5.e1T f6, 
%       6.Th1! (Te7?) f7, 7.Th7 f8D\#}
% \end{diagram}
% \hfill
% \begin{diagram}
%  \label{BSP2}
%  \author{Brand, Thomas}
%  \source{Problemkiste} \year{1992}
%  \pieces{wKa4, wLb5, wSh3, sKb7, sBh4}
%  \stip{h\#5}
%  \sol{1.Ka8 Sg1, 2.h3 Ka5, 3.h2 Kb6, 4.h\x g1L+ Kc7, 5.La7 Lc6\#}
% \end{diagram}
% \par\bigskip\putsol\par\bigskip
%
% Hierzu wurde zum =\documentstyle= die Option {\tt diagram} angegeben,
% d.h.\ die erste Zeile in dieser Dokumentation lautet
% \begin{verbatim}
% \documentstyle[german,diagram]{article}
% \end{verbatim}
% Im {\tt diagram} Style ist nun eine Umgebung namens {\tt diagram}
% definiert, innerhalb derer man Diagramme setzen kann. F"ur das
% Beispiel oben sah die Eingabe nun wie folgt aus:
%%
% \begin{verbatim}
% \begin{diagram}
%  \author{Brand, Thomas}
%  \source{Problemkiste} \year{1992}
%  \dedic{Elmar Bartel gew.}
%  \pieces{wKd1, wBe2, sKh8, sBe4, sTa4}
%  \stip{h\#7}
%  \sol{1.Ta3 Kc2!, 2.Tf3 e\x f3, 3.e3 f4, 4.e2 f5, 5.e1T f6, 
%       6.Th1! (Te7?) f7, 7.Th7 f8D\#}
% \end{diagram}
%%
% \hfill
%%
% \begin{diagram}
%  \author{Brand, Thomas}
%  \source{Problemkiste} \year{1992}
%  \pieces{wKa4, wLb5, wSh3, sKb7, sBh4}
%  \stip{h\#5}
%  \sol{1.Ka8 Sg1, 2.h3 Ka5, 3.h2 Kb6, 4.h\x g1L+ Kc7, 5.La7 Lc6\#}
% \end{diagram}
% \par\bigskip
% \putsol
% \par\bigskip
% \end{verbatim}
%
% \DescribeEnv{diagram}
% Die Angaben zu jedem Diagramm sind in die Befehle 
% =\begin{diagram}= und =\end{diagram}= einzuschlie"sen. 
% Innerhalb dieser Umgebung sind dann die einzelnen Elemente anzugeben, 
% die im Diagramm bzw.\ der L"osung erscheinen sollen. Im Beispiel sind 
% das: der Name des Autors, die Quelle, das Erscheinungsjahr der Quelle, 
% eine Widmung (nur in \ref{BSP1}), die Forderung und die L"osung.
%
% Die Autoren werden dabei in der Form {\it Name, Vorname} eingegeben, 
% erscheinen aber "uber dem Diagramm als {\it Vorname Name}. Die Eingabe 
% in der Form {\it Name, Vorname} ist notwendig, um bei der Erstellung 
% von Registern f"ur B"ucher oder Artikel, die Autoren nach dem Namen 
% und nicht nach dem Vornamen sortieren zu k"onnen.
%
% Die L"osungen werden nicht direkt mit ausgegeben, sondern zun"achst in 
% einer Datei gesammelt. Mittels des Befehls =\putsol= k"onnen 
% dann alle bisher erfa"sten L"osungen in den Text eingef"ugt werden.
%
% Der folgende Abschnitt gibt nun Auskunft "uber die verschiedenen 
% Elemente, die bei einem Diagramm angegeben werden k"onnen.
%
% \subsection{Die einzelnen Elemente eines Diagramms}
% \label{elements}
% Zun"achst einmal gibt es verschiedene parameterlose Schalter, mit 
% denen das Aussehen eines Diagramms ver"andert werden kann. Diese 
% Schalter sind insbesondere au"serhalb der {\tt diagram}-Umgebung 
% anzuwenden, um f"ur die folgenden Diagramme ein anderes Layout
% einzustellen. 
%
% \begin{itemize}
% \renewcommand{\labelitemii}{$\rightarrow$}
% \item Schalter, mit denen die Ausrichtung des Diagrammkopfes 
% eingestellt werden kann
% \begin{itemize}
% \item \DescribeMacro{\diagleft} 
% Setzt die Angaben im Diagrammkopf b"undig mit dem linken Rand 
% des Diagramms
% \item \DescribeMacro{\diagcenter}
% Setzt die Angaben im Diagrammkopf zentriert 
% "uber das Diagramm
% \item \DescribeMacro{\diagright}
% Setzt die Angaben im Diagrammkopf b"undig mit dem 
% rechten Rand des Diagramms
% \item \DescribeMacro{\widedias}
% Setzt die Breite des Diagrammkopfes auf die 
% eingestellte Seitenbreite. Der Diagrammkopf wird zentriert.
% Auf diese Weise werden Angaben "uber Quelle und l"angere 
% Autorennamen in der Regel nicht mehr umgebrochen.
% \end{itemize}
% \item Schalter zur Kontrolle von Diagrammelementen
% \begin{itemize}
% \item \DescribeMacro{\figcntfalse}
% Schaltet die Darstellung der automatischen 
% Figurenz"ahlung aus.
% \item \DescribeMacro{\figcnttrue}
% Schaltet die Darstellung der Figurenz"ahlung ein
% \item \DescribeMacro{\nodiagnumbering}
% Schaltet die automatische Numerierung der 
% Diagramme aus. Um die Numerierung der Diagramme wieder 
% einzuschalten, existiert der Befehl =\diagnum=, der 
% weiter unten erl"autert wird.
% \item \DescribeMacro{\nocomputer}
% Schaltet die Anzeige der Information "uber 
% Computerpr"ufung aus
% \end{itemize}
% \end{itemize}
%
% Sofern bei der Befehlsbeschreibung nichts anderes angegeben ist, 
% d"urfen die nachfolgenden Befehle nur innerhalb einer {\it 
% diagram}-Umgebung\footnote{oder {\it spacediagram}- bzw.\ {\it 
% stereodiagram}-Umgebung} verwendet werden. Eine globale Verwendung --- 
% d. h. nicht innerhalb einer {\it diagram}-Umgebung --- z.~B. von 
% =\gridchess= w"urde zur Folge haben, da"s alle dem Befehl folgenden 
% Diagramme mit einem Gitter versehen werden.
%
% Es folgen zun"achst noch ein paar Schalter, die Diagrammelemente 
% kontrollieren, die von Diagramm zu Diagramm verschieden sein 
% k"onnen.
%
% \begin{itemize}
% \renewcommand{\labelitemi}{$\rightarrow$}
% \item \DescribeMacro{\verticalcylinder}
% l"a"st vom "au"seren Rahmen die beiden 
% vertikalen Linien weg, um einen Vertikalzylinder zu stilisieren.
% \item \DescribeMacro{\horizontalzylinder}
% l"a"st vom "au"seren Rahmen die beiden 
% horizontalen Linien weg, um einen Horizontalzylinder zu stilisieren.
% \item \DescribeMacro{\noframe}
% l"a"st dem gesamten "au"seren Rahmen weg
% \item \DescribeMacro{\noinnerframe}
% verschiedentlich ist es notwendig, statt des 
% "au"seren Rahmens den inneren Rahmen wegzulassen (siehe 
% Diagramm~\ref{Buchstabenbrett}). Dieser Befehl kann nicht zusammen 
% sondern nur anstelle von =\noframe= verwendet werden.
% \item \DescribeMacro{\gridchess}
% druckt Gitterlinien in das Schachbrett (dies geht 
% auch mit dem Befehl =\stdgrid=)
% \item \DescribeMacro{\develop}
% Dieser Schalter unterst"utzt die 
% Bearbeitungsphase vor der eigentlichen Ver"of\-fentlichung 
% eines Artikels oder Buches. In der vorliegenden 
% Version des {\it diagram}-Style werden die mit =\label= 
% angegebenen Marken sowie die mit =\judgement= 
% angegebenen Beurteilungen ohne =\develop= nicht angezeigt.
% \end{itemize}
%
% Die folgenden Befehle ben"otigen jeweils einen Parameter, der die 
% entsprechende Angabe f"ur das Diagramm enth"alt.
%
% \begin{itemize}
% \renewcommand{\labelitemi}{$\rightarrow$}
% \item \DescribeMacro{\label}
% Dieser Befehl versieht die Probleme mit einer Marke, 
% auf die --- wie in {\LaTeX} "ublich --- mit =\ref= zugegriffen 
% werden kann. Statt der Seitennummer wird aber bei =\ref= die 
% Diagrammnummer angegeben. Wurde zuvor =\develop= angegeben, so 
% erscheint diese Marke auch am Problem, sowie bei den entsprechenden 
% Aufgabennummern in den Registern.
% \item \DescribeMacro{\diagnum}
% Dieser Befehl ben"otigt als Parameter eine Zahl! Mit ihm 
% wird die automatische Numerierung der Diagramme wieder 
% eingeschaltet. Taucht dieser Befehl innerhalb eines Diagramms auf, so 
% setzt er nur die Nummer f"ur dieses Diagramm, f"ur diesen Fall ist 
% aber der folgende Befehl eigentlich besser geeignet. Au"serhalb einer 
% {\it diagram}-Umgebung setzt der Befehl die Nummer, mit der die 
% nachfolgenden Diagramm beginnen.
% \item \DescribeMacro{\specialdiagnum}
% Dieser Befehl erm"oglicht es, auch andere als 
% die automatischen Diagrammnummern zu vergeben. Statt der automatischen 
% Diagrammnummer wird der angegebene Parameter verwendet. Dieser kann 
% auch Text enthalten. Der Z"ahlerstand der automatischen Numerierung 
% wird durch diesen Befehl nicht beeinflu"st. Bei der Erstellung von 
% Registern sowie bei Referenzen auf das Diagramm taucht dann auch die 
% hier angegebene "`Nummer"' auf.
% \item \DescribeMacro{\author}
% Name des oder der Autoren. Mehrere Autoren sind mit 
% "`;~"' zu trennen. Um bei der automatischen Erzeugung eines 
% Autorenregisters die Autoren nach ihren Nachnamen sortieren zu 
% k"onnen, sind die Autoren zwingend in der Form {\it Nachname, 
% Vorname\/} einzugeben. Siehe hierzu auch Abschnitt~\ref{NamenLayout}.
% \item \DescribeMacro{\city}
% Hier kann man die Wohnorte des/der Autoren angeben. 
% Mehrere Wohnorte sind auch hier mit "`;~"' voneinander zu trennen.
% \item \DescribeMacro{\sourcenr}
% Urdrucknummer der Aufgabe (falls vorhanden)
% \item \DescribeMacro{\source}
% Name der Quelle. In der Version~0.50 stand zu diesem 
% Zweck der Befehl =\orig= zur Verf"ugung. Hier soll nur der 
% eigentliche Name der Zeitschrift bzw.\ der Buchtitel auftauchen. Um die 
% Erzeugung eines Quellenindex sowie die automatische "Ubernahme der 
% Daten z.~B. durch eine Datenbank zu vereinfachen, wurden noch die 
% folgenden 6~Befehle eingef"uhrt. Soll ein Quellenregister erstellt 
% werden, so erscheint nur der bei =\source= angegebene 
% Parameter im Register.
% \item \DescribeMacro{\day}
% Tag des Erscheinens der Quelle --- z. B. f"ur 
% Tageszeitungen (wird nur benutzt, wenn auch Monat und Jahr 
% angegeben werden)
% \item \DescribeMacro{\month}
% Erscheinungsmonat der Quelle --- Hier d"urfen nur Zahlen 
% angegeben werden (s. u.).
% \item \DescribeMacro{\months}
% Erscheinungszeitraum der Quelle --- Hier sind zwei Zahlen 
% anzugeben, die mit "`--"' zu trennen sind.
% \item \DescribeMacro{\year}
% Erscheinungsjahr der Quelle
% \item \DescribeMacro{\issue}
% Jahrgang, Heftnummer oder sonstige Informationen, die eine 
% Zeitschrift genauer spezifizieren.
% \item \DescribeMacro{\pages}
% Seitennummern innerhalb eines Buches oder einer 
% Zeitschrift
% \item \DescribeMacro{\tournament}
% Turnier, zu dessen Anla"s das Problem 
% ver"offentlicht worden ist. (Als Erg"anzung zur Quellenangabe)
% \item \DescribeMacro{\award}
% \footnote{In der alten Version wurde f"ur die Angabe von 
% Preisen der Befehl {\bf\bsl price} verwendet.} Angabe einer Auszeichnung
% \item \DescribeMacro{\dedication}
% \footnote{Die Kurzform {\bf\bsl dedic} steht 
% nat"urlich weiterhin zur Verf"ugung.} Angabe einer Widmung
% \item \DescribeMacro{\stipulation}
% \footnote{gilt entsprechend f"ur {\bf\bsl stip}} Angabe der 
% Forderung (z.B.: Matt in 2) --- Hier ist darauf zu achten, da"s das 
% Zeichen \# als \bsl\# einzugeben ist.
% \item \DescribeMacro{\Co}
% hiermit kann man angeben, ob eine Aufgabe 
% Computergepr"uft ist oder nicht. Als Parameter sind "`+"' oder "`-"' 
% anzugeben.
% \item \DescribeMacro{\twins}
% Mehrlingsbildungen --- verschiedene 
% Mehrlingsbildungen sind durch "`; "' zu trennen. Jede Mehrlingsform 
% wird dabei in eine eigenen Zeile geschrieben. Bei bestimmten 
% Zwillingsbildungen (z.~B. 2.1...) ist man gewohnt, da"s sie mit der 
% Forderung in einer Zeile unter dem Diagramm erscheinen. Um dies zu 
% erzielen ist der Befehl mit einem "`*"' zu versehen: =\twins*{...=.
% \item \DescribeMacro{\condition}
% \footnote{gilt entsprechend f"ur {\bf\bsl cond}} 
% Angabe der Bedingung (z.B.: CIRCE). Manchmal will man auch eine
% Bedinung in einer Zeile mit der Forderung unter dem Diagramm stehen 
% haben. Analog zu =\twins*{...= gibt es hier =\condition*{...=. Die 
% "`*"'-Formen von =\twins= und =\condition= sollten nicht zusammen 
% verwendet werden.
% \item \DescribeMacro{\remark}
% \footnote{gilt entsprechend f"ur {\bf\bsl rem}} zus"atzliche 
% Bemerkungen, etc.
% \item \DescribeMacro{\pieces}
% Eingabe der Stellung: sie erfolgt in etwa so, wie man es
%      gewohnt ist; wichtig ist das Komma nach einem Stein bzw.\ einer
%      Gruppe gleichartiger Steine. Die Syntax lautet also:\\
%      =[Farbe][Stein]{Drehrichtung}[Feld(er)]=; z.B.:
%      {\tt wTa1h1} d"urfte klar sein; {\tt nKa4} ist ein neutraler K"onig;
%      die Drehrichtung unterscheidet
%      {\bf R U L}:\footnote{in der Version~0.50 wurden f"ur die 
%      Drehungen der Figuren die Kleinbuchstaben {\bf r u l} verwendet} 
%      nach rechts gedreht, kopfstehend, nach links gedreht.  Somit wird 
%      ein schwarzer Grash"upfer auf c7 als {\tt sDUc7} notiert.
% \item \DescribeMacro{\sol}
% Eingabe der L"osung --- Die L"osungstexte werden in 
% einer Datei aufgesammelt und mit dem Kommando =\putsol= 
% ausgegeben.
% \item \DescribeMacro{\comment}
% Kommentar zu dem Problem.
% \item \DescribeMacro{\judgement}
% Beurteilung des Problems. Dieser Eintrag erscheint in 
% der L"osung nur dann, wenn der Schalter =\develop= angegeben 
% worden ist.
% \item \DescribeMacro{\themes}
% Hier k"onnen Themen angegeben werden, die dann im Themenregister 
% erscheinen. Mehrere Themen sind durch "`;~"' zu trennen.
% \end{itemize}
%
% \subsubsection{Layout von Namen}
% \label{NamenLayout}
% Bei der Beschreibung des Befehls =\author= wurde bereits 
% angesprochen, da"s es f"ur eine sinnvolle Erstellung von Registern 
% notwendig ist, die einzelnen Autorennamen in der Form {\it Name, 
% Vorname} anzugeben. 
%
% \DescribeMacro{\dianamestyle}
% \DescribeMacro{\solnamestyle}
% Manchmal ist es nicht erw"unscht, im Diagramm oder bei der L"osung den 
% vollst"andigen Namen anzugeben. Zu diesem Zweck kann mit 
% =\dianamestyle= oder =\solnamestyle= eingestellt werden, wie der Name 
% erscheinen soll. Als Parameter k"onnen angegeben werden:
%
% \begin{description}
% \item[fullname] Schreibt Autoren in der Form {\it Vorname Name}. Dies 
% ist der Standardfall.
% \item[sirname] Schreibt nur den Nachnamen der Autoren.
% \item[short] Schreibt den abgek"urzten Vornamen und den Nachnamen. Die 
% Abk"urzung des Vornamens wird dabei folgenderma"sen bestimmt: 
% \begin{itemize}
% \item Es wird der erste Buchstabe des Vornamens verwendet.
% \item Enh"alt der Vorname einen oder mehrere Bindestriche, so werden 
% au"ser dem ersten Vornamen auch noch alle weiteren Vornamen, die einem 
% Bindestrich folgen, mit dem Anfangsbuchstaben abgek"urzt.
% \item Um von obigem Standard abzuweichen, kann man den Namen in der 
% Form {\it Name, Vorname/Abk"urzung} eingeben. So wird dann die 
% angegebene Abk"urzung und nicht die automatisch gebildete benutzt.
% \end{itemize}
% Hierzu drei Beispiele: 
% \begin{description}
% \item[Thomas] wird mit {\bf "`T."'} abgek"urzt. Hier empfiehlt es sich 
% bei =\author= den Vornamen mit {\it "`Thomas/Th."'} anzugeben. 
% \item[Hans-Peter] wird automatisch richtig {\bf "`H.-P."'} abgek"urzt. 
% \item[Werner Hans-Peter] w"urde falsch {\bf "`W.-P."'} abgek"urzt, in 
% einem solchen Fall sollte wieder mit "`/"' beim Vornamen die 
% gew"unschte Abk"urzung explizit angegeben werden!
% \end{description}
% \item[noname] Schreibt weder Nach- noch Vornamen
% \end{description}
%
%
% \subsubsection{Darstellung von Zahlenwerten}
% \DescribeMacro{\diagnumbering}
% Man kann --- genau wie bei =\pagenumbering= --- mit 
% =\diagnumbering= unterschiedlicher Schreibweisen festlegen {\tt 
% (arabic, Roman, roman, Alph, alph)}. Der Standardwert hierf"ur ist 
% =arabic=. Gleichzeitig wird die Numerierung der Diagramme mit 
% diesem Befehl eingeschaltet.
%
% \DescribeMacro{\setmonthstyle}
% Analog ist es m"oglich f"ur die Darstellung der mit =\month= 
% oder =\months= angegebenen Monate die Schreibweise durch den 
% Befehl =\setmonthstyle= festzulegen. Der Standardwert hierf"ur 
% ist =Roman=.
%
% \subsubsection{Auswahl von Schriftgr"o"se und Zeichensatz}
% \DescribeMacro{\diagramx}
% \DescribeMacro{\diagramxi}
% \DescribeMacro{\diagramxii}
% Die Gr"o"se des Diagramms ergibt sich aus der Typengr"o"se des 
% Dokuments (entsprechend dem Eintrag {\tt 11pt, 12pt} oder nichts f"ur 
% 10pt im Kopf des Dokuments), kann aber mit den Befehlen 
% =\diagramx=, =\diagramxi= und =\diagramxii= individuell 
% umgestellt werden.  (Dieses Dokument verwendet die Option {\tt 11pt}, 
% also implizit =\diagramxi=.)
%
% \DescribeMacro{\selectelchfont}
% Wie schon in der Einleitung erw"ahnt, existieren bisher zwei 
% verschiedene Zeichens"atze, die man f"ur die Darstellung der 
% Diagrammen nutzen kann. Man kann zwischen diesen beiden Zeiches"atzen 
% mit =\selectelchfont= umschalten, wobei einer der beiden folgenden 
% Parameter mit anzugeben ist:
%
% \begin{description}
% \item[pk] f"ur den Font, der in der {\it Problemkiste} verwendet wird
% \selectelchfont{pk}\hbox{\wK\wD\wT\wL\wS\wB\sK\sD\sT\sL\sS\sB}
% \item[fs] f"ur den Font, der in {\it feenschach} verwendet wird
% \selectelchfont{fs}\hbox{\wK\wD\wT\wL\wS\wB\sK\sD\sT\sL\sS\sB}
% \end{description}
%
% Welchen Font Sie f"ur sich selbst benutzen bleibt Ihnen "uberlassen. 
% Ich habe, da mir die Figuren etwas besser gefallen, als Standard den 
% {\it feenschach}-Font gesetzt.
%
% \subsection{Spezielle Schachbretter}
% \subsubsection{Andere Brettgr"o"sen}
% \DescribeEnv{diagram[]}
% Normalerweise werden 8x8 Bretter gedruckt. Bei M"archenaufgaben kommt 
% es aber auch schon einmal vor, da"s kleinere oder gr"o"sere Diagramme 
% ben"otigt werden. Zu diesem Zweck kann bei =\begin{diagram}= die 
% gew"unschte Gr"o"se der Diagramme angegeben werden. Dabei ist zuerst 
% die Anzahl der Linien und dann die Anzahl der Reihen anzugeben.
% \bigskip
%
% \begin{diagram}[10x11]
% \pieces{wKUi{11}, sKRj9}
% \end{diagram}
% \hfill
% \begin{minipage}[t]{8cm}
% Wird erzeugt durch:
%
% \begin{verbatim}
% \begin{diagram}[10x11]
% \pieces{wKUi{11}, sKRj9}
% \end{diagram}
% \end{verbatim}
% \end{minipage}
% \bigskip
%
% Figuren werden auf diese Bretter wie im 
% 8x8 Fall mittels =\pieces= gesetzt. Bei Feldern mit mehr als acht 
% Linien ist aber darauf zu achten, da"s die Spalte {\bf i} mitgez"ahlt 
% wird. Hat ein Brett mehr als 9 Reihen, so sind die Reihenangaben 
% bei =\pieces= (sowie bei anderen Befehlen, die Feldangaben 
% erfordern) in geschweifte Klammern \{ \} zu setzen.
%
% \subsubsection{Stereo- und Raumschach}
% \DescribeEnv{stereodiagram}
% \DescribeEnv{spacediagram}
% Weitere Brettformen, die von Zeit zu Zeit vorkommen, sind Stereo und 
% Raumschachbretter. Um diese Diagramme zu setzen, mu"s statt der {\it 
% diagram}-Umgebung die {\it stereodiagram}- bzw.\ {\it 
% spacediagram}-Umgebung gew"ahlt werden. 
%
% \begin{stereodiagram}
% \author{Jensch, Gerhard W.}
% \sourcenr{3104.}
% \source{feenschach}
% \year{1980}
% \award{Preis}
% \pieces{wKf3, wTf6d5A, wLe3, wSf4A, sKe5, sTc4D, sLc4C, sSc6, sBb6c4A}
% \stip{\#9}
% \end{stereodiagram}
% \hfill
% \begin{spacediagram}
% \author{Dawson, T. R.}
% \sourcenr{6595.}
% \source{Fairy Chess Review}
% \month{12}
% \year{1945}
% \pieces{wKc1A, wLe1A, sKa1A, sBa2Aa1Ba2Bd3Be4Bd2Ce2D}
% \stip{\#2}
% \end{spacediagram}
%
% Diese Diagramme wurden durch die folgende Eingabe erzeugt:
%
% \begin{verbatim}
% \begin{stereodiagram}
% \author{Jensch, Gerhard W.}
% \sourcenr{3104.}
% \source{feenschach}
% \year{1980}
% \award{Preis}
% \pieces{wKf3, wTf6d5A, wLe3, wSf4A, sKe5, sTc4D, sLc4C, sSc6, sBb6c4A}
% \stip{\#9}
% \end{stereodiagram}
% \hfill
% \begin{spacediagram}
% \author{Dawson, T. R.}
% \sourcenr{6595}.
% \source{Fairy Chess Review}
% \month{12}
% \year{1945}
% \pieces{wKc1A, wLe1A, sKa1A, sBa2Aa1Ba2Bd3Be4Bd2Ce2D}
% \stip{\#2}
% \end{spacediagram}
% \end{verbatim}
%
% Die einzige "Anderung gegen"uber den normalen Diagrammen ist 
% nat"urlich die Angabe der Steine. Wie man aber sieht, werden die 
% Felder ganz normal in der Art und Weise bezeichnet, wie es f"ur 
% Stereo bzw.\ Raumschach "ublich ist. 
%
% \DescribeMacro{\spacelayout}
% Gelegentlich mag es auch noch vorkommen, da"s man die Ebenen nicht 
% "ubereinander, sondern nebeneinander anordnen will. Zwischen den beiden 
% M"oglichkeiten, die Ebenen anzuordnen kann man mit =\spacelayout= 
% umschalten. Als Parameter sind anzugeben:
%
% \begin{description}
% \item[vertical] f"ur die vertikale Anordnung
% \item[horizontal] f"ur die horizontale Anordnung
% \end{description}
%
% \DescribeEnv{spacediagram[]}
% Auch beim Raumschach ist es m"oglich, analog zum zweidimensionalen 
% Fall, die Gr"o"se der einzelnen Dimensionen anzugeben. Die 
% Verwendung des Befehls =\spacelayout= sowie die Gr"o"senangabe 
% zeigt folgendes Beispiel:
%
% \noindent\begin{spacediagram}[4x2x3]
% \spacelayout{horizontal}
% \end{spacediagram}
% \hfill%
% \hbox{\vtop{%
% \hsize6cm
% Wird erzeugt durch:
%
% \begin{verbatim}
% \begin{spacediagram}[4x2x3]
% \spacelayout{horizontal}
% \end{spacediagram}
% \end{verbatim}
% }}
%
% \subsubsection{Zylinderschach und Rahmenlose Bretter}
%
% \DescribeMacro{\verticalcylinder}
% \DescribeMacro{\horizontalcylinder}
% \DescribeMacro{\noframe}
% \DescribeMacro{\noinnerframe}
% Um ein Zylinderschachbrett zu stilisieren, l"a"st man "ublicherweise 
% die entsprechenden Teile des Rahmens weg. Mit =\verticalcylinder= 
% werden die horizontalen Linien des "au"seren Rahmens entfernt, mit 
% =\horizontalcylinder= die vertikalen Linien. Den gesamten "au"seren 
% Rahmen l"a"st man mit dem Befehl =\noframe= weg. Bei 
% zweidimensionalen Brettern wird standardm"a"sig der "au"sere Rahmen 
% weggelassen. Will man stattdessen einmal den inneren Rahmen entfernt 
% haben, so geschieht das mit =\noinnerframe=.
%
% Bei Raumschach und Stereoschachbrettern werden bei den Befehlen 
% =horizontalcylinder=, \break=\verticalcylinder= und 
% =\noframe= standardm"a"sig die Linien des inneren Rahmens 
% weggelassen.
%
% \subsubsection{Einzelne Felder weglassen}
% \DescribeMacro{\nofields}
% \DescribeMacro{\nosquares}
% Um einzelne Felder wegzulassen gibt es die Befehle =\nofields= bzw.\ 
% =\nosquares=.  Als Parameter mu"s eine Liste aller Felder angegeben 
% werden, die weggelassen werden soll. Die einzelnen Felder sind durch 
% "',~"' voneinander zu trennen. Dieser Befehl funktioniert nat"urlich 
% auch bei Stereo- und Raumschachbrettern, wobei die Felder in diesen 
% F"allen genauso anzugeben sind wie beim Befehl =\pieces=.
%
% \subsubsection{Einzelne Felder umrahmen}
% \DescribeMacro{\fieldframe}
% Um einzelne Felder zu markieren kann man diese mit einem Rahmen 
% versehen. Daf"ur steht der Befehl =\fieldframe= zur Verf"ugung. 
% Als Parameter ist wie bei =\nofields= eine Liste alle Felder 
% anzugeben, die umrahmt werden sollen.
%
% \subsubsection{Sonstige Linien innerhalb der Diagramme}
% \DescribeMacro{\gridlines}
% F"ur eine noch allgemeinere Form von Linien innerhalb von Diagrammen, 
% gibt es den Befehl =\gridlines=. Hiermit ist es m"oglich, eine 
% Folge von horizontalen und vertikalen Linien im Diagramm zu erg"anzen.
% Die einzelnen Linien sind mit "',~"' voneinander zu trennen. Die 
% Syntax f"ur eine Linie lautet: 
%
% [Ebene](v oder h)(x-Koordinate)(y-Koordinate)(L"ange in Feldern)
%
% Die Ebene ist nat"urlich nur anzugeben, wenn man ein 
% Raumschach-Diagramm hat, oder sich im Turm eines Stereobrettes 
% befindet. F"ur eine vertikale Linie, die von der linken unteren Ecke 
% von c2 zur linken oberen Ecke von c8 geht, lautet der Befehl also:
% =\gridlines{v217}=. Bei den Koordinaten und L"angenangaben ist 
% wieder darauf zu achten, da"s Werte gr"o"ser als 9 in \{ \} gesetzt 
% werden.
%
% Zusammen mit dem Weglassen von Feldern, lassen sich also auch
% problemlos sogenannte "`Buchstabenbretter"' entwerfen:
%
% \begin{diagram}[9x7]
% \label{Buchstabenbrett}
% \noinnerframe
% \nofields{a2, b2, c2, a3, b3, c3, b5, c5, d5, b6, c6, d6, %
%  e1, e2, e3, e4, e5, e6, e7, %
%  g1, h1, h2, h2, g3, h3, g5, h5, g6, h6, g7, h7}
% \gridlines{h004, h013, h033, h143, h163, h074, %
%  v001, v034, v142, v312, v404, v461, %
%  h501, h571, h632, h642, h801, h871, %
%  v507, v603, v643, v803, v843, v907}
% \end{diagram}
% \hfill
% \begin{minipage}[t]{10cm}
% \begin{verbatim}
% \begin{diagram}[9x7]
% \noinnerframe
% \nofields{a2, b2, c2, a3, b3, c3, %
%  b5, c5, d5, b6, c6, d6, %
%  e1, e2, e3, e4, e5, e6, e7, %
%  g1, h1, h2, h2, g3, h3, g5, h5, g6, h6, g7, h7}
% \gridlines{h004, h013, h033, h143, h163, h074, %
%  v001, v034, v142, v312, v404, v461, %
%  h501, h571, h632, h642, h801, h871, %
%  v507, v603, v643, v803, v843, v907}
% \end{diagram}
% \end{verbatim}
% \end{minipage}
%
% \subsection{Andere Umgebungen}
%
% \subsubsection{Die {\it figurine}-Umgebung}
% \DescribeEnv{figurine}
% Anstelle der {\it diagram, stereodiagram} oder {\it spacediagram} kann 
% man auch die {\it figurine}-Umgebung verwenden, die statt eines 
% Diagramms die Stellung in figuriner Notation ausgibt. Befehle wie 
% =\nofields=, =\gridlines= und =\noframe= k"onnen bei 
% figuriner Notation nat"urlich nicht mehr ber"ucksichtigt werden.
%
% \subsection{Verschiedenes}
%
% \subsubsection{Figurensymbole im Text}
% \label{piecesymbols}
% Manchmal m"ochte man auch in normalem Text, au"serhalb der Diagramme,
% Figurensymbole verwenden, etwa zur Beschreibung der 
% {\sl Viele--V"ater--Stellung}; das sieht dann so aus:
% \wK c8 \sK a8 \wB b6 \sB a7. Erzeugt wurden die Zeichen wie folgt:
% =\wK c8 \sK a8 \wB b6 \sB a7=; also ganz nat"urlich.
% Au"serdem stehen zur Verf"ugung:
%
% \begin{description}
% \item[\swL] \DescribeMacro{\swL} ein wei"ser L"aufer auf schwarzem 
% Feld
% \item[\ssL] \DescribeMacro{\ssL} ein schwarzer L"aufer auf schwarzem 
% Feld
% \item[\wNr] \DescribeMacro{\wNr} ein wei"ser Nachtreiter
% \item[\sNr] \DescribeMacro{\sNr} ein schwarzer Nachtreiter
% \item[\wGh] \DescribeMacro{\wGh} ein wei"ser Grash"upfer
% \item[\sGh] \DescribeMacro{\sGh} ein schwarzer Grash"upfer
% \item[\Imi] \DescribeMacro{\Imi} ein Imitator
% \end{description}
%
% \subsubsection{Andere h"aufig ben"otigte Symbole}
% \label{otherSymbols}
% Weitere Zeichen, die insbesondere bei Zwillingsbildungen bzw.\ bei der 
% Notation von L"osungen gebraucht werden, sind:
%
% \begin{description}
% \item[\set] \DescribeMacro{\set} f"ur Satzspiel
% \item[\ra] \DescribeMacro{\ra} f"ur einen Rechtspfeil
% \item[\lra] \DescribeMacro{\lra} f"ur einen Doppelpfeil
% \item[\OO] \DescribeMacro{\OO} f"ur kleine Rochade
% \item[\OOO] \DescribeMacro{\OOO} f"ur gro"se Rochade
% \item[\x] \DescribeMacro{\x} f"ur Schlagen
% \item[\any] \DescribeMacro{\any} f"ur beliebige Z"uge
% \end{description}
%
% {\sl Anmerkung:\/} Hat man die Diagramm--Gr"o"se umgestellt, wird
% automatisch die Schriftgr"o"se der Figurensymbole mit umgestellt.
% Verwenden Sie dann den Befehl =\defaultelchfont=, um die 
% Figurensymbole der aktuellen Schriftgr"o"se anzupassen!
%
% \subsubsection{Internationalisierung}
% Dieser Abschnitt ist nur dann relevant, wenn es gew"unscht wird, die 
% Bezeichnungen der Figuren einmal mit anderen als den deutschen 
% Abk"urzungen durchzuf"uhren.
%
% Im deutschen werden, wie bereits in den Abschnitten~\ref{elements} und 
% \ref{piecesymbols} erl"autert, die Farben durch {\bf w, s} oder {\bf 
% n}, die Figuren durch {\bf K, D, T, L, S} und {\bf B} sowie 
% m"ogliche Drehungen durch {\bf L, R} und {\bf U} angegeben.
%
% \DescribeMacro{\DefinePieces}
% Wenn Texte mit fertig gesetzten Diagrammen von ausl"andischen 
% Autoren an Problemschachzeitschriften eingereicht werden, so m"u"ste 
% man normalerweise alle Figurenbezeichnungen anpassen. Um dies zu 
% verhindern, wurde der Befehl =\DefinePieces= entworfen, der es 
% erm"oglicht, auf eine einfache Art und Weise, die verwendeten 
% Bezeichnungen f"ur Farbe, Figurentyp und Drehung neu zu definieren.
%
% Der Befehl ben"otigt drei Parameter, die im folgenden Beschrieben 
% sind.
%
% \begin{enumerate}
% \item die Buchstaben f"ur die Farbauswahl in der Reihenfolge
% {\it Wei"s, Schwarz, Neutral}.
% \item die Buchstaben f"ur die Auswahl des Figurentyps in der 
% Reihenfolge {\it K"onig, Dame, Turm, L"aufer, Springer, Bauer}.
% Als Buchstabe darf hier das Gro"se {\bf C} nicht verwendet werden,
% da dieses f"ur Kreise benutzt wird.
% \item die Buchstaben f"ur die Auswahl einer optionalen Drehung
% einer Figur in der Reihenfolge {\it Linksdrehung, Rechtsdrehung, 
% Kopfstehend}. Diese Buchstaben m"ussen Gro"sbuchstaben sein, damit 
% sie von der Angabe einer Linie bei der Spezifikation eines Feldes 
% unterschieden werden k"onnen. Au"serdem k"onnte man "uberschneidungen
% beim den Befehlen f"ur Nachtreiter und Grash"upfer erhalten.
% \end{enumerate}
%
% F"ur alle drei Buchstabengruppen gilt nat"urlich, da"s die einzelnen
% Gruppen paarweise verschiedene Elemente enthalten m"ussen.
%
% Der Befehl =\DefinePieces= ist immer bis zu seinem n"achsten 
% Auftreten wirksam. Die Wirksamkeit bezieht sich sowohl auf die 
% Angabe einer Stellung innerhalb des Befehls =\pieces=, als auch 
% auf die Angabe von Figurensymbolen im Text. Hierzu ein kurzes 
% Beispiel:
% \begin{verbatim}
% \DefinePieces{wbn}{KQRBNP}{LRU}
% \wDU\bKR
% \end{verbatim}
% erzeugt: \wDU\sKR!
%
% Nat"urlich werden bei der Umstellung mit =\DefinePieces= auch die 
% die Befehle f"ur L"aufer auf schwarzen Feldern, Nachtreiter und 
% Grash"upfer an die neu eingestellten Farben angepa"st.
%
% \subsubsection{Referenzen und Register}
% \DescribeMacro{\label}
% In l"angeren Artikeln und innerhalb von B"uchern kommt es h"aufiger
% vor, da"s man sich auf andere Textstellen, insbesondere auf
% Abbildungen bezieht. Zu diesem Zweck stehen in {\LaTeX} die Befehle
% =\label= und =\ref= zur Verf"ugung, deren Funktionsweise hier nicht
% weiter erl"autert werden soll.
%
% Innerhalb der {\it diagram}-Umgebung erh"alt der =\label= Befehl 
% eine besondere Bedeutung. Einerseits wird bei Textbez"ugen mittels
% des Befehls =\ref= die Diagrammnummer des entsprechenden Diagramms
% in den Text eingef"ugt. Andererseits besteht die M"oglichkeit, durch
% Setzen des Schalters =\develop= die Markierungen im Text anzuzeigen. 
%
% Als spezielle Form einer Sammlung von Referenzen kann man ein
% Register ansehen. F"ur die Erzeugung von Registern wird im
% {\it diagram}-Style zus"atzlich der {\it index}-Style ben"otigt, mit
% dem allgemeine Register erstellt werden k"onnen. Daher ist bei den 
% Optionen zum =\documentstyle= au"ser {\it diagram} auch {\it index} 
% anzugeben. Der {\it 
% diagram}-Style besitzt bereits Befehle, die die Erzeugung von
% Autoren-, Quellen- und Themenregister unterst"utzen. Diese sind 
% im folgenden beschrieben.
%
% \DescribeMacro{\makeaindex}
% \DescribeMacro{\authorindex}
% Mit =\makeaindex= in der Pr"aambel legen Sie fest, da"s eine 
% Autorenindex--Datei angelegt wird, und mit =\authorindex= 
% f"ugen Sie den Autorenindex an der gew"unschten Stelle im Dokument 
% ein. Alle mit =\author= innerhalb der {\it diagram}-Umgebung
% eingegebenen Autoren werden 
% automatisch in das Autorenregister eingetragen. Statt der Seitennummern, 
% die normalerweise bei {\LaTeX} in den Index "ubernommen werden, werden 
% hier --- wie bei den Referenzen --- die Diagrammnummern in das
% Register eingetragen.
%
% Zur Weiterbearbeitung der erzeugten Datei, steht "ublicherweise das 
% Programm {\tt makeindex}\footnote{unter MS-DOS: {\tt makeindx.exe}} 
% zur Verf"ugung. Der Aufruf hierzu lautet f"ur den Autorenindex: 
%
% \begin{verbatim}
% makeindex -o <dateiname>.and <dateiname>.adx
% \end{verbatim}
%
% wobei Sie f"ur =<dateiname>= den Namen Ihrer {\TeX}-Datei 
% einsetzen m"ussen. Nach einem weiteren {\LaTeX}-Durchlauf erhalten Sie 
% dann die entsprechenden Register in Ihrem Dokument.
%
% \DescribeMacro{\makesindex}
% \DescribeMacro{\maketindex}
% \DescribeMacro{\sourceindex}
% \DescribeMacro{\themeindex}
% Analog k"onnen Quellen und Themenregister erzeugt werden.
% Dies geschieht durch die Angabe von 
% =\makesindex= --- f"ur das Quellenregister --- bzw.\ 
% =\maketindex= --- f"ur das Themenregister --- in der Pr"aambel 
% des {\TeX}-Sources. Mit =\sourceindex= bzw.\ =\themeindex= die 
% entsprechenden Register dann in den Text eingef"ugt.
% Der {\it makeindex} Aufruf f"ur das Quellenregister lautet: 
%
% \begin{verbatim}
% makeindex -o <dateiname>.snd <dateiname>.sdx
% \end{verbatim}
%
% bzw.
%
% \begin{verbatim}
% makeindex -o <dateiname>.tnd <dateiname>.tdx
% \end{verbatim}
%
% f"ur das Themenregister.
%
% \subsubsection{Bearbeitungshilfen}
% \DescribeMacro{\develop}
% Wie bei der Beschreibung der Befehle bereits angesprochen, gibt es 
% f"ur die Bearbeitungsphase den Befehl =\develop=. Dieser Schalter 
% zeigt dann bestimmte Informationen im Dokument mit an. Die folgenden 
% Informationen werden angezeigt:
%
% \begin{itemize}
% \item Die Diagramme, bei denen mit =\label= eine Marke gesetzt
% wurde, werden an der linken oberen Ecke mit dieser Marke versehen. 
% \item Diese Marken tauchen ebenfalls in der L"osung, sowie in 
% bei allen Eintr"agen der jeweiligen Diagrammnummern in den Registern 
% auf.
% \item Die Angaben, die bei =\judgement= angegeben wurden, werden 
% bei der L"osung mit angegeben.
% \end{itemize}
%
%
% \StopEventually{\PrintIndex\PrintChanges\end{document}}
%
%
% \section{Implementierung des {\it diagram}-Style}
% In diesem Abschnitt wird die Implementierung des {\it diagram}-Style 
% beschrieben. Wie es f"ur Style-Dateien "ublich ist, wurden
% Variablennamen und Makrobefehle englisch bezeichnet.
%
% Der Sourcecode des {\it diagram}-Style unterteilt sich wie folgt:
%
% \begin{itemize}
% \item Deklaration aller notwendigen Variablen (Z"ahler, Boxen, 
%   Tokenregister)
% \item Definition der Befehle, die dem Benutzer im Allgemeinen, 
%   insbesondere aber zur Spezifikation der Diagrammelemente zur 
%   Verf"ugung stehen.
% \item Definition der Befehle, die das Layout von Diagrammen und
%   L"osungen spezifizieren.
% \item Definition aller Hilfsfunktionen
% \end{itemize}
%
% Zun"achst mu"s daf"ur gesorgt werden, da"s die Datei nicht mehrfach 
% gelesen wird. Anschlie"send identifiziert sich der {\it 
% diagram}-Style.
%    \begin{macrocode}
%<*style>
\@ifundefined{c@board@nr}{}{\endinput}
\typeout{Style-option 'diagram' \fileversion\space <\filedate> (tb/sh)}
%    \end{macrocode}
%
% \subsection{Deklaration aller notwendigen Konstanten und Variablen}
% Die folgenden Definitionen vereinheitlichen die Benutzung 
% verschiedener Konstanten innerhalb des {\it diagram}-Style.
%    \begin{macrocode}
\chardef\f@ur=4
\chardef\@ight=8
%    \end{macrocode}
%
% Wir ben"otigen ein paar Konstanten und Variablen um Fonttyp und
% Fontgr"o"se f"ur die in den Diagrammen verwendeten Fonts zu
% bestimmen.
% 
%    \begin{macrocode}
\newcount\elchfont
 
\chardef\@pkelch=0
\chardef\@fselch=1

\newcount\dia@type

\newif\if@vframe\@vframetrue
\newif\if@hframe\@hframetrue
\newif\if@leaveOuter\@leaveOutertrue

\newif\if@shortform

\newif\ifspace@vertical

\newif\ifdi@no
%    \end{macrocode}
%
% Z"ahler f"ur die Numerierung der Diagramme.
%    \begin{macrocode}
\newcounter{board@nr}
%    \end{macrocode}
%
% Wir ben"otigen verschiedene Schalter und Variablen, um das 
% Diagrammlayout festzulegen.
%    \begin{macrocode}
\newif\iffigcnt
%    \end{macrocode}
%
%    \begin{macrocode}
\newcount\r@w
\newcount\lin@
\newcount\pl@ne
\newcount\current@plane

\newcount\w@cnt
\newcount\b@cnt
\newcount\n@cnt

\newcount\help@a
\newcount\help@b

\newbox\dia@box
\newbox\@cnt@box
\newbox\@stip@box

\newcount\brd@ff

\newdimen\dia@lineskip

\newdimen\board@width
\newdimen\bd@width
\newdimen\head@width
\newdimen\sq@width

\newdimen\grid@width
\newdimen\inner@frame
\newdimen\outer@frame
\newdimen\space@frame
\newdimen\v@frame@dist
\newdimen\h@frame@dist
\newdimen\space@frame@dist
\newdimen\v@space@dist
\newdimen\h@space@dist

\newbox\sq@box
\newbox\plane@box

\newbox\scale@box
\newdimen\scale@width
\newcount\current@scale
%    \end{macrocode}
%
% Im folgenden werden die Variablen --- "uberwiegend Tokenregister
% --- definiert, die die verschiedenen Komponenten des Diagramms 
% speichern, deklariert und initialisiert. So kann man auf weitere
% Initialisierungen innerhalb von =\...diagram= verzichten.
%    \begin{macrocode}
\newtoks\label@tk\label@tk={\relax}
\newtoks\sol@tk\sol@tk={\relax}
\newtoks\number@tk\number@tk={\relax}
\newtoks\aut@tk\aut@tk={\relax}
\newtoks\city@tk\city@tk={\relax}
\newtoks\sourcenr@tk\sourcenr@tk={\relax}
\newtoks\source@tk\source@tk={\relax}
\newtoks\day@tk\day@tk={\relax}
\newcount\from@month\from@month=\z@
\newcount\to@month\to@month=\z@
\newtoks\year@tk\year@tk={\relax}
\newtoks\issue@tk\issue@tk={\relax}
\newtoks\pages@tk\pages@tk={\relax}
\newtoks\tournament@tk\tournament@tk={\relax}
\newtoks\award@tk\award@tk={\relax}
\newtoks\after@tk\after@tk={\relax}
\newtoks\version@tk\version@tk={\relax}
\newtoks\correction@tk\correction@tk={\relax}
\newtoks\dedic@tk\dedic@tk={\relax}
\newtoks\theme@tk\theme@tk={\relax}
\newtoks\twins@tk\twins@tk={\relax}
\newtoks\judgement@tk\judgement@tk={\relax}
\newtoks\comment@tk\comment@tk={\relax}
\newtoks\computer@tk\computer@tk={-}
\newtoks\nofields@tk\nofields@tk={\relax}
\newtoks\fieldframe@tk\fieldframe@tk={\relax}
\newtoks\gridlines@tk\gridlines@tk={\relax}
\newtoks\pieces@tk\pieces@tk={\relax}
\newtoks\stipulation@tk\stipulation@tk={\relax}
\newtoks\condition@tk\condition@tk={\relax}
\newtoks\remark@tk\remark@tk={\relax}
%    \end{macrocode}
%
% Au"serdem werden ein paar Schalter ben"otigt, die anzeigen, ob
% eine bestimmte Diagrammkomponente durch den Benutzer gesetzt
% worden ist oder nicht. Diese werden ebenfalls hier initialisiert.
%    \begin{macrocode}
\newif\if@label\@labelfalse
\newif\if@number\@numberfalse
\newif\ifauth@r\auth@rfalse
\newif\if@city\@cityfalse
\newif\if@sourcenr\@sourcenrfalse
\newif\if@source\@sourcefalse
\newif\if@day\@dayfalse
\newif\if@year\@yearfalse
\newif\if@issue\@issuefalse
\newif\if@pages\@pagesfalse
\newif\if@tournament\@tournamentfalse
\newif\if@award\@awardfalse
\newif\if@after\@afterfalse
\newif\if@version\@versionfalse
\newif\if@correction\@correctionfalse
\newif\if@dedication\@dedicationfalse
\newif\if@twins\@twinsfalse
\newif\if@theme\@themefalse
\newif\if@computer\@computerfalse
\newif\if@judgement\@judgementfalse
\newif\if@comment\@commentfalse
\newif\if@pieces\@piecesfalse
\newif\if@nofields\@nofieldsfalse
\newif\if@gridlines\@gridlinesfalse
\newif\if@fieldframe\@fieldframefalse
\newif\if@stdgrid\@stdgridfalse
\newif\if@show@computer\@show@computertrue
\newif\if@stipulation\@stipulationfalse
\newif\if@condition\@conditionfalse
\newif\if@remark\@remarkfalse
%    \end{macrocode}
%
% Dies ist der Filepointer, der benutzt wird, um die
% L"osungen in einer Datei zu sichern.
%    \begin{macrocode}
\newwrite\s@lfd
%    \end{macrocode}
%
% Der folgende Schalter wird benutzt, wenn Diagramme zentriert
% auf einer Seite erscheinen sollen.
%    \begin{macrocode}
\newif\if@widedias\@widediasfalse
%    \end{macrocode}
%
% Der Schalter =\ifx@twins= bestimmt, ob die erste Zwillingsbildung in 
% eine Zeile mit der Forderung geschrieben werden soll.
%    \begin{macrocode}
\newif\ifx@twins\x@twinsfalse
%    \end{macrocode}
%
% Der Schalter =\ifx@cond= bestimmt, ob die erste Bedinung in einer 
% Zeile mit der Forderung geschrieben werden soll.
%    \begin{macrocode}
\newif\ifx@cond\x@condfalse
%    \end{macrocode}
%
% Der folgende Schalter bestimmt, ob ein Imitator bei neutralen
% Figuren mitgez"ahlt werden soll oder nicht.
%    \begin{macrocode}
\newif\ifimitator\imitatorfalse
%    \end{macrocode}
%
%    \begin{macrocode}
\newif\ifnormal@names\normal@namesfalse
%    \end{macrocode}
%
%    \begin{macrocode}
\newif\ifs@lu
%    \end{macrocode}
%
%    \begin{macrocode}
\newif\if@develop\@developfalse
%    \end{macrocode}
%
%    \begin{macrocode}
\newif\if@notfirst
%    \end{macrocode}
%
% Die folgenden Z"ahler werden f"ur das Setzen des Diagramms
% ben"otigt.
%    \begin{macrocode}
\newcount\@lines
\newcount\@rows
\newcount\lines@max
\newcount\rows@max
\newcount\planes@max
%    \end{macrocode}
%
% Die folgenden beiden Schalter werden benutzt um festzuhalten, ob
% man sich beim innerhalb einer {\it stereodiagram}- oder {\it 
% spacediagram}-Umgebung befindet.
%    \begin{macrocode}
\newif\if@stereo\@stereofalse
\newif\if@space\@spacefalse
%    \end{macrocode}
%
% Die folgenden Schalter werden benutzt, um anzuzeigen, ob 
% Register erzeugt werden sollen oder nicht.
%    \begin{macrocode}
\newif\if@aindex\@aindexfalse
\newif\if@sindex\@sindexfalse
\newif\if@tindex\@tindexfalse
%    \end{macrocode}
%
% Um beim internen =\label= eine *-Form zu implementieren, wird
% ein Schalter ben"otigt.
%    \begin{macrocode}
\newif\ifds@label
%    \end{macrocode}
%
% \subsection{Definition der Umgebungen}
% In diesem Abschnitt sind die Umgebungen {\it diagram}, {\it 
% stereodiagram}, {\it spacediagram} und {\it figurine} definiert.
%
% \begin{macro}{\diagram}
% \begin{macro}{\@diagram}
% Befehle f"ur normale, d.~h. zweidimensionale Diagramme. Wenn keine
% Gr"o"se angegeben ist, wird ein normales 8x8 Brett erzeugt.
%    \begin{macrocode}
\def\diagram{%
   \begingroup%
   \@ifnextchar [{\@diagram}{\@diagram[\@ight x\@ight]}%
}

\def\@diagram[#1x#2]{%
   \lines@max=#1%
   \rows@max=#2%
   \pl@ne=\z@%
   \current@plane=\z@%
   \let\put@sqs=\put@sqs@normal%
   \let\read@plane=\read@plane@normal%
   \@start@diagram%
}
%    \end{macrocode}
% \end{macro}
% \end{macro}
%
% \begin{macro}{\stereodiagram}
% Der Befehl f"ur Stereodiagramme.
%    \begin{macrocode}
\def\stereodiagram{%
   \begingroup%
   \@stereotrue%
   \let\put@sqs=\put@sqs@stereo%
   \let\read@plane=\read@plane@stereo%
   \@start@diagram%
}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\spacediagram}
% \begin{macro}{\@spacediagram}
% Befehle f"ur Raumschachdiagramme. Wenn keine Gr"o"se angegeben
% ist, wird automatisch ein 5x5x5 Brett erzeugt.
%    \begin{macrocode}
\def\spacediagram{%
   \begingroup%
   \@spacetrue%
   \@ifnextchar [{\@spacediagram}{\@spacediagram[5x5x5]}%
}

\def\@spacediagram[#1x#2x#3]{%
   \lines@max=#1%
   \rows@max=#2%
   \planes@max=#3%
   \let\put@sqs=\put@sqs@space%
   \let\read@plane=\read@plane@space%
   \@start@diagram%
}
%    \end{macrocode}
% \end{macro}
% \end{macro}
%
% \begin{macro}{\@start@diagram}
% Es folgen noch ein paar allgemeine Initialisierungen f"ur das 
% Setzen von Diagrammen. Insbesondere m"ussen die lokalen Bedeutungen
% der Befehle =\author=, =\day=, =\month=, =\year= und =\label= 
% aktiviert werden.
%    \begin{macrocode}
\def\@start@diagram{%
   \help@a=\lines@max\multiply\help@a \rows@max
   \brd@ff=\count10\advance\brd@ff \@ne
   \advance\count10 \help@a%
   \ifnum\count10>253%
      % There is not enough room to store the board in count registers
      \errmessage{No room for chess board array!}
   \fi%
   \init@vars
   \let\author=\ds@author
   \let\day=\ds@day
   \let\month=\ds@month
   \let\year=\ds@year
   \let\label=\ds@label
}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\enddiagram}
% \begin{macro}{\endstereodiagram}
% \begin{macro}{\endspacediagram}
% Nun folgt das eigentliche Setzen des Diagramms. Der Code ist f"ur 
% normale Diagramme, Stereodiagramme und Raumschachdiagramme der
% gleiche. Es mu"s nur an einigen Stellen eine Fallunterscheidung
% gemacht werden.
%    \begin{macrocode}
\def\enddiagram{%
   \let\author=\orig@author
   \let\day=\orig@day
   \let\month=\orig@month
   \let\year=\orig@year
   \let\label=\orig@label
   \if@number%
   \else%
      \refstepcounter{board@nr}% so \label and \ref work properly
   \fi%
   %
   % Now \label@tk should be set, if wanted, so 
   % we can generate the index entries
   %
   \@aindex%
   \@sindex%
   \@tindex%
   %
   % Now \@currentlabel will be set right, so we can use 
   % the original label
   \if@label%
      \expandafter\@set@label\the\label@tk;%
   \fi%
   %
   % Now we know, if we have frames so we can setup our dimensions
   %
   \global\sq@width=\fontdimen\tw@\chessfont%
   \if@stereo%
      \bd@width=\@ight\sq@width%
      \board@width=\@ight\sq@width%
      \ifdim\h@frame@dist<\sq@width%
         \h@frame@dist=\sq@width%
      \fi%
      % We do already skip with \v@space@dist
      % So we use the additional skip \space@frame@dist here
      \v@frame@dist=\space@frame@dist%
      \ifdim\space@frame>\outer@frame%
         \outer@frame=\space@frame%
      \fi%
      \advance\bd@width\tw@\inner@frame
      \advance\board@width\tw@\inner@frame
      \advance\board@width\tw@\h@frame@dist%
      \advance\board@width\tw@\outer@frame%
   \else\if@space%
      \ifdim\h@frame@dist<1.5\sq@width%
         \h@frame@dist=1.5\sq@width%
      \fi%
      % We do already skip with \v@space@dist
      % So we use the additional skip \space@frame@dist here
      \v@frame@dist=\space@frame@dist%
      \ifdim\space@frame>\outer@frame%
         \outer@frame=\space@frame%
      \fi%
      \ifspace@vertical%
         \bd@width=\lines@max\sq@width%
         \board@width\bd@width%
         \advance\bd@width\tw@\inner@frame
         \advance\board@width\tw@\inner@frame
         \advance\board@width\tw@\h@frame@dist%
         \advance\board@width\tw@\outer@frame%
      \else%
         \bd@width=\lines@max\sq@width%
         \advance\bd@width\tw@\inner@frame%
         \ifdim\h@space@dist<1.5\sq@width%
            \h@space@dist=1.5\sq@width%
         \fi%
         % Now we can compute the width of the complete board
         \board@width\bd@width%
         \advance\board@width\h@space@dist%
         \multiply\board@width\planes@max%
         \advance\board@width\h@space@dist%
         \advance\board@width\tw@\outer@frame%
      \fi%
   \else%
      \bd@width=\lines@max\sq@width%
      \ifnum\lines@max>\@ight%
         % Make the board wider
         \board@width=\lines@max\sq@width%
      \else%
         % Make a normal width
         \board@width=\@ight\sq@width%
      \fi%
      \advance\bd@width\tw@\inner@frame%
      \advance\board@width\tw@\inner@frame%
      \advance\board@width\tw@\h@frame@dist%
      \advance\board@width\tw@\outer@frame%
   \fi\fi%
   \if@widedias%
      \head@width=\textwidth%
   \else%
      \head@width=\board@width%
   \fi%
   %
   % Now we should build the diagram itself
   %
   \put@sqs% This builds up the \sq@box
   %
   \global\setbox\dia@box=\hbox{\vtop{%
      \baselineskip\f@ur\p@\lineskip\thr@@\p@\parindent\z@%
      \hsize\head@width%
      \centering%
      % diagram header
      \hbox{%
         \if@develop\if@label%
            \noindent\raggedright\llap{\labelfont\the\label@tk\ }%
         \fi\fi%
         \vbox{%
            \he@dpos\dia@above%
         }%
      }%
      % diagram itself
      \hbox to \head@width{\hss\vbox{%
         \hsize\board@width%
         \outer@henbox{\box\sq@box}%
      }\hss}%
      % diagram trailer
      \hbox to \head@width{\hss\vtop{%
         \hsize\board@width%
         \raggedright\dia@below%
      }\hss}%
   }}% End of \dia@box
   \do@dia@job%
   \endgroup%
}

\let\endstereodiagram=\enddiagram
\let\endspacediagram=\enddiagram
%    \end{macrocode}
% \end{macro}
% \end{macro}
% \end{macro}
%
% \begin{macro}{\figurine}
% \begin{macro}{\endfigurine}
% Nun folgt noch die Umgebung f"ur Diagramme in Figuriner Notation.
%    \begin{macrocode}
\def\figurine{%
   \begingroup
   \init@vars
   \let\author=\ds@author
   \let\day=\ds@day
   \let\month=\ds@month
   \let\year=\ds@year
   \let\label=\ds@label
}

\def\endfigurine{%
   \let\author=\orig@author
   \let\day=\orig@day
   \let\month=\orig@month
   \let\year=\orig@year
   \let\label=\orig@label
   \if@number%
   \else%
      \refstepcounter{board@nr}% so \label and \ref work properly
   \fi%
   %
   % Now \label@tk should be set, if wanted, so 
   % we can generate the index entries
   %
   \@aindex%
   \@sindex%
   \@tindex%
   %
   % Now \@currentlabel will be set right, so we can use 
   % the original label
   %
   \if@label%
      \expandafter\@set@label\the\label@tk;%
   \fi%
   %
   \@show@figurine%
   \endgroup%
}
%    \end{macrocode}
% \end{macro}
% \end{macro}
%
% \subsection{Befehle f"ur den Benutzer}
% \changes{1.1}{94/06/22}{Neue Konventrion f"ur die Auswahl der Fonts,
% die "uber dem Diagramm erscheinen. Es werden jeweils Makros
% definiert, die aus zwei Parametern bestehen. Dabei enh"alt der erste
% Parameter den Namen des Fonts und der zweite die Vergr"o"serung, die
% benutzt werden soll.}
% \begin{macro}{\selectelchfont}
% \begin{macro}{\diagramx}
% \begin{macro}{\diagramxi}
% \begin{macro}{\diagramxii}
% \begin{macro}{\defaultelchfont}
% Wir ben"otigen ein paar Befehle, mit denen die verschiedenen in
% den Diagrammen verwendeten Fonts bestimmt werden k"onnen.
%    \begin{macrocode}
\gdef\selectelchfont#1{%
   \global\elchfont\csname @#1elch\endcsname\defaultelchfont%
}

\def\diagramx{
   \ifcase\elchfont\relax%
      \font\chessfont=pkelch12
      \font\chtextfont=pkelch10
   \else%
      \font\chessfont=fselch12
      \font\chtextfont=fselch10
   \fi%
   \def\@authorfont{{cmbx10}{1000}}
   \def\@cityfont{{cmti10}{1000}}
   \def\@sourcefont{{cmsl8}{1000}}
   \def\@awardfont{{cmr10}{1000}}
   \def\@dedicfont{{cmsl10}{1000}}
   \font\numberfont=cmbx10
   \font\authorfont=cmbx10
   \font\cityfont=cmti10
   \font\sourcefont=cmsl8
   \font\awardfont=cmr10
   \font\dedicfont=cmsl10
   \font\stipfont=cmr10
   \font\remfont=cmr10
   \font\labelfont=cmr5
   \font\boardfont=cmss8
   \dia@lineskip\z@
   \dia@type\z@
}

\def\diagramxi{
   \ifcase\elchfont\relax%
      \font\chessfont=pkelch14
      \font\chtextfont=pkelch11
   \else%
      \font\chessfont=fselch14
      \font\chtextfont=fselch11
   \fi%
   \def\@authorfont{{cmbx12}{1000}}
   \def\@cityfont{{cmti10}{1000}}
   \def\@sourcefont{{cmsl8}{1000}}
   \def\@awardfont{{cmr10}{1000}}
   \def\@dedicfont{{cmsl10}{1000}}
   \font\numberfont=cmbx12
   \font\authorfont=cmbx12
   \font\cityfont=cmti10
   \font\sourcefont=cmsl8
   \font\awardfont=cmr10
   \font\dedicfont=cmsl10
   \font\stipfont=cmr10
   \font\remfont=cmr10
   \font\labelfont=cmr6
   \font\boardfont=cmss9
   \dia@lineskip\@ne\p@
   \dia@type\@ne
}

\def\diagramxii{
   \ifcase\elchfont\relax%
      \font\chessfont=pkelch16
      \font\chtextfont=pkelch12
   \else%
      \font\chessfont=fselch16
      \font\chtextfont=fselch12
   \fi%
   \def\@authorfont{{cmbx12}{1000}}
   \def\@cityfont{{cmti10}{1000}}
   \def\@sourcefont{{cmsl9}{1000}}
   \def\@awardfont{{cmr10}{1000}}
   \def\@dedicfont{{cmsl10}{1000}}
   \font\numberfont=cmbx12
   \font\authorfont=cmbx12
   \font\cityfont=cmti10
   \font\sourcefont=cmsl9
   \font\awardfont=cmr10
   \font\dedicfont=cmsl10
   \font\stipfont=cmr10
   \font\remfont=cmr10
   \font\labelfont=cmr7
   \font\boardfont=cmss9
   \dia@lineskip\tw@\p@
   \dia@type\tw@
}

\def\defaultelchfont{%
   \ifcase\@ptsize\relax%
      \diagramx\or%
      \diagramxi\or%
      \diagramxii%
   \fi%
}
%    \end{macrocode}
% \end{macro}
% \end{macro}
% \end{macro}
% \end{macro}
% \end{macro}
%
% \begin{macro}{\dianamestyle}
% \begin{macro}{\solnamestyle}
% Befehle, die das Layout von Namen in Diagramm und L"osung festlegen.
%    \begin{macrocode}
\def\dianamestyle#1{\def\@dianame{\csname @#1\endcsname}}
\def\solnamestyle#1{\def\@solname{\csname @#1\endcsname}}
%    \end{macrocode}
% \end{macro}
% \end{macro}
%
% \begin{macro}{\diagnum}
% Mit den nun folgenden Befehlen werden die einzelnen Komponenten
% eines Diagramms spezifiziert. Im wesentlichen speichern alle 
% Macros die "ubergebenen Parameter zun"achst einmal in daf"ur 
% vorgesehene Variablen.
%    \begin{macrocode}
\def\diagnum#1{\c@board@nr=#1\advance\c@board@nr\m@ne}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\ra}
% \begin{macro}{\lra}
% \begin{macro}{\rla}
% \begin{macro}{\x}
% \begin{macro}{\set}
% \begin{macro}{\OO}
% \begin{macro}{\OOO}
% \begin{macro}{\any}
% Die folgenden Befehle definieren die Symbole aus 
% Abschnitt~\ref{otherSymbols}.
%    \begin{macrocode}
\def\ra{\mbox{$\rightarrow$}}
\def\lra{\mbox{$\leftrightarrow$}}
\let\rla=\lra
\def\x{\mbox{\ifmmode\times\else$\times$\fi}}
\def\set{\kern -.05em\raise .1ex\hbox{*}}
\def\@O{0\raise.25ex\hbox{-}\kern -.1em\relax}
\def\OO{\@O0}
\def\OOO{\@O\@O0}
\def\any{\ifmmode\sim\else$\sim$\fi}
%    \end{macrocode}
% \end{macro}
% \end{macro}
% \end{macro}
% \end{macro}
% \end{macro}
% \end{macro}
% \end{macro}
% \end{macro}
%
% \begin{macro}{\spacelayout}
% Der Befehl =\spacelayout= bestimmt die Anordnung der Ebenen bei
% Raumschachdiagrammen.
%    \begin{macrocode}
\def\spacelayout#1{\csname space@#1\endcsname}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\nodiagnumbering}
% \begin{macro}{\diagnumbering}
% Befehle zur Einstellung der Numerierung der Diagramme.
%    \begin{macrocode}
\def\nodiagnumbering{\global\di@nofalse}
\def\diagnumbering#1{%
   \di@notrue\diagnum{\@ne}%
   \gdef\thediag{\csname @#1\endcsname\c@board@nr}%
}
%    \end{macrocode}
% \end{macro}
% \end{macro}
%
% \begin{macro}{\diagcenter}
% \begin{macro}{\diagleft}
% \begin{macro}{\diagright}
% Ausrichtung der Informationen "uber dem Diagramm.
%    \begin{macrocode}
\def\diagcenter{\def\he@dpos{\centering}}
\def\diagleft{\def\he@dpos{\raggedright}}
\def\diagright{\def\he@dpos{\raggedleft}}
%    \end{macrocode}
% \end{macro}
% \end{macro}
% \end{macro}
%
% \begin{macro}{\setmonthstyle}
% Schreibweise der Monatsangaben.
%    \begin{macrocode}
\def\setmonthstyle#1{\def\write@month{\csname @#1\endcsname}}
%    \end{macrocode}
% \end{macro}
%
% Die folgenden Befehle spezifizieren die Diagrammelemente. Dabei ist 
% besonders zu ber"ucksichtigen, da"s die Befehle =\label=, 
% =\author= sowie =\day=, =\month= und =\year= gegen "uberschreiben
% gesch"utzt werden m"ussen.
%
% \begin{macro}{\specialdiagnum}
% =\specialdiagnum= erm"oglicht das benutzen beliebiger 
% Diagrammnummern. Damit bei Referenzen dann auch diese Nummern 
% Verwendung finden mu"s =\@currentlabel= umdefiniert werden.
%    \begin{macrocode}
\def\specialdiagnum#1{%
   \number@tk={#1}\@numbertrue\def\thediag{#1}\def\@currentlabel{#1}%
}
%    \end{macrocode}
% \end{macro}
% \begin{macro}{\ds@label}
% \mbox{}
%    \begin{macrocode}
\def\ds@label{\@ifstar{\ds@labelfalse\ds@xlabel}{\ds@labeltrue\ds@xlabel}}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\ds@author}
% \begin{macro}{\city}
% Autoren und Wohnorte.
%    \begin{macrocode}
\def\ds@author#1{\aut@tk={#1}\auth@rtrue}
\def\city#1{\city@tk={#1}\@citytrue}
%    \end{macrocode}
% \end{macro}
% \end{macro}
% \begin{macro}{\sourcenr}
% \begin{macro}{\source}
% \begin{macro}{\ds@day}
% \begin{macro}{\ds@month}
% \begin{macro}{\months}
% \begin{macro}{\ds@year}
% \begin{macro}{\issue}
% \begin{macro}{\pages}
% Befehle zur Quellenangabe.
%    \begin{macrocode}
\def\sourcenr#1{\sourcenr@tk={#1}\@sourcenrtrue}
\def\source#1{\source@tk={#1}\@sourcetrue}
\def\ds@day#1{\day@tk={#1}\@daytrue}
\def\ds@month#1{\from@month=#1}
\def\months#1{\@months#1;}
\def\ds@year#1{\year@tk={#1}\@yeartrue}
\def\issue#1{\issue@tk={#1}\@issuetrue}
\def\pages#1{\pages@tk={#1}\@pagestrue}
%    \end{macrocode}
% \end{macro}
% \end{macro}
% \end{macro}
% \end{macro}
% \end{macro}
% \end{macro}
% \end{macro}
% \end{macro}
%
% \begin{macro}{\tournament}
% \begin{macro}{\award}
% Turniere und Auszeichnungen
%    \begin{macrocode}
\def\tournament#1{\tournament@tk={#1}\@tournamenttrue}
\def\award#1{\award@tk={#1}\@awardtrue}
%    \end{macrocode}
% \end{macro}
% \end{macro}
%
% \begin{macro}{\version}
% \begin{macro}{\after}
% \begin{macro}{\correction}
% \begin{macro}{\dedication}
% Versionen, Vorg"anger, Korrekturen und Widmungen
%    \begin{macrocode}
\def\version#1{\version@tk={#1}\@versiontrue}
\def\after#1{\after@tk={#1}\@aftertrue}
\def\correction#1{\correction@tk={#1}\@correctiontrue}
\def\dedication#1{\dedic@tk={#1}\@dedicationtrue}
%    \end{macrocode}
% \end{macro}
% \end{macro}
% \end{macro}
% \end{macro}
%
% \begin{macro}{\pieces}
% \begin{macro}{\nofields}
% \begin{macro}{\nosquares}
% \begin{macro}{\gridlines}
% \begin{macro}{\fieldframe}
% Elemente des Brettes: Steine, L"ocher, umrahmte Felder und 
% Gitterlinien
%    \begin{macrocode}
\def\pieces#1{\pieces@tk={#1}\@piecestrue}
\def\nofields#1{\nofields@tk={#1}\@nofieldstrue}
\let\nosquares\nofields
\def\gridlines#1{\gridlines@tk={#1}\@gridlinestrue}
\def\fieldframe#1{\fieldframe@tk={#1}\@fieldframetrue}
%    \end{macrocode}
% \end{macro}
% \end{macro}
% \end{macro}
% \end{macro}
% \end{macro}
%
% \begin{macro}{\stipulation}
% \begin{macro}{\condition}
% \begin{macro}{\twins}
% \begin{macro}{\remark}
% \begin{macro}{\Co}
% Forderung, M"archenbedingungen, Zwillingsbildungen, erl"auternde
% Bemerkungen und Computerpr"ufung
%    \begin{macrocode}
\def\stipulation#1{\stipulation@tk={#1}\@stipulationtrue}
\def\condition{\@ifstar{\x@condtrue\@condition}{\@condition}}
\def\@condition#1{\condition@tk={#1}\@conditiontrue}
\def\twins{\@ifstar{\x@twinstrue\@twins}{\@twins}}
\def\@twins#1{\twins@tk={#1}\@twinstrue}
\def\remark#1{\remark@tk={#1}\@remarktrue} 
\def\Co#1{\ifx#1+\@computertrue\computer@tk={+}\fi}
%    \end{macrocode}
% \end{macro}
% \end{macro}
% \end{macro}
% \end{macro}
% \end{macro}
%
% \begin{macro}{\solution}
% \begin{macro}{\themes}
% \begin{macro}{\comment}
% \begin{macro}{\judgement}
% L"osung, Themen, Kommentare und Bewertungen
%    \begin{macrocode}
\long\def\solution#1{\sol@tk={#1}\global\s@lutrue}
\def\themes#1{\theme@tk={#1}\@themetrue}
\long\def\comment#1{\comment@tk={#1}\@commenttrue}
\long\def\judgement#1{\judgement@tk={#1}\@judgementtrue}
%    \end{macrocode}
% \end{macro}
% \end{macro}
% \end{macro}
% \end{macro}
%
% \begin{macro}{\noframe}
% \begin{macro}{\noinnerframe}
% \begin{macro}{\verticalcylinder}
% \begin{macro}{\horizontalcylinder}
% \begin{macro}{\stdgrid}
% Zylinderbretter und Gitterschach
%    \begin{macrocode}
\def\noframe{\@vframefalse\@hframefalse}
\def\noinnerframe{\@leaveOuterfalse\@vframefalse\@hframefalse}
\def\verticalcylinder{\@vframefalse}
\def\horizontalcylinder{\@hframefalse}
\def\stdgrid{\@stdgridtrue}
%    \end{macrocode}
% \end{macro}
% \end{macro}
% \end{macro}
% \end{macro}
% \end{macro}
%
% \begin{macro}{\gridchess}
% \begin{macro}{\magic}
% \begin{macro}{\tourn}
% \begin{macro}{\dedic}
% \begin{macro}{\stip}
% \begin{macro}{\cond}
% \begin{macro}{\rem}
% \begin{macro}{\sol}
% Kurzformen und andere Namen f"ur Befehle.
%    \begin{macrocode}
\let\gridchess=\stdgrid
\let\magic=\fieldframe
\let\tourn=\tournament
\let\dedic=\dedication
\let\stip=\stipulation
\let\cond=\condition
\let\rem=\remark
\let\sol=\solution
%    \end{macrocode}
% \end{macro}
% \end{macro}
% \end{macro}
% \end{macro}
% \end{macro}
% \end{macro}
% \end{macro}
% \end{macro}
%
% \begin{macro}{\develop}
% \begin{macro}{\nocomputer}
% Einschalten der Anzeige von Markierungen und Unterdr"ucken des 
% Symbols f"ur Computerpr"ufung.
%    \begin{macrocode}
\def\develop{\@developtrue}
\def\nocomputer{\@show@computerfalse}
%    \end{macrocode}
% \end{macro}
% \end{macro}
%
% \begin{macro}{\putsol}
% Das Macro =\putsol= schreibt die bisher gespeicherten L"osungen
% in die Ausgabe.
%    \begin{macrocode}
\def\putsol{\immediate\closeout\s@lfd\input\jobname.sol\cl@arsol}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\widedias}
% \begin{macro}{\nowidedias}
% Der Schalter =\widedias= stellt ein, da"s Diagramme zentriert
% "uber die gesamte Textbreite erscheinen. Mit =\nowidedias= 
% wird dieses wieder abgestellt.
%    \begin{macrocode}
\def\widedias{\@widediastrue\diagcenter}
\def\nowidedias{\@widediasfalse}
%    \end{macrocode}
% \end{macro}
% \end{macro}
%
% \begin{macro}{\normalnames}
% \begin{macro}{\reversednames}
% Diese folgenden Befehle erm"oglichen, das Namen so in den
% Text "ubernommen werden, wie sie bei =\author= angegeben werden. 
%    \begin{macrocode}
\def\normalnames{\normal@namestrue}
\def\reversednames{\normal@namesfalse}
%    \end{macrocode}
% \end{macro}
% \end{macro}
%
% \begin{macro}{\makeaindex}
% \begin{macro}{\makesindex}
% \begin{macro}{\maketindex}
% Die folgenden Befehle k"onnen im Vorspann verwendet werden, um
% Autoren-, Quellen- oder Themenregister zu erzeugen.
%    \begin{macrocode}
\def\makeaindex{%
   \@dia@index%
   \newindex[thediag]{author}{adx}{and}{Autorenverzeichnis}%
   \@aindextrue\reversednames%
}

\def\makesindex{%
   \@dia@index%
   \newindex[thediag]{source}{sdx}{snd}{Quellenregister}%
   \@sindextrue%
}

\def\maketindex{%
   \@dia@index%
   \newindex[thediag]{theme}{tdx}{tnd}{Themenregister}%
   \@tindextrue%
}
%    \end{macrocode}
% \end{macro}
% \end{macro}
% \end{macro}

% \begin{macro}{\authorindex}
% \begin{macro}{\sourceindex}
% \begin{macro}{\themeindex}
% Mit den nachfolgenden Befehlen k"onnen Autoren-, Quellen-
% und Themenregister im Text eingef"ugt werden.
%    \begin{macrocode}
\def\authorindex{{\let\@idxitem\@aidxitem\printindex[author]}}
\def\sourceindex{\printindex[source]}
\def\themeindex{\printindex[theme]}
%    \end{macrocode}
% \end{macro}
% \end{macro}
% \end{macro}
%
% \subsection{Internationale Figureneingabe}
% In diesem Abschnitt werden Befehle bereitgestellt, die es 
% erm"oglichen, auf einfache Weise die Eingabe von Figuren
% an die l"anderspezifischen Bed"urfnisse anzupassen.
%
% \begin{macro}{\DefinePieces}
% Mit dem Makro =\DefinePieces=, k"onnen die Zeichen festgelegt werden,
% die f"ur Figurenfarbe, -art und -drehung benutzt werden. Au"serdem 
% werden damit Befehle f"ur das Setzen von Figuren im Text erzeugt.
%    \begin{macrocode}
\def\DefinePieces#1#2#3{%
   \@setPieceColor#1\@setPieceSpec#2\@setPieceRotation#3%
   \loop@rotation%
   \expandafter\xdef\csname\ds@black\ds@white\ds@bishop\endcsname{%
      \noexpand\ch@fig{20}%
   }%
   \expandafter\xdef\csname\ds@black\ds@black\ds@bishop\endcsname{%
      \noexpand\ch@fig{32}%
   }%
   \expandafter\xdef\csname\ds@white F\endcsname{{\chessfont\ }}
   \expandafter\xdef\csname\ds@black F\endcsname{{\chessfont\char144}}
   \expandafter\xdef\csname\ds@white Nr\endcsname{%
      \noexpand\ch@fig{109}%
   }%
   \expandafter\xdef\csname\ds@black Nr\endcsname{%
      \noexpand\ch@fig{121}%
   }%
   \expandafter\xdef\csname\ds@white Gh\endcsname{%
      \noexpand\ch@fig{112}%
   }%
   \expandafter\xdef\csname\ds@black Gh\endcsname{%
      \noexpand\ch@fig{124}%
   }%
}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\Imi}
% Es fehlt noch der Imitator!
%    \begin{macrocode}
\def\Imi{\ch@fig{157}}
%    \end{macrocode}
% \end{macro}
%
% \subsection{Interne Layoutbefehle}
% Dieser Abschnitt legt alle Befehle und Gr"o"sen fest, die 
% f"ur die Layoutgestaltung besonders wichtig sind. Der Abschnitt
% ist folgenderma"sen unterteilt:
% \begin{enumerate}
% \item Makros, die die Beschriftung "uber und unter dem Diagramm
%   erzeugen.
% \item Makros, die den Aufbau der L"osung bestimmen.
% \item Festlegung von Ma"sen f"ur verschiedene Diagrammkomponenten
%   wie Linien, Rahmen etc.
% \item Festlegen der Operation, die durchgef"uhrt wird, wenn das
%   Diagramm fertig gesetzt ist.
% \end{enumerate}
%
% \subsubsection{Beschriftung des Diagramms}
% \begin{macro}{\dia@above}
% \begin{macro}{\dia@below}
% Die Befehle =\dia@above= und =\dia@below= enthalten alle Makros
% die die Diagramm"uber bzw.\ unterschriften erzeugen.
%    \begin{macrocode}
\def\dia@above{%
   \@dia@number%
   \@dia@authors%
   \@dia@after%
   \@dia@city%
   \@dia@version%
   \@dia@source%
   \@dia@correction%
   \@dia@tournament%
   \@dia@award%
   \@dia@dedic%
}

\def\dia@below{%
   \bgroup%
   \baselineskip11\p@\advance\baselineskip\dia@lineskip%
   \lineskip\dia@lineskip plus 1fil\parskip\z@%
   \lineskiplimit\dia@lineskip%
   \@dia@stipulation%
   \ifx@twins\else%
      \@dia@twins%
   \fi%
   \ifx@cond\else%
      \@dia@condition%
   \fi%
   \@dia@remark%
   \egroup%
}
%    \end{macrocode}
% \end{macro}
% \end{macro}
%
% \begin{macro}{\@dia@number}
% \begin{macro}{\@dia@authors}
% \begin{macro}{\@show@city}
% \begin{macro}{\p@rsecity}
% \begin{macro}{\@dia@city}
% \begin{macro}{\@dia@after}
% \begin{macro}{\@dia@version}
% \begin{macro}{\@dia@source}
% \begin{macro}{\@dia@correction}
% \begin{macro}{\@dia@tournament}
% \begin{macro}{\@dia@award}
% \begin{macro}{\@dia@dedication}
% Nun folgen die Makros, die die einzelnen Komponenten der 
% Diagrammbeschriftung setzen. Zun"achst die "Uberschrift des 
% Diagramms.
%    \begin{macrocode}
\def\@dia@number{\ifdi@no{\numberfont\thediag\par}\fi}

\def\@dia@authors{%
   {\ifauth@r%
      \authorfont%
      \ifnormal@names%
         \the\aut@tk%
      \else%
         {\def\name@sep{\par}%
         \@notfirstfalse% 
         \let\@action=\@dianame% Parse the list of authors
       \@parseTokenlist\aut@tk;}
      \fi%
      \par%
   \fi}%
}

\def\@show@city#1;{\if@notfirst\ \slash\ \else\@notfirsttrue\fi#1}

\def\p@rsecity#1; {\@show@city#1;\l@@klist}

\def\@dia@city{%
   {\if@city%
      \cityfont\@notfirstfalse%
      \let\@action=\p@rsecity\@parseTokenlist\city@tk;%
   \fi}%
}

\def\@dia@after{\if@after{\dedicfont\the\after@tk\par}\fi}

\def\@dia@version{\if@version{\dedicfont\the\version@tk\par}\fi}

\def\@dia@source{%
   {\if@source%
      \sourcefont%
      \if@sourcenr\the\sourcenr@tk\ \fi
      \the\source@tk%
      \ifnum\from@month>\z@%
         \if@day%
            \ \ \the\day@tk .\write@month\from@month%
         \else%
            \ \ \write@month\from@month%
         \fi%
         \ifnum\to@month>\z@ -\write@month\to@month\fi%
         \if@day .\else /\fi%
      \else%
         \ \ %
      \fi%
      \if@year\the\year@tk\fi%
      \if@issue /\the\issue@tk\fi%
      \if@pages ,\ \the\pages@tk\fi%
      \par%
   \fi}%
}

\def\@dia@correction{\if@correction{\dedicfont\the\correction@tk\par}\fi}

\def\@dia@tournament{\if@tournament{\awardfont\the\tournament@tk\par}\fi}

\def\@dia@award{\if@award{\awardfont\the\award@tk\par}\fi}

\def\@dia@dedic{\if@dedication{\dedicfont\the\dedic@tk\par}\fi}
%    \end{macrocode}
% \end{macro}
% \end{macro}
% \end{macro}
% \end{macro}
% \end{macro}
% \end{macro}
% \end{macro}
% \end{macro}
% \end{macro}
% \end{macro}
% \end{macro}
% \end{macro}
%
% Nun die Macros f"ur die Diagrammunterschrift.
%
% \begin{macro}{\@dia@stipulation}
% In der ersten Zeile unter dem Diagramm soll neben der 
% L"osung auch das Symbol "uber Computerpr"ufung und die 
% Steinkontrolle erscheinen. Daher werden erst diese beiden 
% Informationen in eine Box gesetzt. Die eigentliche Forderung 
% wird dann in einen Absatz gesetzt, der rechts um die Breite 
% von Computerpr"ufung und Steinkontrolle ausgespart ist. 
% Diese beiden Boxen werden dann "uberlagert.
%    \begin{macrocode}
\def\@dia@stipulation{%
   \bgroup%
   \stipfont%
   % First we build the boxes with the figure count
   \setbox\@cnt@box=\hbox{%
      \if@show@computer%
         \ \ C\if@computer +\else --\fi%
      \fi%
      \iffigcnt%
         \ \ (\the\w@cnt+\the\b@cnt\ifnum\z@<\n@cnt+\the\n@cnt\fi)%
      \fi%
   }%
   \setbox\@stip@box=\hbox to \board@width{%
      \vbox{%
         \hangindent=-\wd\@cnt@box\hangafter=\m@ne%
         \raggedright\tolerance=\@m%
         \if@stipulation\the\stipulation@tk\fi%
         \ifx@twins\ \ \@dia@twins\fi%
         \ifx@cond\ \ \@dia@condition\fi%
      }%
      \hss%
   }
   \sq@width=\ht\@stip@box\advance\sq@width\dp\@stip@box%
   \hbox{%
      \rlap{\hbox to \board@width{%
         \hfil\vbox to \sq@width{\box\@cnt@box\vss}%
      }}%
      \box\@stip@box%
   }%
   \egroup%
}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\write@param}
% Das folgende Makro schreibt jeden Parameter einer mit 
% "`;~"' in einen eigenen Absatz.
%    \begin{macrocode}
\def\write@param#1; {#1\par\l@@klist}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\@dia@twins}
% Das folgende Makro erzeugt die Zwillingsbildungen, falls 
% vorhanden.
%    \begin{macrocode}
\def\@dia@twins{%
   {\if@twins%
      \remfont\let\@action=\write@param%
      \@parseTokenlist\twins@tk;%
   \fi}%
}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\@dia@condition}
% Das folgende Makro erzeugt die Bedingungen, falls 
% vorhanden.
%    \begin{macrocode}
\def\@dia@condition{%
   {\if@condition%
      \remfont\let\@action=\write@param%
      \@parseTokenlist\condition@tk;%
   \fi}%
}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\@dia@remark}
% Das folgende Makro erzeugt die Bemerkungen und 
% Erl"auterungen zur Stellung, falls vorhanden.
%    \begin{macrocode}
\def\@dia@remark{%
   {\if@remark%
      \remfont\let\@action=\write@param%
      \@parseTokenlist\remark@tk;%
   \fi}%
}
%    \end{macrocode}
% \end{macro}
%
% \subsubsection{Layout der L"osung}
% In diesem Abschnitt werden die Makros definiert, die die Ausgabe
% der L"osung durchf"uhren.
%
% \begin{macro}{\parse@params}
% \begin{macro}{\split@param}
% Die beiden folgenden Befehle werden benutzt, um die verschiedenen
% Diagrammkomponenten, die als Parameter bei =\solhead= "ubergeben
% werden, in der L"osung zug"anglich zu machen.
%    \begin{macrocode}
\def\parse@params#1{%
   \ifcase\help@a\relax
      \label@tk={#1}\ifx#1\relax\else\@labeltrue\fi\or%
      \number@tk={#1}\ifx#1\relax\else\@numbertrue\fi\or%
      \aut@tk={#1}\ifx#1\relax\else\auth@rtrue\fi\or%
      \city@tk={#1}\ifx#1\relax\else\@citytrue\fi\or%
      \sourcenr@tk={#1}\ifx#1\relax\else\@sourcenrtrue\fi\or%
      \source@tk={#1}\ifx#1\relax\else\@sourcetrue\fi\or%
      \day@tk={#1}\ifx#1\relax\else\@daytrue\fi\or%
      \from@month=#1\or%
      \to@month=#1\or%
      \year@tk={#1}\ifx#1\relax\else\@yeartrue\fi\or%
      \issue@tk={#1}\ifx#1\relax\else\@issuetrue\fi\or%
      \pages@tk={#1}\ifx#1\relax\else\@pagestrue\fi\or%
      \tournament@tk={#1}\ifx#1\relax\else\@tournamenttrue\fi\or%
      \award@tk={#1}\ifx#1\relax\else\@awardtrue\fi\or%
      \after@tk={#1}\ifx#1\relax\else\@aftertrue\fi\or%
      \version@tk={#1}\ifx#1\relax\else\@versiontrue\fi\or%
      \correction@tk={#1}\ifx#1\relax\else\@correctiontrue\fi\or%
      \dedic@tk={#1}\ifx#1\relax\else\@dedicationtrue\fi\or%
      \theme@tk={#1}\ifx#1\relax\else\@themetrue\fi\or%
      \twins@tk={#1}\ifx#1\relax\else\@twinstrue\fi\or%
      \computer@tk={#1}\or%
      \comment@tk={#1}\ifx#1\relax\else\@commenttrue\fi\or%
      \judgement@tk={#1}\ifx#1\relax\else\@judgementtrue\fi\or%
      \sol@tk={#1}%
   \fi%
   \advance\help@a \@ne%
   \l@@klist%
}

\def\split@param#1{%
   \@labelfalse\@numberfalse\auth@rfalse\@cityfalse%
   \@sourcenrfalse\@sourcefalse\@dayfalse\@yearfalse%
   \@issuefalse\@pagesfalse\@tournamentfalse\@awardfalse%
   \@afterfalse\@versionfalse\@correctionfalse\@dedicationfalse%
   \@themefalse\@twinsfalse\@commentfalse\@judgementfalse%
   \help@a=\z@%
   \let\@action=\parse@params\l@@klist#1\e@list%
}
%    \end{macrocode}
% \end{macro}
% \end{macro}
%
% \begin{macro}{\@dia@solution}
% Das Makro =\@dia@solution= setzt die eigentliche L"osung.
%    \begin{macrocode}
\def\@dia@solution{%
   \bgroup%
   \parindent\z@%
   {\bf
      \noindent\if@label\showlabel{\the\label@tk}\fi%
      \the\number@tk) %
      \ifauth@r%
         \ifnormal@names%
            \the\aut@tk%
         \else%
            {\@notfirstfalse% We are the first one
            \let\@action=\@solname%
            \@parseTokenlist\aut@tk;}:%
         \fi%
      \fi%
   }%
   \if@develop\if@judgement\the\judgement@tk\fi\fi%
   \par%
   \the\sol@tk\par%
   \if@comment\the\comment@tk\par\fi%
   \egroup%
}
%    \end{macrocode}
% \end{macro}
%
% \subsubsection{Linienma"se und Abst"ande}
% Breite von Gitterlinien und anderen Linien innerhalb des
% Diagramms.
%    \begin{macrocode}
\grid@width=0.6\p@
%    \end{macrocode}
%
% Breite der Linien, die den inneren bzw.\ "au"seren Rahmen 
% bilden.
%    \begin{macrocode}
\inner@frame=0.6\p@
\outer@frame=1.2\p@
%    \end{macrocode}
%
% Minimaler horizontaler Abstand von innerem und "au"serem 
% Rahmen bei Stereo- und Raumschachdiagrammen.
%    \begin{macrocode}
\space@frame=\outer@frame
%    \end{macrocode}
%
% Vertikaler und horizontaler Abstand von innerem und "au"serem
% Rahmen bei normalen Diagrammen.
%    \begin{macrocode}
\v@frame@dist=\tw@\p@%
\h@frame@dist=\tw@\p@%
%    \end{macrocode}
%
% Zus"atzlicher vertikaler Abstand der Rahmen bei Stereo- und
% Raumschachdiagrammen.
%    \begin{macrocode}
\space@frame@dist=\z@
%    \end{macrocode}
%
% Abstand der Ebenen bei Stereo- und Raumschachdiagrammen.
%    \begin{macrocode}
\v@space@dist=1em
%    \end{macrocode}
%
% \begin{macro}{\@show@figurine}
% Probleme in figuriner Notation.
%    \begin{macrocode}
\def\@show@figurine{%
   \@figurine@number%
   \@figurine@author%
   \@figurine@after%
   \@figurine@correction%
   \@figurine@version%
   \@figurine@source%
   \@figurine@tournament%
   \@figurine@award%
   \@figurine@dedic%
   \@figurine@pieces%
   \@figurine@stip%
   \@figurine@twins%
   \@figurine@conditions%
   \@figurine@remarks%
   \@figurine@computer%
}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\@figurine@number}
% \begin{macro}{\@figurine@author}
% \begin{macro}{\@figurine@after}
% \begin{macro}{\@figurine@correction}
% \begin{macro}{\@figurine@version}
% \begin{macro}{\@figurine@source}
% \begin{macro}{\@figurine@tournament}
% \begin{macro}{\@figurine@award}
% \begin{macro}{\@figurine@dedic}
% Informationen, die sonst "uber dem Diagramm stehen:
% Nummer, Autoren, Vorg"anger, Korrekturen, Versionen, Quelle,
% Turnier, Auszeichnungen und Widmungen
%    \begin{macrocode}
\def\@figurine@number{{\authorfont\thediag)}}

\def\p@rseauthor@figurine#1,#2; {%
   \if@notfirst , \else\@notfirsttrue\fi#2 #1%
}

\def\@figurine@author{%
   {\ifauth@r%
      \authorfont\@notfirstfalse%
      \let\@action=\p@rseauthor@figurine%
      \@parseTokenlist\aut@tk;%
   \fi}%
}

\def\@figurine@after{\if@after{\dedicfont\ \ \the\after@tk}\fi}

\def\@figurine@correction{%
   \if@correction{\dedicfont\ \ \the\correction@tk}\fi% 
}

\def\@figurine@version{%
   \if@version{\dedicfont\ \ \the\version@tk}\fi%
}

\def\@figurine@source{%
   {\if@source%
      \sourcefont%
      \if@sourcenr\the\sourcenr@tk\ \fi%
      \the\source%
      \if@year%
         \ \ %
         \if@day%
            \ifnum\from@month>\z@%
               \the\day@tk.%
               \write@month\the\from@month%
               \ifnum\to@month>\z@%
                  -\write@month\the\to@month%
               \fi%
               .%
            \fi%
         \else%
            \write@month\the\from@month%
            \ifnum\to@month>\z@%
               -\write@month\the\to@month%
            \fi%
            /%
         \fi%
         \the\year@tk%
      \fi%
      \if@issue , \the\issue@tk\fi%
      \if@pages , \the\pages@tk\fi%
   \fi}%
}

\def\@figurine@tournament{%
   \if@tournament{\awardfont\ \ \the\tournament@tk}\fi%
}

\def\@figurine@award{%
   \if@award{\awardfont\ \ \the\award@tk}\fi%
}

\def\@figurine@dedic{%
   \if@dedication{\awardfont\ \ \the\dedic@tk}\fi%
}
%    \end{macrocode}
% \end{macro}
% \end{macro}
% \end{macro}
% \end{macro}
% \end{macro}
% \end{macro}
% \end{macro}
% \end{macro}
% \end{macro}
%
% \begin{macro}{\show@squares}
% \begin{macro}{\@figurine@pieces}
% Ausgabe einer Stellung in Figuriner Notation.
%    \begin{macrocode}
\def\show@squares#1\e@list{\ch@fig{\the\help@a}#1, }

\def\@figurine@pieces{%
   \if@pieces%
      \let\@action=\p@rsepieces%
      \let\piece@job\show@squares%
      \@parseTokenlist\pieces@tk,%
   \fi%
}
%    \end{macrocode}
% \end{macro}
% \end{macro}
%
% \begin{macro}{\@figurine@stip}
% \begin{macro}{\@figurine@conditions}
% \begin{macro}{\@figurine@twins}
% \begin{macro}{\@figurine@computer}
% \begin{macro}{\@figurine@remarks}
% Informationen, die Normalerweise unter dem Diagramm stehen:
% Forderung, M"archenbedingungen, Zwillinge, Computerpr"ufung und
% Bemerkungen.
%    \begin{macrocode}
\def\@figurine@stip{%
   \if@stipulation{\stipfont\ \ \stipulation@tk}\fi%
}

\def\@figurine@conditions{%
   \if@condition{\remfont\ \ \the\condition@tk}\fi%
}

\def\@figurine@twins{%
   \if@twins{\remfont\ \ \the\twins@tk}\fi%
}

\def\@figurine@computer{%
   \if@show@computer
      \if@computer\ (Co)\fi%
   \fi%
}

\def\@figurine@remarks{%
   \if@remark{\stipfont\ \ \the\remark@tk}\fi%
}
%    \end{macrocode}
% \end{macro}
% \end{macro}
% \end{macro}
% \end{macro}
% \end{macro}
%
% \subsubsection{Ausgabe des Diagramms}
% \begin{macro}{\do@dia@job}
% Hier wird nun die Ausgabe des Diagramms get"atigt. Dieses Macro
% wird in =\enddiagram= aufgerufen. Die Implementierung f"ur
% den normalen Fall ist ziemlich einfach. Es wird die L"osung in 
% eine Datei geschrieben und dann die Box, die das Diagramm
% enth"alt, in die Ausgabe.
%    \begin{macrocode}
\def\do@dia@job{\@write@sol\unhbox\dia@box}
%    \end{macrocode}
% \end{macro}
%
% \subsection{Ben"otigte Hilfsfunktionen}
% \begin{macro}{\solhead}
% =\solhead= wird f"ur die Speicherung von L"osungen in 
% einer Datei verwendet.
%    \begin{macrocode}
\def\solhead#1{{\split@param{#1}\@dia@solution}}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\@write@sol}
% Das Makro =\@write@sol= schreibt alle Informationen mit
% Ausnahme des Diagramminhalts in die L"osungsdatei. Durch 
% Klammerung von \{ und \} der einzelnen Komponenten k"onnen
% diese sp"ater wieder aufgespalten werden.
%    \begin{macrocode}
\def\@write@sol{%
   \ifs@lu%
      \immediate\write\s@lfd{%
         \noexpand\solhead{%
            {\the\label@tk}%
            {\thediag}%
            {\the\aut@tk}%
            {\the\city@tk}%
            {\the\sourcenr@tk}%
            {\the\source@tk}%
            {\the\day@tk}%
            {\the\from@month}%
            {\the\to@month}%
            {\the\year@tk}%
            {\the\issue@tk}%
            {\the\pages@tk}%
            {\the\tournament@tk}%
            {\the\award@tk}%
            {\the\after@tk}%
            {\the\version@tk}%
            {\the\correction@tk}%
            {\the\dedic@tk}%
            {\the\theme@tk}%
            {\the\twins@tk}%
            {\the\computer@tk}%
            {\the\comment@tk}%
            {\the\judgement@tk}%
            {\the\sol@tk}%
         } %end of \solhead
      }%
   \fi
}
%    \end{macrocode}
% \end{macro}
%
%    \begin{macrocode}
\def\@months#1-#2;{\from@month=#1\to@month=#2}
%    \end{macrocode}
%
% \begin{macro}{\@write@info}
% Dieses Macro wird f"ur das setzen innerhalb der L"osung verwendet.
%    \begin{macrocode}
\def\@write@info#1{#1}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\x@autoscale}
% \changes{1.1}{94/06/22}{Befehl erg"anzt.}
% \begin{macro}{\@autoscale}
% \changes{1.1}{94/06/22}{Befehl erg"anzt.}
% Die Makros =\x@autoscale= und =\@autoscale= werden benutzt, um die
% Schriftgr"o"se eines Textes zu verkleinern, falls dieser nicht in eine
% Box vorgegebener Breite pa"st. Diese Macros werden f"ur das Setzen
% der Informationen "uber dem Diagramm benutzt.
%    \begin{macrocode}
\def\x@autoscale#1#2#3#4{%
   \current@scale=#2%
   \advance\current@scale 100%
   \loop%
      \advance\current@scale -100%
      \setbox\scale@box=\hbox{%
         \font\scalefont=#1 scaled \current@scale%
         \scalefont #3%
      }
      \scale@width=\wd\scale@box%
   \ifdim\scale@width>#4\repeat%
   \unhbox\scale@box%
}

\def\@autoscale#1{%
   \expandafter\x@autoscale\@scalefont#1\board@width%
}
%    \end{macrocode}
% \end{macro}
% \end{macro}
% 
%    \begin{macrocode}
\def\name@sep{,\ }
\def\sep@names{\if@notfirst\name@sep\else\@notfirsttrue\fi}
%    \end{macrocode}
%
% \begin{macro}{\@checkshort}
% Mit der Funktion =\@checkshort= kann bestimmt werden, ob bei 
% einem Namen eine Abk"urzung f"ur den Vornamen explizit angegeben 
% ist.
%    \begin{macrocode}
\def\@checkshort#1/#2#3;{%
   \@shortformtrue%
   \ifx#2\e@list\relax%
      \@shortformfalse%
   \fi%
}
%    \end{macrocode}
% \end{macro}
%
% Die folgenden Funktionen erm"oglichen Setzen verschiedener 
% Informationen beim Schreiben von Namen.
%
% \begin{macro}{@write@christian}
% \changes{1.1}{94/06/21}{Befehlsbeschreibungen erg"anzt.}
% \begin{macro}{write@christian}
% \changes{1.1}{94/06/21}{Befehlsbeschreibungen erg"anzt.}
% Die beiden folgenden Makros erzeugen den ausgeschriebenen Vornamen und
% spalten dabei ggfs.\ eine Kurzschreibweise ab.
%    \begin{macrocode}
\def\@write@christian#1/#2;{#1}

\def\write@christian#1;{%
   \@checkshort#1/\e@list;%
   \if@shortform\@write@christian#1;\else#1\fi%
}
%    \end{macrocode}
% \end{macro}
% \end{macro}
% 
% \begin{macro}{\@write@short}
% \changes{1.1}{94/06/21}{Befehlsbeschreibung erg"anzt.}
% \begin{macro}{\write@short}
% \changes{1.1}{94/06/21}{Befehlsbeschreibung erg"anzt.}
% \begin{macro}{\short@christian}
% \changes{1.1}{94/06/21}{Befehlsbeschreibung erg"anzt.}
% =\@write@short= benutzt eine angegebene Kurzform eines Vornamens.
% =\short@christian= erzeugt eine Kurzform eines Vornamens aus dem
% ausgeschriebenen Vornamen. =\write@short= testet zun"achst, ob eine
% Kurzform eines Vornamens gegeben ist und erzeugt dann die Kurzform
% entweder mit =\@write@short= oder =\short@christian=.
%    \begin{macrocode}
\def\@write@short#1/#2;{#2}

\def\short@christian#1#2-{%
   \if@notfirst -\else\@notfirsttrue\fi%
   #1.%
   \l@@klist%
}

\def\write@short#1;{%
   \@checkshort#1/\e@list;%
   \if@shortform%
      \@write@short#1;%
   \else%
      {\@notfirstfalse\let\@action\short@christian\l@@klist#1-\e@list}%
   \fi%
}
%    \end{macrocode}
% \end{macro}
% \end{macro}
% \end{macro}
%
% \begin{macro}{\@fullname}
% \begin{macro}{\@sirname}
% \begin{macro}{\@short}
% \begin{macro}{\@noname}
% Nun folgen die Makros, die die unterschiedlichen Schreibweisen 
% der Autorennamen implementieren.
%    \begin{macrocode}
\def\@fullname#1, #2; {\sep@names\@write@info{\write@christian#2; #1}\l@@klist}
\def\@sirname#1, #2; {\sep@names\@write@info{#1}\l@@klist}
\def\@short#1, #2; {\sep@names\@write@info{\write@short#2;\ #1}\l@@klist}
\def\@noname#1, #2; {\l@@klist}
%    \end{macrocode}
% \end{macro}
% \end{macro}
% \end{macro}
% \end{macro}
%
%    \begin{macrocode}
\def\space@vertical{\space@verticaltrue}
\def\space@horizontal{\space@verticalfalse}
%    \end{macrocode}
%
%    \begin{macrocode}
\def\cl@arsol{\immediate\openout\s@lfd=\jobname.sol}
%    \end{macrocode}
%
% \begin{macro}{\getc@lor}
% \begin{macro}{\getpi@ce}
% \begin{macro}{\chkr@tate}
% Die folgenden Befehle werden beim Parsen der Figurenliste
% verwendet, um Farbe, Steinart und Drehung der Figur 
% festzustellen.
%    \begin{macrocode}
\def\getc@lor#1{%
   \if#1\ds@white\help@a\z@\global\let\cnt\w@cnt%
   \else\if#1\ds@neutral\help@a=6\global\let\cnt\n@cnt%
   \else\if#1\ds@black\help@a=12\global\let\cnt\b@cnt%
   \else\errmessage{invalid color!}%
   \fi\fi\fi%
   \getpi@ce%
}

\def\getpi@ce#1{\if#1B\relax\else
   \if#1\ds@knight\advance\help@a\@ne%
   \else\if#1\ds@bishop\advance\help@a\tw@%
   \else\if#1\ds@rook\advance\help@a\thr@@%
   \else\if#1\ds@queen\advance\help@a\f@ur%
   \else\if#1\ds@king\advance\help@a 5%
   \else\if#1C%
      \ifimitator%
         \ifnum\help@a=12\global\let\cnt=\n@cnt\fi%
      \fi%
      \advance\help@a 145%
   \else%
      \errmessage{invalid piece!}%
   \fi\fi\fi\fi\fi\fi\fi%
   \futurelet\r@tate\chkr@tate%
}

\def\chkr@tate{%
   \if\r@tate \ds@upsidedown\advance\help@a 108\let\nextpr@c=\skipr@t\else
   \if\r@tate \ds@left\advance\help@a 36\let\nextpr@c=\skipr@t\else
   \if\r@tate \ds@right\advance\help@a 72\let\nextpr@c=\skipr@t\else
   \let\nextpr@c\piece@job\fi\fi\fi\nextpr@c%
}
%    \end{macrocode}
% \end{macro}
% \end{macro}
% \end{macro}
%
% \begin{macro}{\skipr@t}
% \begin{macro}{\l@@k}
% \begin{macro}{\parsefi@lds}
% Die folgenden Routinen sind Hilfroutinen zum Parsen einer 
% Felderliste.
%    \begin{macrocode}
\def\skipr@t#1{\piece@job}
\def\l@@k{\futurelet\whatsnext\parsefi@lds}
\def\parsefi@lds{%
   \if\whatsnext\e@list%
      \let\nextpr@c\relax%
   \else
      \let\nextpr@c\read@square%
   \fi%
   \nextpr@c%
}
%    \end{macrocode}
% \end{macro}
% \end{macro}
% \end{macro}
%
% Es folgen nun drei allgemeine Routinen, die Aktionen
% definieren, wenn ein Feld gelesen worden ist.
% \begin{macro}{\set@piece}
% Speichern einer Figur in ein aus dem Feld zu bestimmenden Register.
%    \begin{macrocode}
\def\set@piece{%
   \ifnum\pl@ne=\current@plane%
      \global\advance\cnt\@ne% Count this piece
      \help@b=\r@w\multiply\help@b\lines@max\advance\help@b\lin@\advance\help@b\brd@ff%
      % set piece to this square
      \ifnum\count\help@b=\m@ne%
         \count\help@b=\help@a%
      \else%
         \count\help@b=\help@a%
         \advance\count\help@b 18%
      \fi%
   \fi%
   \l@@k%
}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\set@nofield}
% Definieren eines Lochs.
%    \begin{macrocode}
\def\set@nofield, {%
   \ifnum\pl@ne=\current@plane%
      \help@b=\r@w\multiply\help@b\lines@max\advance\help@b\lin@\advance\help@b\brd@ff%
      % clear the square
      \count\help@b=\m@ne
   \fi%
   \l@@klist%
}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\set@frame}
% Setzen eines Rahmens um ein Feld.
%    \begin{macrocode}
\def\set@frame, {%
   \ifnum\pl@ne=\current@plane%
      \@vGrid{\the\lin@}{\the\r@w}\@ne%
      \@hGrid{\the\lin@}{\the\r@w}\@ne%
      \advance\lin@\@ne%
      \@vGrid{\the\lin@}{\the\r@w}\@ne%
      \advance\lin@\m@ne\advance\r@w\@ne%
      \@hGrid{\the\lin@}{\the\r@w}\@ne%
   \fi%
   \l@@klist%
}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\e@list}
% \begin{macro}{\l@@klist}
% \begin{macro}{\ch@ckist}
% Die folgenden Routinen erm"oglichen das Parsen beliebiger Listen.
% Die meisten Routinen, bei denen dieses Parsen eingesetzt wird, 
% folgen anschlie"send.
%    \begin{macrocode}
\def\e@list{\relax}
\def\l@@klist{\futurelet\nextlist\ch@cklst}
\def\ch@cklst{%
   \ifx\nextlist\e@list%
      \let\nextpr@c=\relax%
   \else%
      \let\nextpr@c=\@action%
   \fi%
   \nextpr@c%
}
%    \end{macrocode}
% \end{macro}
% \end{macro}
% \end{macro}
%
% \begin{macro}{\p@rsepieces}
% Die Routine =\p@rsepieces= wird verwendet, um die Figurenlisten
% zu abzuarbeiten.
%    \begin{macrocode}
\def\p@rsepieces#1, {\getc@lor#1\e@list\l@@klist}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\p@rseauthor}
% Bearbeiten einer Autorenliste.
%    \begin{macrocode}
\def\p@rseauthor#1; {\sh@wauthor#1;\l@@klist}
%    \end{macrocode}
% \end{macro}
%
% Die folgenden Routinen erm"oglichen das allgemeine Parsen einer 
% Liste von Feldern.
% \begin{macro}{\read@square}
% Lesen eines Feldes innerhalb einer Ebene.
%    \begin{macrocode}
\def\read@square#1#2{%
   \lin@=`#1\advance\lin@ by -`a\relax%
   \r@w=#2\advance\r@w by \m@ne%
   \read@plane%
}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\read@plane@normal}
% \begin{macro}{\read@plane@stereo}
% \begin{macro}{\read@plane@stereo}
% \begin{macro}{\skip@plane}
% \begin{macro}{\read@plane@space}
% Die folgenden Routinen lesen eine Ebenenangabe. Dabei werden f"ur
% die unterschiedlichen Brettformen verschiedene Makros definiert.
%    \begin{macrocode}
\def\read@plane@normal{\plane@job}

\def\read@plane@stereo{\futurelet\plane@char\get@plane@stereo}

\def\get@plane@stereo{%
   \if\plane@char A%
      \pl@ne=\@ne\advance\r@w-\tw@\advance\lin@-\tw@%
      \let\@plane@job=\skip@plane%
   \else\if\plane@char B%
      \pl@ne=\tw@\advance\r@w-\tw@\advance\lin@-\tw@%
      \let\@plane@job=\skip@plane%
   \else\if\plane@char C%
      \pl@ne=\thr@@\advance\r@w-\tw@\advance\lin@-\tw@%
      \let\@plane@job=\skip@plane%
   \else\if\plane@char D%
      \pl@ne=\f@ur\advance\r@w-\tw@\advance\lin@-\tw@%
      \let\@plane@job=\skip@plane%
   \else%
      \pl@ne=\z@\let\@plane@job=\plane@job%
   \fi\fi\fi\fi%
   \@plane@job%
}

\def\skip@plane#1{\plane@job}

\def\read@plane@space#1{\pl@ne=`#1\advance\pl@ne by -`A\relax\plane@job}
%    \end{macrocode}
% \end{macro}
% \end{macro}
% \end{macro}
% \end{macro}
% \end{macro}
%
% \begin{macro}{\@vGrid}
% \begin{macro}{\@hGrid}
% Die Routinen =\@vGrid= und =\@hGrid= ziehen vertikale bzw.\ 
% horizontale Linien.
%    \begin{macrocode}
\def\@vGrid#1#2#3{%
   \raise#2\sq@width\hbox to \z@{%
      \hskip#1\sq@width\hskip-.5\grid@width%
      \vrule height#3\sq@width width\grid@width\hss%
   }%
}

\def\@hGrid#1#2#3{%
   \raise#2\sq@width\hbox to \z@{%
      \hskip#1\sq@width%
      \vrule width#3\sq@width height .5\grid@width depth%
      .5\grid@width\hss%
   }%
}
%    \end{macrocode}
% \end{macro}
% \end{macro}
%
% \begin{macro}{\@selGrid}
% =\@selGrid= erzeugt beliebige Linien in einer Ebene des Diagramms.
%    \begin{macrocode}
\def\@selGrid#1#2, {%
   \ifnum\pl@ne=\current@plane%
      \if#1h%
         \@hGrid#2%
      \else\if#1v%
         \@vGrid#2%
      \else%
         \errmessage{Wrong GridSelector #1}%
      \fi\fi%
   \fi%
   \l@@klist%
}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\@stdgrid}
% =\@stdgrid= erzeugt die Linien eines Gitterschachdiagramms.
%    \begin{macrocode}
\def\@stdgrid{%
   \setbox\plane@box=\vbox{\hbox{%
      \help@a=\tw@%
      \loop%
         \ifnum\help@a<\lines@max%
         \@vGrid{\the\help@a}{0}{\the\rows@max}%
         \advance\help@a\tw@%
      \repeat%
      \help@a=\tw@%
      \loop%
         \ifnum\help@a<\rows@max%
            \@hGrid{0}{\the\help@a}{\the\lines@max}%
            \advance\help@a\tw@%
      \repeat%
      \box\plane@box
   }}%
}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\ds@xlabel}
% \begin{macro}{\@set@label}
% F"ur die *-Form des Label Befehls ben"otigen wir noch den Befehl
% =\ds@xlabel= um den "ubergebenen Parameter zu speichern.
% Da wir die Funktion des =\label=-Befehls ver"andern, ben"otigen
% wir einen Befehl, mit dem wir nachtr"aglich eine Marke definieren
% k"onnen.
%    \begin{macrocode}
\def\ds@xlabel#1{\label@tk={#1}\@labeltrue}

\def\@set@label#1;{\ifds@label\label{#1}\fi}
%    \end{macrocode}
% \end{macro}
% \end{macro}
%
% \begin{macro}{\init@vars}
% Es bleiben ein paar Variablen, die initialisiert werden
% m"ussen, wenn ein Diagramm gesetzt werden soll.
%    \begin{macrocode}
\def\init@vars{%
   \global\s@lufalse
   \w@cnt\z@ \b@cnt\z@ \n@cnt\z@
   \lin@\z@
}
%    \end{macrocode}
% \end{macro}
%
%
% \begin{macro}{\clear@line}
% \begin{macro}{\clear@board}
% Die folgenden beiden Routinen werden benutzt um das Diagramm
% --- bzw.\ dessen Ebenen --- zu l"oschen.
%    \begin{macrocode}
\def\clear@line{%
   \lin@\z@%
   \loop%
      \help@a=\current@plane%
      \advance\help@a\r@w\advance\help@a\lin@%
      \ifodd\help@a%
         \global\count\help@b=\m@ne% mark WHITE 
      \else%
         \global\count\help@b=144% mark BLACK
      \fi%
      \global\advance\help@b\@ne%
      \advance\lin@\@ne%
   \ifnum\lin@<\lines@max\repeat%
}

\def\clear@board{%
   \r@w\z@%
   \help@b\brd@ff%
   \loop%
      \begingroup%
      \clear@line%
      \endgroup%
   \advance\r@w\@ne%
   \ifnum\r@w<\rows@max\repeat%
}
%    \end{macrocode}
% \end{macro}
% \end{macro}
%
% \begin{macro}{\put@line}
% Das Makro =\put@line= setzt die nebeneinanderliegenden Felder
% eines Diagramms.
%    \begin{macrocode}
\def\put@line#1{%
   \lin@\z@%
   \help@b=#1\advance\help@b\brd@ff%
   \hbox{%
      \if@stereo%
         \ifnum\current@plane>\z@%
            \ifnum\@rows=12%
               \llap{\raise .5\sq@width\hbox{\boardfont c6\ }}%
            \fi%
         \fi%
      \fi%
      \hbox to \z@{\vbox to \sq@width{}}%
      \loop%
         \ifnum\count\help@b=\m@ne\wF%
         \else\char\count\help@b\fi%
         \advance\lin@\@ne\advance\help@b\@ne%
      \ifnum\lin@<\lines@max\repeat%
   }%
}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\@parseTokenlist}
% Das folgende Makro wird benutzt um eine durch ein bestimmtes Token
% getrennte Liste zu parsen, die in einem Tokenregister gespeichert 
% ist. Der erste Parameter gibt dabei das Tokenregister an, der zweite
% das Trennsymbol.
%    \begin{macrocode}
\def\@parseTokenlist#1#2{\expandafter\l@@klist\the#1#2 \e@list}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\@addToPlane}
% =\@addToPlane= wird benutzt, um eine Ebene um bestimmte 
% Elemente zu erg"anzen. Die Elemente werden durch die vor 
% dem Aufruf festzulegende Funktion =\@action= und den "ubergebenen
% Parameter bestimmt.
%    \begin{macrocode}
\def\@addToPlane#1{%
   \setbox\plane@box=\vbox{\hbox{%
      \@parseTokenlist#1,%
      \box\plane@box%
   }}%
}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\put@plane}
% Das Makro =\put@plane= setzt eine Ebene des Schachbrettes. Die 
% Routinen, die sich f"ur die verschiedenen Brettformen unterscheiden, 
% sind durch =\let= bereits festgelegt.
%    \begin{macrocode}
\def\put@plane{%
   % We might want gridchess
     \if@stdgrid%
        \@stdgrid%
     \fi%
   % Let us first set the fieldframes
   \if@fieldframe%
      \let\@action\read@square%
      \let\plane@job\set@frame%
      \@addToPlane\fieldframe@tk%
   \fi%
   % Then we should add the gridlines
   \if@gridlines%
      \let\@action\read@plane%
      \let\plane@job\@selGrid%
      \@addToPlane\gridlines@tk%
   \else%
      \if@stereo%
        \stereo@center%
     \fi%
   \fi%
   % Now we should clear the board
   \clear@board%
   % Let us now parse the list of pieces
   \if@pieces%
      \let\@action\p@rsepieces%
      \let\piece@job\l@@k\let\plane@job\set@piece%
      \@parseTokenlist\pieces@tk,%
   \fi%
   % Now we clear all fields, which are given using \nofields
   \if@nofields%
      \let\@action\read@square%
      \let\plane@job\set@nofield%
      \@parseTokenlist\nofields@tk,%
   \fi%
   % Now we can put the pieces to the board
   \global\setbox\plane@box=\hbox{%
      \vbox{\rlap{\box\plane@box}}%
      \vbox{%
         \chessfont%
         \baselineskip=\z@\lineskip=\z@%
         \@rows=\rows@max%
         \multiply\@rows by \lines@max%
         \loop%
            \advance\@rows -\lines@max%
            \put@line\@rows%
         \ifnum\@rows>\z@\repeat%
      }%
   }%
}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\put@sqs@normal}
% Die folgende Routine setzt ein Normalbrett.
%    \begin{macrocode}
\def\put@sqs@normal{%
   \put@plane%
   \setbox\sq@box=\hbox{%
      \inner@henbox{\box\plane@box}%
   }%
}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\put@sqs@stereo}
% \begin{macro}{\stereo@center}
% Nun folgen die beiden Routinen, die ben"otigt werden um 
% ein Stereodiagramm zu setzen. =\stereo@center= wird ben"otigt, um 
% auf der untersten Ebene die zentralen Felder mit einem Rahmen zu 
% versehen.
%    \begin{macrocode}
\def\put@sqs@stereo{%
   \setbox\sq@box=\hbox{\hfil\vbox{%
      \current@plane=5%
      \vskip\v@space@dist%
      \loop%
         \advance\current@plane\m@ne%
         \ifnum\current@plane=\z@%
            \lines@max=\@ight%
            \rows@max=\@ight%
         \else%
            \lines@max=\f@ur%
            \rows@max=\f@ur%
         \fi%
         % Now we should clear the board
         \begingroup% We need this for inner loops!
            \clear@board%
            \put@plane%
         \endgroup%
         \hbox to \bd@width{%
            \hfil%
            \inner@henbox{\box\plane@box}%
            \ifcase\current@plane\or%
               \rlap{{\boardfont\ A}}\or%
               \rlap{{\boardfont\ B}}\or%
               \rlap{{\boardfont\ C}}\or%
               \rlap{{\boardfont\ D}}%
            \fi%
            \hfil%
         }%
         \vskip\v@space@dist%
      \ifnum\z@<\current@plane\repeat%
   }\hfil}%
}

\def\stereo@center{%
   \ifnum\current@plane=\z@%
      \setbox\plane@box=\vbox{\hbox{%
         \@hGrid\tw@\tw@\f@ur\@hGrid\tw@ 6\f@ur%
         \@vGrid\tw@\tw@\f@ur\@vGrid6\tw@\f@ur%
         \box\plane@box%
      }}%
   \fi%
}
%    \end{macrocode}
% \end{macro}
% \end{macro}
%
% \begin{macro}{\put@sqs@space@vertical}
% \begin{macro}{\put@sqs@space@horizontal}
% \begin{macro}{\put@sqs@space}
% Die Routinen =\put@sqs@space@...= setzen die Ebenen eines 
% Raumschachbrettes. Welche der beiden Anordnungen gew"ahlt wird,
% wird in =\put@sqs@space= bestimmt.
%    \begin{macrocode}
\def\put@sqs@space@vertical{%
   \setbox\sq@box=\hbox{\hfil\vbox{%
      \current@plane=\planes@max%
      \vskip\v@space@dist%
      \loop%
         \advance\current@plane\m@ne%
         % Now we should clear the board
         \begingroup% We use inner loops!
         \clear@board%
         \put@plane%
         \hbox to \bd@width{%
            \inner@henbox{\box\plane@box}%
            \advance\current@plane`A%
            \rlap{{\boardfont\ \char\current@plane}}%
         }%
         \endgroup%
         \vskip\v@space@dist%
      \ifnum\z@<\current@plane\repeat%
   }\hfil}%
}

\def\put@sqs@space@horizontal{%
   \setbox\sq@box=\hbox{%
      \current@plane=\z@%
      \hskip\h@space@dist%
      \loop%
         % Now we should clear the board
         \begingroup% We use inner loops!
         \clear@board%
         \put@plane%
         \hbox to \bd@width{%
            \inner@henbox{\box\plane@box}%
            \advance\current@plane`A%
            \rlap{{\boardfont\ \char\current@plane}}%
         }%
         \endgroup%
         \hskip\h@space@dist%
         \advance\current@plane\@ne%
      \ifnum\planes@max>\current@plane%
      \repeat%
   }%
}

\def\put@sqs@space{%
   \ifspace@vertical%
      \put@sqs@space@vertical%
   \else%
      \put@sqs@space@horizontal%
   \fi%
}
%    \end{macrocode}
% \end{macro}
% \end{macro}
% \end{macro}
%
% \begin{macro}{\@inner@vframe}
% \begin{macro}{\@inner@hframe}
% Hilfsfunktionen, die die inneren Rahmenlinien erzeugen oder weglassen.
%    \begin{macrocode}
\def\@inner@vframe{%
   \if@vframe%
      \vrule width \inner@frame%
   \else%
      \hskip\inner@frame%
   \fi%
}

\def\@inner@hframe{%
   \if@hframe%
      \hrule height \inner@frame%
   \else%
      \vskip\inner@frame%
   \fi%
}
%    \end{macrocode}
% \end{macro}
% \end{macro}
%
% \begin{macro}{\inner@v@frame@rule}
% \begin{macro}{\inner@h@frame@rule}
% \begin{macro}{\inner@henbox}
% Die folgenden drei Befehle erzeugen den inneren Rahmen der 
% Diagramme.
%    \begin{macrocode}
\def\inner@v@frame@rule{%
   \if@stereo%
      \@inner@vframe%
   \else\if@space%
      \@inner@vframe%
   \else\if@leaveOuter%
      \vrule width \inner@frame%
   \else%
      \@inner@vframe%
   \fi\fi\fi%
}

\def\inner@h@frame@rule{%
   \if@stereo%
      \@inner@hframe%
   \else\if@space%
      \@inner@hframe%
   \else\if@leaveOuter%
      \hrule height \inner@frame%
   \else%
      \@inner@hframe%
   \fi\fi\fi%
}

\def\inner@henbox#1{%
   \hbox{%
      \inner@v@frame@rule%
      \vbox{\inner@h@frame@rule#1\inner@h@frame@rule}%
      \inner@v@frame@rule%
   }%
}
%    \end{macrocode}
% \end{macro}
% \end{macro}
% \end{macro}
%
% \begin{macro}{\@outer@vrule}
% \begin{macro}{\@outer@hrule}
% Hilfsfunktionen f"ur die Linien des "au"seren Rahmens.
%    \begin{macrocode}
\def\@outer@vrule{\vrule width \outer@frame}

\def\@outer@hrule{\hrule height \outer@frame}
%    \end{macrocode}
% \end{macro}
% \end{macro}
%
% \begin{macro}{\outer@v@frame@rule}
% \begin{macro}{\outer@h@frame@rule}
% \begin{macro}{\outer@henbox}
% Nun die analogen Befehle f"ur den "au"seren Rahmen.
%    \begin{macrocode}
\def\outer@v@frame@rule{%
   \if@stereo%
      \@outer@vrule%
   \else\if@space%
      \@outer@vrule%
   \else\if@leaveOuter%
      \if@vframe\@outer@vrule\else\hskip\outer@frame\fi%
   \else%
      \@outer@vrule%
   \fi\fi\fi%
}

\def\outer@h@frame@rule{%
   \if@stereo%
      \@outer@hrule%
   \else\if@space%
      \@outer@hrule%
   \else\if@leaveOuter%
      \if@hframe\@outer@hrule\else\vskip\outer@frame\fi%
   \else%
      \@outer@hrule%
   \fi\fi\fi%
}

\def\outer@henbox#1{%
   \outer@h@frame@rule%
   \hbox{%
      \outer@v@frame@rule%
      \ifspace@vertical%
         \hskip\h@frame@dist%
      \fi%
      \vbox{%
         \ifspace@vertical%
            \vskip\v@frame@dist%
         \else%
            \vskip\v@space@dist%
         \fi%
         #1%
         \ifspace@vertical%
            \vskip\v@frame@dist%
         \else%
            \vskip\v@space@dist%
         \fi%
      }%
      \ifspace@vertical%
         \hskip\h@frame@dist%
      \fi%
      \outer@v@frame@rule%
   }%
   \outer@h@frame@rule%
}
%    \end{macrocode}
% \end{macro}
% \end{macro}
% \end{macro}
%
%
% \begin{macro}{\ch@fig}
% Das Makro =\ch@fig= erzeugt Figurensymbole f"ur die Verwendung
% im Text.
%    \begin{macrocode}
\def\ch@fig#1{%
   \ifvmode\noindent\fi%
   \hbox{\chtextfont\lower.3\fontdimen\tw@\chtextfont\hbox{\char#1}}%
}
%    \end{macrocode}
% \end{macro}
%
% Nun folgen noch ein paar Befehle, die bei der Erzeugung der 
% Register ben"otigt werden.
%    \begin{macrocode}
\def\@dia@index{%
   \@ifundefined{newindex}%
   {\errmessage{You should add documentstyle-option 'index'}}{}%
}

\def\showlabel#1{\if@develop\raise1ex\hbox{\labelfont#1}\fi}

\def\@aidxitem#1, #2, #3{%
   \par\medskip#1, \write@christian#2; \dotfill #3%
}

\def\dia@index#1\@sep#2[#3]{\index[#3]{#2|showlabel{#1}}}

\def\parse@aindex#1; {%
   \expandafter\dia@index\the\label@tk\@sep#1[author]\l@@klist%
}

\def\@aindex{%
   \if@aindex%
      \ifnormal@names%
         \errmessage{Cannot create index entries with normalnames}%
      \else\ifauth@r%
         \let\@action=\parse@aindex\@parseTokenlist\aut@tk;%
      \fi\fi%
   \fi%
}

\def\x@sindex#1\@sep{\expandafter\dia@index\the\label@tk\@sep#1[source]}

\def\@sindex{%
   \if@sindex\if@source%
      \expandafter\x@sindex\the\source@tk\@sep%
   \fi\fi%
}

\def\parse@tindex#1, {%
   \expandafter\dia@index\the\label@tk\@sep#1[theme]\l@@klist%
}

\def\@tindex{%
   \if@tindex\if@theme%
      \let\@action=\parse@tindex\@parseTokenlist\theme@tk,%
   \fi\fi%
}
%    \end{macrocode}
%
% \begin{macro}{\@setPieceColor}
% \begin{macro}{\@setPieceSpec}
% \begin{macro}{\@setPieceRotation}
% Die drei folgenden Befehle werden in =\DefinePieces= verwendet, um
% die angegebenen Bezeichner f"ur Farben, Figuren und Drehungen zu
% speichern.
%    \begin{macrocode}
\def\@setPieceColor#1#2#3{%
   \gdef\ds@white{#1}\gdef\ds@black{#2}\gdef\ds@neutral{#3}%
}

\def\@setPieceSpec#1#2#3#4#5#6{%
   \gdef\ds@king{#1}\gdef\ds@queen{#2}\gdef\ds@rook{#3}%
   \gdef\ds@bishop{#4}\gdef\ds@knight{#5}\gdef\ds@pawn{#6}%
}

\def\@setPieceRotation#1#2#3{%
   \gdef\ds@left{#1}\gdef\ds@right{#2}\gdef\ds@upsidedown{#3}%
}
%    \end{macrocode}
% \end{macro}
% \end{macro}
% \end{macro}
%
% \begin{macro}{\loop@rotation}
% \begin{macro}{\loop@color}
% \begin{macro}{\loop@piece}
% Nun folgen drei Schleifen, die ineinander verschachtelt die Befehle
% erzeugen, mit denen Figurensymbole im Text erstellt werden k"onnen.
%    \begin{macrocode}
\def\loop@rotation{%
   \bgroup%
      \n@cnt\z@%
      \help@a\z@%
      \loop%
         \ifcase\n@cnt%
            \def\@theRotation{}%
         \or%
            \def\@theRotation{\ds@left}%
         \or%
            \def\@theRotation{\ds@right}%
         \or%
            \def\@theRotation{\ds@upsidedown}%
         \fi%
         \loop@color%
         \advance\n@cnt\@ne%
         \advance\help@a by 36\relax%
      \ifnum\n@cnt<\f@ur\repeat%
   \egroup%
}

\def\loop@color{%
   \bgroup%
      \w@cnt\z@%
      \loop%
         \ifcase\w@cnt%
            \def\@theColor{\ds@white}%
         \or%
            \def\@theColor{\ds@neutral}%
         \or%
            \def\@theColor{\ds@black}%
         \fi%
         \loop@piece%
         \advance\w@cnt\@ne%
         \advance\help@a by 6%
      \ifnum\w@cnt<\thr@@\repeat%
   \egroup%
}

\def\loop@piece{%
   \bgroup%
      \b@cnt\z@%
      \loop%
         \ifcase\b@cnt%
            \def\@thePiece{\ds@pawn}%
         \or%
            \def\@thePiece{\ds@knight}%
         \or%
            \def\@thePiece{\ds@bishop}%
         \or%
            \def\@thePiece{\ds@rook}%
         \or%
            \def\@thePiece{\ds@queen}%
         \or%
            \def\@thePiece{\ds@king}%
         \fi%
         \expandafter\xdef\csname 
         \@theColor\@thePiece\@theRotation\endcsname{%
            \noexpand\ch@fig{\the\help@a}%
         }
         \advance\b@cnt\@ne%
         \advance\help@a by \@ne%
      \ifnum\b@cnt<6\repeat%
   \egroup%
}
%    \end{macrocode}
% \end{macro}
% \end{macro}
% \end{macro}
%
%
% \subsection{Einstellung von Standardwerten}
% Hier werden verschiedene Standardeinstellungen zum Diagrammlayout
% festgelegt.
%    \begin{macrocode}
\elchfont\@fselch

\defaultelchfont%
%    \end{macrocode}
%
% Setze die Diagrammnummer f"ur das erste Diagramm.
%    \begin{macrocode}
\diagnum{\@ne}
%    \end{macrocode}
%
% Standardwerte f"ur das Diagrammlayout.
%    \begin{macrocode}
\figcnttrue
%    \end{macrocode}
%
% Standardwerte f"ur die Schreibweise von Namen in Diagramm und 
% L"osung.
%    \begin{macrocode}
\def\@dianame{\@fullname}
\def\@solname{\@fullname}
%    \end{macrocode}
%
% Ebenen bei Raumschachdiagrammen sollen standardm"a"sig "ubereinander
% dargestellt werden.
%
%    \begin{macrocode}
\space@verticaltrue
%    \end{macrocode}
%
% Diagramme sollen mit arabischen Zahlen numeriert werden.
%    \begin{macrocode}
\diagnumbering{arabic}
%    \end{macrocode}
%
% Monatsangaben in Diagrammen sollen mit arabischen Ziffern 
% erscheinen.
%    \begin{macrocode}
\def\write@month{\@arabic}%
%    \end{macrocode}
%
% Im Diagrammkopf sollen die Angaben Linksb"undig erscheinen.
%    \begin{macrocode}
\diagleft
%    \end{macrocode}
%
% Wir "offnen eine Datei, in die die L"osungen geschrieben werden.
%    \begin{macrocode}
\cl@arsol
%    \end{macrocode}
%
% Wir m"ussen die Originalbedeutung verschiedener Funktionen sichern, 
% damit wir diese bei Setzen eines Diagramms wieder zur Verf"ugung 
% haben.
%    \begin{macrocode}
\let\orig@author=\author
\let\orig@day=\day
\let\orig@month=\month
\let\orig@year=\year
\let\orig@label=\label
%    \end{macrocode}
% 
% Wir m"ussen noch die Zeichen festlegen, die f"ur die Figureneingabe
% verwendet werden sollen.
%    \begin{macrocode}
\DefinePieces{wsn}{KDTLSB}{LRU}
%    \end{macrocode}
%
%    \begin{macrocode}
%</style>
%    \end{macrocode}
%
% \Finale
\endinput
