pieces/walks/pawns/pawn$(OBJ_SUFFIX): pieces/walks/pawns/pawn.c \
 pieces/walks/pawns/pawn.h position/board.h utilities/bitmask.h \
 position/position.h pieces/walks/vectors.h utilities/boolean.h \
 utilities/enumeration.h solving/observation.h stipulation/stipulation.h \
 stipulation/goals/goals.h py.h utilities/boolean.h position/position.h \
 solving/ply.h pylang.h stipulation/slice_type.h output/mode.h \
 solving/ply.h pydata.h py.h conditions/conditions.h \
 pieces/walks/pawns/pawns.h pieces/walks/pawns/en_passant.h \
 solving/solve.h solving/move_effect_journal.h solving/castling_rights.h \
 position/pieceid.h solving/move_generator.h \
 solving/find_square_observer_tracking_back_from_target.h \
 debugging/trace.h

pieces/walks/pawns/pawn.h:

position/board.h:

utilities/bitmask.h:

position/position.h:

pieces/walks/vectors.h:

utilities/boolean.h:

utilities/enumeration.h:

solving/observation.h:

stipulation/stipulation.h:

stipulation/goals/goals.h:

py.h:

utilities/boolean.h:

position/position.h:

solving/ply.h:

pylang.h:

stipulation/slice_type.h:

output/mode.h:

solving/ply.h:

pydata.h:

py.h:

conditions/conditions.h:

pieces/walks/pawns/pawns.h:

pieces/walks/pawns/en_passant.h:

solving/solve.h:

solving/move_effect_journal.h:

solving/castling_rights.h:

position/pieceid.h:

solving/move_generator.h:

solving/find_square_observer_tracking_back_from_target.h:

debugging/trace.h:
pieces/walks/pawns/pawns$(OBJ_SUFFIX): pieces/walks/pawns/pawns.c \
 pieces/walks/pawns/pawns.h pieces/walks/vectors.h position/board.h \
 utilities/bitmask.h position/position.h utilities/boolean.h \
 utilities/enumeration.h py.h utilities/boolean.h position/position.h \
 solving/ply.h pylang.h pieces/walks/pawns/en_passant.h solving/solve.h \
 stipulation/stipulation.h stipulation/goals/goals.h \
 stipulation/slice_type.h output/mode.h solving/move_effect_journal.h \
 solving/castling_rights.h solving/ply.h position/pieceid.h \
 solving/observation.h solving/move_generator.h pydata.h py.h \
 debugging/trace.h

pieces/walks/pawns/pawns.h:

pieces/walks/vectors.h:

position/board.h:

utilities/bitmask.h:

position/position.h:

utilities/boolean.h:

utilities/enumeration.h:

py.h:

utilities/boolean.h:

position/position.h:

solving/ply.h:

pylang.h:

pieces/walks/pawns/en_passant.h:

solving/solve.h:

stipulation/stipulation.h:

stipulation/goals/goals.h:

stipulation/slice_type.h:

output/mode.h:

solving/move_effect_journal.h:

solving/castling_rights.h:

solving/ply.h:

position/pieceid.h:

solving/observation.h:

solving/move_generator.h:

pydata.h:

py.h:

debugging/trace.h:
pieces/walks/pawns/promotion$(OBJ_SUFFIX): pieces/walks/pawns/promotion.c \
 pieces/walks/pawns/promotion.h py.h utilities/boolean.h \
 position/position.h position/board.h utilities/bitmask.h \
 pieces/walks/vectors.h utilities/boolean.h utilities/enumeration.h \
 solving/ply.h position/position.h pylang.h pieces/walks/walks.h \
 pieces/walks/classification.h conditions/singlebox/type1.h \
 solving/solve.h stipulation/stipulation.h stipulation/goals/goals.h \
 stipulation/slice_type.h output/mode.h debugging/trace.h pydata.h py.h \
 conditions/conditions.h

pieces/walks/pawns/promotion.h:

py.h:

utilities/boolean.h:

position/position.h:

position/board.h:

utilities/bitmask.h:

pieces/walks/vectors.h:

utilities/boolean.h:

utilities/enumeration.h:

solving/ply.h:

position/position.h:

pylang.h:

pieces/walks/walks.h:

pieces/walks/classification.h:

conditions/singlebox/type1.h:

solving/solve.h:

stipulation/stipulation.h:

stipulation/goals/goals.h:

stipulation/slice_type.h:

output/mode.h:

debugging/trace.h:

pydata.h:

py.h:

conditions/conditions.h:
pieces/walks/pawns/en_passant$(OBJ_SUFFIX): pieces/walks/pawns/en_passant.c \
 pieces/walks/pawns/en_passant.h solving/solve.h py.h utilities/boolean.h \
 position/position.h position/board.h utilities/bitmask.h \
 pieces/walks/vectors.h utilities/boolean.h utilities/enumeration.h \
 solving/ply.h position/position.h pylang.h stipulation/stipulation.h \
 stipulation/goals/goals.h stipulation/slice_type.h output/mode.h \
 solving/move_effect_journal.h solving/castling_rights.h solving/ply.h \
 position/pieceid.h solving/observation.h pieces/walks/hunters.h \
 pieces/walks/classification.h solving/move_generator.h \
 stipulation/pipe.h stipulation/structure_traversal.h stipulation/slice.h \
 stipulation/traversal.h stipulation/has_solution_type.h \
 stipulation/move.h debugging/trace.h pydata.h py.h

pieces/walks/pawns/en_passant.h:

solving/solve.h:

py.h:

utilities/boolean.h:

position/position.h:

position/board.h:

utilities/bitmask.h:

pieces/walks/vectors.h:

utilities/boolean.h:

utilities/enumeration.h:

solving/ply.h:

position/position.h:

pylang.h:

stipulation/stipulation.h:

stipulation/goals/goals.h:

stipulation/slice_type.h:

output/mode.h:

solving/move_effect_journal.h:

solving/castling_rights.h:

solving/ply.h:

position/pieceid.h:

solving/observation.h:

pieces/walks/hunters.h:

pieces/walks/classification.h:

solving/move_generator.h:

stipulation/pipe.h:

stipulation/structure_traversal.h:

stipulation/slice.h:

stipulation/traversal.h:

stipulation/has_solution_type.h:

stipulation/move.h:

debugging/trace.h:

pydata.h:

py.h:
pieces/walks/pawns/reverse$(OBJ_SUFFIX): pieces/walks/pawns/reverse.c \
 pieces/walks/pawns/reverse.h solving/observation.h \
 stipulation/stipulation.h stipulation/goals/goals.h utilities/boolean.h \
 py.h utilities/boolean.h position/position.h position/board.h \
 utilities/bitmask.h pieces/walks/vectors.h utilities/enumeration.h \
 solving/ply.h position/position.h pylang.h stipulation/slice_type.h \
 output/mode.h solving/ply.h pieces/walks/pawns/pawns.h \
 pieces/walks/pawns/pawn.h pieces/walks/pawns/en_passant.h \
 solving/solve.h solving/move_effect_journal.h solving/castling_rights.h \
 position/pieceid.h solving/move_generator.h \
 solving/find_square_observer_tracking_back_from_target.h \
 debugging/trace.h pydata.h py.h

pieces/walks/pawns/reverse.h:

solving/observation.h:

stipulation/stipulation.h:

stipulation/goals/goals.h:

utilities/boolean.h:

py.h:

utilities/boolean.h:

position/position.h:

position/board.h:

utilities/bitmask.h:

pieces/walks/vectors.h:

utilities/enumeration.h:

solving/ply.h:

position/position.h:

pylang.h:

stipulation/slice_type.h:

output/mode.h:

solving/ply.h:

pieces/walks/pawns/pawns.h:

pieces/walks/pawns/pawn.h:

pieces/walks/pawns/en_passant.h:

solving/solve.h:

solving/move_effect_journal.h:

solving/castling_rights.h:

position/pieceid.h:

solving/move_generator.h:

solving/find_square_observer_tracking_back_from_target.h:

debugging/trace.h:

pydata.h:

py.h:
pieces/walks/pawns/berolina$(OBJ_SUFFIX): pieces/walks/pawns/berolina.c \
 pieces/walks/pawns/berolina.h solving/observation.h \
 stipulation/stipulation.h stipulation/goals/goals.h utilities/boolean.h \
 py.h utilities/boolean.h position/position.h position/board.h \
 utilities/bitmask.h pieces/walks/vectors.h utilities/enumeration.h \
 solving/ply.h position/position.h pylang.h stipulation/slice_type.h \
 output/mode.h solving/ply.h pieces/walks/pawns/pawns.h \
 pieces/walks/pawns/pawn.h pieces/walks/pawns/en_passant.h \
 solving/solve.h solving/move_effect_journal.h solving/castling_rights.h \
 position/pieceid.h solving/move_generator.h \
 solving/find_square_observer_tracking_back_from_target.h \
 debugging/trace.h pydata.h py.h

pieces/walks/pawns/berolina.h:

solving/observation.h:

stipulation/stipulation.h:

stipulation/goals/goals.h:

utilities/boolean.h:

py.h:

utilities/boolean.h:

position/position.h:

position/board.h:

utilities/bitmask.h:

pieces/walks/vectors.h:

utilities/enumeration.h:

solving/ply.h:

position/position.h:

pylang.h:

stipulation/slice_type.h:

output/mode.h:

solving/ply.h:

pieces/walks/pawns/pawns.h:

pieces/walks/pawns/pawn.h:

pieces/walks/pawns/en_passant.h:

solving/solve.h:

solving/move_effect_journal.h:

solving/castling_rights.h:

position/pieceid.h:

solving/move_generator.h:

solving/find_square_observer_tracking_back_from_target.h:

debugging/trace.h:

pydata.h:

py.h:
pieces/walks/pawns/super$(OBJ_SUFFIX): pieces/walks/pawns/super.c \
 pieces/walks/pawns/super.h solving/observation.h \
 stipulation/stipulation.h stipulation/goals/goals.h utilities/boolean.h \
 py.h utilities/boolean.h position/position.h position/board.h \
 utilities/bitmask.h pieces/walks/vectors.h utilities/enumeration.h \
 solving/ply.h position/position.h pylang.h stipulation/slice_type.h \
 output/mode.h solving/ply.h solving/move_generator.h solving/solve.h \
 debugging/trace.h pydata.h py.h

pieces/walks/pawns/super.h:

solving/observation.h:

stipulation/stipulation.h:

stipulation/goals/goals.h:

utilities/boolean.h:

py.h:

utilities/boolean.h:

position/position.h:

position/board.h:

utilities/bitmask.h:

pieces/walks/vectors.h:

utilities/enumeration.h:

solving/ply.h:

position/position.h:

pylang.h:

stipulation/slice_type.h:

output/mode.h:

solving/ply.h:

solving/move_generator.h:

solving/solve.h:

debugging/trace.h:

pydata.h:

py.h:
pieces/walks/pawns/combined$(OBJ_SUFFIX): pieces/walks/pawns/combined.c \
 pieces/walks/pawns/combined.h position/board.h utilities/bitmask.h \
 pieces/walks/pawns/pawn.h position/position.h pieces/walks/vectors.h \
 utilities/boolean.h utilities/enumeration.h solving/observation.h \
 stipulation/stipulation.h stipulation/goals/goals.h py.h \
 utilities/boolean.h position/position.h solving/ply.h pylang.h \
 stipulation/slice_type.h output/mode.h solving/ply.h \
 pieces/walks/pawns/pawns.h pieces/walks/leapers.h pieces/walks/riders.h \
 solving/move_generator.h solving/solve.h debugging/trace.h pydata.h py.h

pieces/walks/pawns/combined.h:

position/board.h:

utilities/bitmask.h:

pieces/walks/pawns/pawn.h:

position/position.h:

pieces/walks/vectors.h:

utilities/boolean.h:

utilities/enumeration.h:

solving/observation.h:

stipulation/stipulation.h:

stipulation/goals/goals.h:

py.h:

utilities/boolean.h:

position/position.h:

solving/ply.h:

pylang.h:

stipulation/slice_type.h:

output/mode.h:

solving/ply.h:

pieces/walks/pawns/pawns.h:

pieces/walks/leapers.h:

pieces/walks/riders.h:

solving/move_generator.h:

solving/solve.h:

debugging/trace.h:

pydata.h:

py.h:
