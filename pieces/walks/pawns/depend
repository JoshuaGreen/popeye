pieces/walks/pawns/pawn$(OBJ_SUFFIX): pieces/walks/pawns/pawn.c \
 pieces/walks/pawns/pawn.h position/board.h utilities/bitmask.h \
 position/side.h position/side.enum.h solving/observation.h \
 stipulation/stipulation.h stipulation/goals/goals.h utilities/boolean.h \
 stipulation/slice_type.h stipulation/slice_type.enum.h pieces/pieces.h \
 output/mode.h output/mode.enum.h solving/machinery/dispatch.h \
 pieces/walks/vectors.h solving/ply.h debugging/trace.h \
 position/position.h position/color.h position/color.enum.h \
 solving/temporary_hacks.h conditions/conditions.h \
 conditions/circe/circe.h solving/machinery/solve.h \
 stipulation/structure_traversal.h stipulation/slice.h \
 stipulation/slice_structural_type.h \
 stipulation/slice_structural_type.enum.h \
 stipulation/slice_functional_type.h \
 stipulation/slice_functional_type.enum.h \
 stipulation/slice_contextual_type.h \
 stipulation/slice_contextual_type.enum.h stipulation/traversal.h \
 stipulation/slice_insertion.h solving/move_effect_journal.h \
 solving/castling_rights.h position/pieceid.h solving/machinery/twin.h \
 conditions/circe/rebirth_square_occupied.h \
 conditions/circe/reborn_piece.h conditions/circe/rebirth_square.h \
 conditions/circe/relevant_capture.h conditions/circe/relevant_piece.h \
 conditions/circe/relevant_side.h pieces/walks/pawns/pawns.h \
 pieces/walks/pawns/en_passant.h solving/move_generator.h \
 solving/find_square_observer_tracking_back_from_target.h \
 debugging/assert.h

pieces/walks/pawns/pawn.h:

position/board.h:

utilities/bitmask.h:

position/side.h:

position/side.enum.h:

solving/observation.h:

stipulation/stipulation.h:

stipulation/goals/goals.h:

utilities/boolean.h:

stipulation/slice_type.h:

stipulation/slice_type.enum.h:

pieces/pieces.h:

output/mode.h:

output/mode.enum.h:

solving/machinery/dispatch.h:

pieces/walks/vectors.h:

solving/ply.h:

debugging/trace.h:

position/position.h:

position/color.h:

position/color.enum.h:

solving/temporary_hacks.h:

conditions/conditions.h:

conditions/circe/circe.h:

solving/machinery/solve.h:

stipulation/structure_traversal.h:

stipulation/slice.h:

stipulation/slice_structural_type.h:

stipulation/slice_structural_type.enum.h:

stipulation/slice_functional_type.h:

stipulation/slice_functional_type.enum.h:

stipulation/slice_contextual_type.h:

stipulation/slice_contextual_type.enum.h:

stipulation/traversal.h:

stipulation/slice_insertion.h:

solving/move_effect_journal.h:

solving/castling_rights.h:

position/pieceid.h:

solving/machinery/twin.h:

conditions/circe/rebirth_square_occupied.h:

conditions/circe/reborn_piece.h:

conditions/circe/rebirth_square.h:

conditions/circe/relevant_capture.h:

conditions/circe/relevant_piece.h:

conditions/circe/relevant_side.h:

pieces/walks/pawns/pawns.h:

pieces/walks/pawns/en_passant.h:

solving/move_generator.h:

solving/find_square_observer_tracking_back_from_target.h:

debugging/assert.h:
pieces/walks/pawns/pawns$(OBJ_SUFFIX): pieces/walks/pawns/pawns.c \
 pieces/walks/pawns/pawns.h pieces/walks/vectors.h position/board.h \
 utilities/bitmask.h position/position.h position/side.h \
 position/side.enum.h position/color.h position/color.enum.h \
 pieces/pieces.h utilities/boolean.h pieces/walks/pawns/en_passant.h \
 solving/machinery/solve.h stipulation/stipulation.h \
 stipulation/goals/goals.h stipulation/slice_type.h \
 stipulation/slice_type.enum.h output/mode.h output/mode.enum.h \
 solving/machinery/dispatch.h debugging/trace.h solving/ply.h \
 solving/move_effect_journal.h solving/castling_rights.h \
 position/pieceid.h solving/observation.h solving/temporary_hacks.h \
 solving/move_generator.h debugging/assert.h

pieces/walks/pawns/pawns.h:

pieces/walks/vectors.h:

position/board.h:

utilities/bitmask.h:

position/position.h:

position/side.h:

position/side.enum.h:

position/color.h:

position/color.enum.h:

pieces/pieces.h:

utilities/boolean.h:

pieces/walks/pawns/en_passant.h:

solving/machinery/solve.h:

stipulation/stipulation.h:

stipulation/goals/goals.h:

stipulation/slice_type.h:

stipulation/slice_type.enum.h:

output/mode.h:

output/mode.enum.h:

solving/machinery/dispatch.h:

debugging/trace.h:

solving/ply.h:

solving/move_effect_journal.h:

solving/castling_rights.h:

position/pieceid.h:

solving/observation.h:

solving/temporary_hacks.h:

solving/move_generator.h:

debugging/assert.h:
pieces/walks/pawns/promotee_sequence$(OBJ_SUFFIX): \
 pieces/walks/pawns/promotee_sequence.c \
 pieces/walks/pawns/promotee_sequence.h pieces/pieces.h \
 utilities/boolean.h position/board.h utilities/bitmask.h position/side.h \
 position/side.enum.h pieces/walks/walks.h pieces/walks/classification.h \
 position/position.h position/color.h position/color.enum.h \
 pieces/walks/vectors.h conditions/singlebox/type1.h \
 solving/machinery/solve.h stipulation/stipulation.h \
 stipulation/goals/goals.h stipulation/slice_type.h \
 stipulation/slice_type.enum.h output/mode.h output/mode.enum.h \
 solving/machinery/dispatch.h debugging/trace.h solving/ply.h \
 conditions/conditions.h debugging/assert.h

pieces/walks/pawns/promotee_sequence.h:

pieces/pieces.h:

utilities/boolean.h:

position/board.h:

utilities/bitmask.h:

position/side.h:

position/side.enum.h:

pieces/walks/walks.h:

pieces/walks/classification.h:

position/position.h:

position/color.h:

position/color.enum.h:

pieces/walks/vectors.h:

conditions/singlebox/type1.h:

solving/machinery/solve.h:

stipulation/stipulation.h:

stipulation/goals/goals.h:

stipulation/slice_type.h:

stipulation/slice_type.enum.h:

output/mode.h:

output/mode.enum.h:

solving/machinery/dispatch.h:

debugging/trace.h:

solving/ply.h:

conditions/conditions.h:

debugging/assert.h:
pieces/walks/pawns/promotion$(OBJ_SUFFIX): pieces/walks/pawns/promotion.c \
 pieces/walks/pawns/promotion.h solving/machinery/solve.h \
 stipulation/stipulation.h stipulation/goals/goals.h position/board.h \
 utilities/bitmask.h utilities/boolean.h stipulation/slice_type.h \
 stipulation/slice_type.enum.h position/side.h position/side.enum.h \
 pieces/pieces.h output/mode.h output/mode.enum.h \
 solving/machinery/dispatch.h debugging/trace.h position/position.h \
 position/color.h position/color.enum.h pieces/walks/vectors.h \
 solving/ply.h solving/move_effect_journal.h solving/castling_rights.h \
 position/pieceid.h stipulation/slice_insertion.h \
 stipulation/structure_traversal.h stipulation/slice.h \
 stipulation/slice_structural_type.h \
 stipulation/slice_structural_type.enum.h \
 stipulation/slice_functional_type.h \
 stipulation/slice_functional_type.enum.h \
 stipulation/slice_contextual_type.h \
 stipulation/slice_contextual_type.enum.h stipulation/traversal.h \
 pieces/walks/pawns/promotee_sequence.h solving/has_solution_type.h \
 solving/has_solution_type.enum.h stipulation/move.h stipulation/pipe.h \
 solving/post_move_iteration.h solving/pipe.h debugging/assert.h

pieces/walks/pawns/promotion.h:

solving/machinery/solve.h:

stipulation/stipulation.h:

stipulation/goals/goals.h:

position/board.h:

utilities/bitmask.h:

utilities/boolean.h:

stipulation/slice_type.h:

stipulation/slice_type.enum.h:

position/side.h:

position/side.enum.h:

pieces/pieces.h:

output/mode.h:

output/mode.enum.h:

solving/machinery/dispatch.h:

debugging/trace.h:

position/position.h:

position/color.h:

position/color.enum.h:

pieces/walks/vectors.h:

solving/ply.h:

solving/move_effect_journal.h:

solving/castling_rights.h:

position/pieceid.h:

stipulation/slice_insertion.h:

stipulation/structure_traversal.h:

stipulation/slice.h:

stipulation/slice_structural_type.h:

stipulation/slice_structural_type.enum.h:

stipulation/slice_functional_type.h:

stipulation/slice_functional_type.enum.h:

stipulation/slice_contextual_type.h:

stipulation/slice_contextual_type.enum.h:

stipulation/traversal.h:

pieces/walks/pawns/promotee_sequence.h:

solving/has_solution_type.h:

solving/has_solution_type.enum.h:

stipulation/move.h:

stipulation/pipe.h:

solving/post_move_iteration.h:

solving/pipe.h:

debugging/assert.h:
pieces/walks/pawns/en_passant$(OBJ_SUFFIX): pieces/walks/pawns/en_passant.c \
 pieces/walks/pawns/en_passant.h solving/machinery/solve.h \
 stipulation/stipulation.h stipulation/goals/goals.h position/board.h \
 utilities/bitmask.h utilities/boolean.h stipulation/slice_type.h \
 stipulation/slice_type.enum.h position/side.h position/side.enum.h \
 pieces/pieces.h output/mode.h output/mode.enum.h \
 solving/machinery/dispatch.h debugging/trace.h position/position.h \
 position/color.h position/color.enum.h pieces/walks/vectors.h \
 solving/ply.h solving/move_effect_journal.h solving/castling_rights.h \
 position/pieceid.h solving/observation.h solving/temporary_hacks.h \
 pieces/walks/hunters.h pieces/walks/classification.h \
 solving/move_generator.h stipulation/pipe.h \
 stipulation/structure_traversal.h stipulation/slice.h \
 stipulation/slice_structural_type.h \
 stipulation/slice_structural_type.enum.h \
 stipulation/slice_functional_type.h \
 stipulation/slice_functional_type.enum.h \
 stipulation/slice_contextual_type.h \
 stipulation/slice_contextual_type.enum.h stipulation/traversal.h \
 solving/has_solution_type.h solving/has_solution_type.enum.h \
 stipulation/move.h solving/pipe.h debugging/assert.h

pieces/walks/pawns/en_passant.h:

solving/machinery/solve.h:

stipulation/stipulation.h:

stipulation/goals/goals.h:

position/board.h:

utilities/bitmask.h:

utilities/boolean.h:

stipulation/slice_type.h:

stipulation/slice_type.enum.h:

position/side.h:

position/side.enum.h:

pieces/pieces.h:

output/mode.h:

output/mode.enum.h:

solving/machinery/dispatch.h:

debugging/trace.h:

position/position.h:

position/color.h:

position/color.enum.h:

pieces/walks/vectors.h:

solving/ply.h:

solving/move_effect_journal.h:

solving/castling_rights.h:

position/pieceid.h:

solving/observation.h:

solving/temporary_hacks.h:

pieces/walks/hunters.h:

pieces/walks/classification.h:

solving/move_generator.h:

stipulation/pipe.h:

stipulation/structure_traversal.h:

stipulation/slice.h:

stipulation/slice_structural_type.h:

stipulation/slice_structural_type.enum.h:

stipulation/slice_functional_type.h:

stipulation/slice_functional_type.enum.h:

stipulation/slice_contextual_type.h:

stipulation/slice_contextual_type.enum.h:

stipulation/traversal.h:

solving/has_solution_type.h:

solving/has_solution_type.enum.h:

stipulation/move.h:

solving/pipe.h:

debugging/assert.h:
pieces/walks/pawns/reverse$(OBJ_SUFFIX): pieces/walks/pawns/reverse.c \
 pieces/walks/pawns/reverse.h solving/observation.h \
 stipulation/stipulation.h stipulation/goals/goals.h position/board.h \
 utilities/bitmask.h utilities/boolean.h stipulation/slice_type.h \
 stipulation/slice_type.enum.h position/side.h position/side.enum.h \
 pieces/pieces.h output/mode.h output/mode.enum.h \
 solving/machinery/dispatch.h pieces/walks/vectors.h solving/ply.h \
 debugging/trace.h position/position.h position/color.h \
 position/color.enum.h solving/temporary_hacks.h \
 pieces/walks/pawns/pawns.h pieces/walks/pawns/pawn.h \
 pieces/walks/pawns/en_passant.h solving/machinery/solve.h \
 solving/move_effect_journal.h solving/castling_rights.h \
 position/pieceid.h solving/move_generator.h \
 solving/find_square_observer_tracking_back_from_target.h \
 debugging/assert.h

pieces/walks/pawns/reverse.h:

solving/observation.h:

stipulation/stipulation.h:

stipulation/goals/goals.h:

position/board.h:

utilities/bitmask.h:

utilities/boolean.h:

stipulation/slice_type.h:

stipulation/slice_type.enum.h:

position/side.h:

position/side.enum.h:

pieces/pieces.h:

output/mode.h:

output/mode.enum.h:

solving/machinery/dispatch.h:

pieces/walks/vectors.h:

solving/ply.h:

debugging/trace.h:

position/position.h:

position/color.h:

position/color.enum.h:

solving/temporary_hacks.h:

pieces/walks/pawns/pawns.h:

pieces/walks/pawns/pawn.h:

pieces/walks/pawns/en_passant.h:

solving/machinery/solve.h:

solving/move_effect_journal.h:

solving/castling_rights.h:

position/pieceid.h:

solving/move_generator.h:

solving/find_square_observer_tracking_back_from_target.h:

debugging/assert.h:
pieces/walks/pawns/berolina$(OBJ_SUFFIX): pieces/walks/pawns/berolina.c \
 pieces/walks/pawns/berolina.h solving/observation.h \
 stipulation/stipulation.h stipulation/goals/goals.h position/board.h \
 utilities/bitmask.h utilities/boolean.h stipulation/slice_type.h \
 stipulation/slice_type.enum.h position/side.h position/side.enum.h \
 pieces/pieces.h output/mode.h output/mode.enum.h \
 solving/machinery/dispatch.h pieces/walks/vectors.h solving/ply.h \
 debugging/trace.h position/position.h position/color.h \
 position/color.enum.h solving/temporary_hacks.h \
 pieces/walks/pawns/pawns.h pieces/walks/pawns/pawn.h \
 pieces/walks/pawns/en_passant.h solving/machinery/solve.h \
 solving/move_effect_journal.h solving/castling_rights.h \
 position/pieceid.h solving/move_generator.h \
 solving/find_square_observer_tracking_back_from_target.h \
 debugging/assert.h

pieces/walks/pawns/berolina.h:

solving/observation.h:

stipulation/stipulation.h:

stipulation/goals/goals.h:

position/board.h:

utilities/bitmask.h:

utilities/boolean.h:

stipulation/slice_type.h:

stipulation/slice_type.enum.h:

position/side.h:

position/side.enum.h:

pieces/pieces.h:

output/mode.h:

output/mode.enum.h:

solving/machinery/dispatch.h:

pieces/walks/vectors.h:

solving/ply.h:

debugging/trace.h:

position/position.h:

position/color.h:

position/color.enum.h:

solving/temporary_hacks.h:

pieces/walks/pawns/pawns.h:

pieces/walks/pawns/pawn.h:

pieces/walks/pawns/en_passant.h:

solving/machinery/solve.h:

solving/move_effect_journal.h:

solving/castling_rights.h:

position/pieceid.h:

solving/move_generator.h:

solving/find_square_observer_tracking_back_from_target.h:

debugging/assert.h:
pieces/walks/pawns/super$(OBJ_SUFFIX): pieces/walks/pawns/super.c \
 pieces/walks/pawns/super.h solving/observation.h \
 stipulation/stipulation.h stipulation/goals/goals.h position/board.h \
 utilities/bitmask.h utilities/boolean.h stipulation/slice_type.h \
 stipulation/slice_type.enum.h position/side.h position/side.enum.h \
 pieces/pieces.h output/mode.h output/mode.enum.h \
 solving/machinery/dispatch.h pieces/walks/vectors.h solving/ply.h \
 debugging/trace.h position/position.h position/color.h \
 position/color.enum.h solving/temporary_hacks.h solving/move_generator.h \
 solving/machinery/solve.h debugging/assert.h

pieces/walks/pawns/super.h:

solving/observation.h:

stipulation/stipulation.h:

stipulation/goals/goals.h:

position/board.h:

utilities/bitmask.h:

utilities/boolean.h:

stipulation/slice_type.h:

stipulation/slice_type.enum.h:

position/side.h:

position/side.enum.h:

pieces/pieces.h:

output/mode.h:

output/mode.enum.h:

solving/machinery/dispatch.h:

pieces/walks/vectors.h:

solving/ply.h:

debugging/trace.h:

position/position.h:

position/color.h:

position/color.enum.h:

solving/temporary_hacks.h:

solving/move_generator.h:

solving/machinery/solve.h:

debugging/assert.h:
pieces/walks/pawns/combined$(OBJ_SUFFIX): pieces/walks/pawns/combined.c \
 pieces/walks/pawns/combined.h position/board.h utilities/bitmask.h \
 pieces/walks/pawns/pawn.h position/side.h position/side.enum.h \
 solving/observation.h stipulation/stipulation.h \
 stipulation/goals/goals.h utilities/boolean.h stipulation/slice_type.h \
 stipulation/slice_type.enum.h pieces/pieces.h output/mode.h \
 output/mode.enum.h solving/machinery/dispatch.h pieces/walks/vectors.h \
 solving/ply.h debugging/trace.h position/position.h position/color.h \
 position/color.enum.h solving/temporary_hacks.h \
 pieces/walks/pawns/pawns.h pieces/walks/leapers.h pieces/walks/riders.h \
 solving/move_generator.h solving/machinery/solve.h debugging/assert.h

pieces/walks/pawns/combined.h:

position/board.h:

utilities/bitmask.h:

pieces/walks/pawns/pawn.h:

position/side.h:

position/side.enum.h:

solving/observation.h:

stipulation/stipulation.h:

stipulation/goals/goals.h:

utilities/boolean.h:

stipulation/slice_type.h:

stipulation/slice_type.enum.h:

pieces/pieces.h:

output/mode.h:

output/mode.enum.h:

solving/machinery/dispatch.h:

pieces/walks/vectors.h:

solving/ply.h:

debugging/trace.h:

position/position.h:

position/color.h:

position/color.enum.h:

solving/temporary_hacks.h:

pieces/walks/pawns/pawns.h:

pieces/walks/leapers.h:

pieces/walks/riders.h:

solving/move_generator.h:

solving/machinery/solve.h:

debugging/assert.h:
