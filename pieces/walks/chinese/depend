pieces/walks/chinese/riders$(OBJ_SUFFIX): pieces/walks/chinese/riders.c \
 pieces/walks/chinese/riders.h position/board.h utilities/bitmask.h \
 position/position.h position/side.h position/side.enum.h \
 position/color.h position/color.enum.h pieces/pieces.h \
 utilities/boolean.h pieces/walks/vectors.h position/castling_rights.h \
 solving/observation.h stipulation/stipulation.h \
 stipulation/goals/goals.h stipulation/slice_type.h \
 stipulation/slice_type.enum.h stipulation/slice_type.enum output/mode.h \
 output/mode.enum.h solving/machinery/dispatch.h solving/ply.h \
 debugging/trace.h solving/temporary_hacks.h pieces/walks/riders.h \
 pieces/walks/lions.h pieces/walks/hoppers.h solving/move_generator.h \
 solving/machinery/solve.h

pieces/walks/chinese/riders.h:

position/board.h:

utilities/bitmask.h:

position/position.h:

position/side.h:

position/side.enum.h:

position/color.h:

position/color.enum.h:

pieces/pieces.h:

utilities/boolean.h:

pieces/walks/vectors.h:

position/castling_rights.h:

solving/observation.h:

stipulation/stipulation.h:

stipulation/goals/goals.h:

stipulation/slice_type.h:

stipulation/slice_type.enum.h:

stipulation/slice_type.enum:

output/mode.h:

output/mode.enum.h:

solving/machinery/dispatch.h:

solving/ply.h:

debugging/trace.h:

solving/temporary_hacks.h:

pieces/walks/riders.h:

pieces/walks/lions.h:

pieces/walks/hoppers.h:

solving/move_generator.h:

solving/machinery/solve.h:
pieces/walks/chinese/leapers$(OBJ_SUFFIX): pieces/walks/chinese/leapers.c \
 pieces/walks/chinese/leapers.h position/board.h utilities/bitmask.h \
 position/position.h position/side.h position/side.enum.h \
 position/color.h position/color.enum.h pieces/pieces.h \
 utilities/boolean.h pieces/walks/vectors.h position/castling_rights.h \
 solving/move_generator.h solving/machinery/solve.h \
 stipulation/stipulation.h stipulation/goals/goals.h \
 stipulation/slice_type.h stipulation/slice_type.enum.h \
 stipulation/slice_type.enum output/mode.h output/mode.enum.h \
 solving/machinery/dispatch.h debugging/trace.h solving/ply.h

pieces/walks/chinese/leapers.h:

position/board.h:

utilities/bitmask.h:

position/position.h:

position/side.h:

position/side.enum.h:

position/color.h:

position/color.enum.h:

pieces/pieces.h:

utilities/boolean.h:

pieces/walks/vectors.h:

position/castling_rights.h:

solving/move_generator.h:

solving/machinery/solve.h:

stipulation/stipulation.h:

stipulation/goals/goals.h:

stipulation/slice_type.h:

stipulation/slice_type.enum.h:

stipulation/slice_type.enum:

output/mode.h:

output/mode.enum.h:

solving/machinery/dispatch.h:

debugging/trace.h:

solving/ply.h:
pieces/walks/chinese/pawn$(OBJ_SUFFIX): pieces/walks/chinese/pawn.c \
 pieces/walks/chinese/pawn.h position/board.h utilities/bitmask.h \
 solving/observation.h stipulation/stipulation.h \
 stipulation/goals/goals.h utilities/boolean.h stipulation/slice_type.h \
 stipulation/slice_type.enum.h stipulation/slice_type.enum \
 position/side.h position/side.enum.h pieces/pieces.h output/mode.h \
 output/mode.enum.h solving/machinery/dispatch.h pieces/walks/vectors.h \
 solving/ply.h debugging/trace.h solving/temporary_hacks.h \
 position/position.h position/color.h position/color.enum.h \
 position/castling_rights.h solving/move_generator.h \
 solving/machinery/solve.h solving/fork.h

pieces/walks/chinese/pawn.h:

position/board.h:

utilities/bitmask.h:

solving/observation.h:

stipulation/stipulation.h:

stipulation/goals/goals.h:

utilities/boolean.h:

stipulation/slice_type.h:

stipulation/slice_type.enum.h:

stipulation/slice_type.enum:

position/side.h:

position/side.enum.h:

pieces/pieces.h:

output/mode.h:

output/mode.enum.h:

solving/machinery/dispatch.h:

pieces/walks/vectors.h:

solving/ply.h:

debugging/trace.h:

solving/temporary_hacks.h:

position/position.h:

position/color.h:

position/color.enum.h:

position/castling_rights.h:

solving/move_generator.h:

solving/machinery/solve.h:

solving/fork.h:
pieces/walks/chinese/mao$(OBJ_SUFFIX): pieces/walks/chinese/mao.c \
 pieces/walks/chinese/mao.h position/board.h utilities/bitmask.h \
 solving/observation.h stipulation/stipulation.h \
 stipulation/goals/goals.h utilities/boolean.h stipulation/slice_type.h \
 stipulation/slice_type.enum.h stipulation/slice_type.enum \
 position/side.h position/side.enum.h pieces/pieces.h output/mode.h \
 output/mode.enum.h solving/machinery/dispatch.h pieces/walks/vectors.h \
 solving/ply.h debugging/trace.h solving/temporary_hacks.h \
 pieces/walks/angle/angles.h pieces/walks/hoppers.h position/position.h \
 position/color.h position/color.enum.h position/castling_rights.h \
 solving/move_generator.h solving/machinery/solve.h solving/fork.h

pieces/walks/chinese/mao.h:

position/board.h:

utilities/bitmask.h:

solving/observation.h:

stipulation/stipulation.h:

stipulation/goals/goals.h:

utilities/boolean.h:

stipulation/slice_type.h:

stipulation/slice_type.enum.h:

stipulation/slice_type.enum:

position/side.h:

position/side.enum.h:

pieces/pieces.h:

output/mode.h:

output/mode.enum.h:

solving/machinery/dispatch.h:

pieces/walks/vectors.h:

solving/ply.h:

debugging/trace.h:

solving/temporary_hacks.h:

pieces/walks/angle/angles.h:

pieces/walks/hoppers.h:

position/position.h:

position/color.h:

position/color.enum.h:

position/castling_rights.h:

solving/move_generator.h:

solving/machinery/solve.h:

solving/fork.h:
