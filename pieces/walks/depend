pieces/walks/walks$(OBJ_SUFFIX): pieces/walks/walks.c pieces/walks/walks.h py.h \
 utilities/boolean.h position/position.h position/board.h \
 utilities/bitmask.h pieces/walks/vectors.h utilities/boolean.h \
 utilities/enumeration.h pylang.h pydata.h pieces/walks/roses.h \
 position/position.h pyproc.h pieces/walks/vectors.h \
 stipulation/goals/goals.h pieces/walks/bouncer.h pyproc.h

pieces/walks/walks.h:

py.h:

utilities/boolean.h:

position/position.h:

position/board.h:

utilities/bitmask.h:

pieces/walks/vectors.h:

utilities/boolean.h:

utilities/enumeration.h:

pylang.h:

pydata.h:

pieces/walks/roses.h:

position/position.h:

pyproc.h:

pieces/walks/vectors.h:

stipulation/goals/goals.h:

pieces/walks/bouncer.h:

pyproc.h:
pieces/walks/vectors$(OBJ_SUFFIX): pieces/walks/vectors.c pieces/walks/vectors.h \
 position/board.h utilities/bitmask.h

pieces/walks/vectors.h:

position/board.h:

utilities/bitmask.h:
pieces/walks/hunters$(OBJ_SUFFIX): pieces/walks/hunters.c pieces/walks/hunters.h \
 position/board.h utilities/bitmask.h position/position.h \
 pieces/walks/vectors.h utilities/boolean.h utilities/enumeration.h py.h \
 utilities/boolean.h position/position.h pylang.h \
 pieces/walks/generate_moves.h solving/move_generator.h solving/solve.h \
 stipulation/slice_type.h debugging/trace.h pydata.h pieces/walks/roses.h \
 pyproc.h pieces/walks/vectors.h stipulation/goals/goals.h \
 pieces/walks/bouncer.h pyproc.h

pieces/walks/hunters.h:

position/board.h:

utilities/bitmask.h:

position/position.h:

pieces/walks/vectors.h:

utilities/boolean.h:

utilities/enumeration.h:

py.h:

utilities/boolean.h:

position/position.h:

pylang.h:

pieces/walks/generate_moves.h:

solving/move_generator.h:

solving/solve.h:

stipulation/slice_type.h:

debugging/trace.h:

pydata.h:

pieces/walks/roses.h:

pyproc.h:

pieces/walks/vectors.h:

stipulation/goals/goals.h:

pieces/walks/bouncer.h:

pyproc.h:
pieces/walks/roses$(OBJ_SUFFIX): pieces/walks/roses.c pieces/walks/roses.h \
 position/board.h utilities/bitmask.h position/position.h \
 pieces/walks/vectors.h utilities/boolean.h utilities/enumeration.h \
 pyproc.h pieces/walks/vectors.h stipulation/goals/goals.h py.h \
 utilities/boolean.h position/position.h pylang.h \
 solving/move_generator.h solving/solve.h stipulation/slice_type.h \
 solving/observation.h debugging/trace.h pydata.h pieces/walks/roses.h \
 pieces/walks/bouncer.h pyproc.h

pieces/walks/roses.h:

position/board.h:

utilities/bitmask.h:

position/position.h:

pieces/walks/vectors.h:

utilities/boolean.h:

utilities/enumeration.h:

pyproc.h:

pieces/walks/vectors.h:

stipulation/goals/goals.h:

py.h:

utilities/boolean.h:

position/position.h:

pylang.h:

solving/move_generator.h:

solving/solve.h:

stipulation/slice_type.h:

solving/observation.h:

debugging/trace.h:

pydata.h:

pieces/walks/roses.h:

pieces/walks/bouncer.h:

pyproc.h:
pieces/walks/marine$(OBJ_SUFFIX): pieces/walks/marine.c pieces/walks/marine.h \
 pieces/walks/vectors.h position/board.h utilities/bitmask.h \
 position/position.h utilities/boolean.h utilities/enumeration.h py.h \
 utilities/boolean.h position/position.h pylang.h pieces/walks/riders.h \
 pyproc.h pieces/walks/vectors.h stipulation/goals/goals.h \
 pieces/walks/pawns/pawns.h pieces/walks/pawns/pawn.h \
 pieces/walks/pawns/en_passant.h solving/solve.h \
 solving/move_effect_journal.h solving/castling_rights.h \
 position/pieceid.h pieces/walks/locusts.h solving/move_generator.h \
 stipulation/slice_type.h solving/observation.h debugging/trace.h \
 pydata.h pieces/walks/roses.h pieces/walks/bouncer.h pyproc.h

pieces/walks/marine.h:

pieces/walks/vectors.h:

position/board.h:

utilities/bitmask.h:

position/position.h:

utilities/boolean.h:

utilities/enumeration.h:

py.h:

utilities/boolean.h:

position/position.h:

pylang.h:

pieces/walks/riders.h:

pyproc.h:

pieces/walks/vectors.h:

stipulation/goals/goals.h:

pieces/walks/pawns/pawns.h:

pieces/walks/pawns/pawn.h:

pieces/walks/pawns/en_passant.h:

solving/solve.h:

solving/move_effect_journal.h:

solving/castling_rights.h:

position/pieceid.h:

pieces/walks/locusts.h:

solving/move_generator.h:

stipulation/slice_type.h:

solving/observation.h:

debugging/trace.h:

pydata.h:

pieces/walks/roses.h:

pieces/walks/bouncer.h:

pyproc.h:
pieces/walks/spiral_springers$(OBJ_SUFFIX): pieces/walks/spiral_springers.c \
 pieces/walks/spiral_springers.h position/board.h utilities/bitmask.h \
 position/position.h pieces/walks/vectors.h utilities/boolean.h \
 utilities/enumeration.h solving/move_generator.h solving/solve.h py.h \
 utilities/boolean.h position/position.h pylang.h \
 stipulation/slice_type.h solving/observation.h pyproc.h \
 pieces/walks/vectors.h stipulation/goals/goals.h debugging/trace.h \
 pydata.h pieces/walks/roses.h pieces/walks/bouncer.h pyproc.h

pieces/walks/spiral_springers.h:

position/board.h:

utilities/bitmask.h:

position/position.h:

pieces/walks/vectors.h:

utilities/boolean.h:

utilities/enumeration.h:

solving/move_generator.h:

solving/solve.h:

py.h:

utilities/boolean.h:

position/position.h:

pylang.h:

stipulation/slice_type.h:

solving/observation.h:

pyproc.h:

pieces/walks/vectors.h:

stipulation/goals/goals.h:

debugging/trace.h:

pydata.h:

pieces/walks/roses.h:

pieces/walks/bouncer.h:

pyproc.h:
pieces/walks/ubiubi$(OBJ_SUFFIX): pieces/walks/ubiubi.c pieces/walks/ubiubi.h \
 solving/move_generator.h solving/solve.h py.h utilities/boolean.h \
 position/position.h position/board.h utilities/bitmask.h \
 pieces/walks/vectors.h utilities/boolean.h utilities/enumeration.h \
 pylang.h stipulation/slice_type.h \
 solving/find_square_observer_tracking_back_from_target.h pyproc.h \
 pieces/walks/vectors.h stipulation/goals/goals.h pydata.h \
 pieces/walks/roses.h position/position.h pieces/walks/bouncer.h pyproc.h

pieces/walks/ubiubi.h:

solving/move_generator.h:

solving/solve.h:

py.h:

utilities/boolean.h:

position/position.h:

position/board.h:

utilities/bitmask.h:

pieces/walks/vectors.h:

utilities/boolean.h:

utilities/enumeration.h:

pylang.h:

stipulation/slice_type.h:

solving/find_square_observer_tracking_back_from_target.h:

pyproc.h:

pieces/walks/vectors.h:

stipulation/goals/goals.h:

pydata.h:

pieces/walks/roses.h:

position/position.h:

pieces/walks/bouncer.h:

pyproc.h:
pieces/walks/hoppers$(OBJ_SUFFIX): pieces/walks/hoppers.c pieces/walks/hoppers.h \
 position/board.h utilities/bitmask.h position/position.h \
 pieces/walks/vectors.h utilities/boolean.h utilities/enumeration.h \
 pyproc.h pieces/walks/vectors.h stipulation/goals/goals.h py.h \
 utilities/boolean.h position/position.h pylang.h \
 solving/move_generator.h solving/solve.h stipulation/slice_type.h \
 solving/observation.h debugging/trace.h pydata.h pieces/walks/roses.h \
 pieces/walks/bouncer.h pyproc.h

pieces/walks/hoppers.h:

position/board.h:

utilities/bitmask.h:

position/position.h:

pieces/walks/vectors.h:

utilities/boolean.h:

utilities/enumeration.h:

pyproc.h:

pieces/walks/vectors.h:

stipulation/goals/goals.h:

py.h:

utilities/boolean.h:

position/position.h:

pylang.h:

solving/move_generator.h:

solving/solve.h:

stipulation/slice_type.h:

solving/observation.h:

debugging/trace.h:

pydata.h:

pieces/walks/roses.h:

pieces/walks/bouncer.h:

pyproc.h:
pieces/walks/leapers$(OBJ_SUFFIX): pieces/walks/leapers.c pieces/walks/leapers.h \
 position/board.h utilities/bitmask.h position/position.h \
 pieces/walks/vectors.h utilities/boolean.h utilities/enumeration.h \
 solving/move_generator.h solving/solve.h py.h utilities/boolean.h \
 position/position.h pylang.h stipulation/slice_type.h debugging/trace.h \
 pydata.h pieces/walks/roses.h pyproc.h pieces/walks/vectors.h \
 stipulation/goals/goals.h pieces/walks/bouncer.h pyproc.h

pieces/walks/leapers.h:

position/board.h:

utilities/bitmask.h:

position/position.h:

pieces/walks/vectors.h:

utilities/boolean.h:

utilities/enumeration.h:

solving/move_generator.h:

solving/solve.h:

py.h:

utilities/boolean.h:

position/position.h:

pylang.h:

stipulation/slice_type.h:

debugging/trace.h:

pydata.h:

pieces/walks/roses.h:

pyproc.h:

pieces/walks/vectors.h:

stipulation/goals/goals.h:

pieces/walks/bouncer.h:

pyproc.h:
pieces/walks/riders$(OBJ_SUFFIX): pieces/walks/riders.c pieces/walks/riders.h \
 position/board.h utilities/bitmask.h position/position.h \
 pieces/walks/vectors.h utilities/boolean.h utilities/enumeration.h \
 pyproc.h pieces/walks/vectors.h stipulation/goals/goals.h py.h \
 utilities/boolean.h position/position.h pylang.h \
 solving/move_generator.h solving/solve.h stipulation/slice_type.h \
 solving/observation.h debugging/trace.h pydata.h pieces/walks/roses.h \
 pieces/walks/bouncer.h pyproc.h

pieces/walks/riders.h:

position/board.h:

utilities/bitmask.h:

position/position.h:

pieces/walks/vectors.h:

utilities/boolean.h:

utilities/enumeration.h:

pyproc.h:

pieces/walks/vectors.h:

stipulation/goals/goals.h:

py.h:

utilities/boolean.h:

position/position.h:

pylang.h:

solving/move_generator.h:

solving/solve.h:

stipulation/slice_type.h:

solving/observation.h:

debugging/trace.h:

pydata.h:

pieces/walks/roses.h:

pieces/walks/bouncer.h:

pyproc.h:
pieces/walks/lions$(OBJ_SUFFIX): pieces/walks/lions.c pieces/walks/lions.h \
 position/board.h utilities/bitmask.h position/position.h \
 pieces/walks/vectors.h utilities/boolean.h utilities/enumeration.h \
 pyproc.h pieces/walks/vectors.h stipulation/goals/goals.h py.h \
 utilities/boolean.h position/position.h pylang.h \
 solving/move_generator.h solving/solve.h stipulation/slice_type.h \
 solving/observation.h debugging/trace.h pydata.h pieces/walks/roses.h \
 pieces/walks/bouncer.h pyproc.h

pieces/walks/lions.h:

position/board.h:

utilities/bitmask.h:

position/position.h:

pieces/walks/vectors.h:

utilities/boolean.h:

utilities/enumeration.h:

pyproc.h:

pieces/walks/vectors.h:

stipulation/goals/goals.h:

py.h:

utilities/boolean.h:

position/position.h:

pylang.h:

solving/move_generator.h:

solving/solve.h:

stipulation/slice_type.h:

solving/observation.h:

debugging/trace.h:

pydata.h:

pieces/walks/roses.h:

pieces/walks/bouncer.h:

pyproc.h:
pieces/walks/skylla_charybdis$(OBJ_SUFFIX): pieces/walks/skylla_charybdis.c \
 pieces/walks/skylla_charybdis.h position/board.h utilities/bitmask.h \
 position/position.h pieces/walks/vectors.h utilities/boolean.h \
 utilities/enumeration.h solving/move_generator.h solving/solve.h py.h \
 utilities/boolean.h position/position.h pylang.h \
 stipulation/slice_type.h debugging/trace.h pydata.h pieces/walks/roses.h \
 pyproc.h pieces/walks/vectors.h stipulation/goals/goals.h \
 pieces/walks/bouncer.h pyproc.h

pieces/walks/skylla_charybdis.h:

position/board.h:

utilities/bitmask.h:

position/position.h:

pieces/walks/vectors.h:

utilities/boolean.h:

utilities/enumeration.h:

solving/move_generator.h:

solving/solve.h:

py.h:

utilities/boolean.h:

position/position.h:

pylang.h:

stipulation/slice_type.h:

debugging/trace.h:

pydata.h:

pieces/walks/roses.h:

pyproc.h:

pieces/walks/vectors.h:

stipulation/goals/goals.h:

pieces/walks/bouncer.h:

pyproc.h:
pieces/walks/radial$(OBJ_SUFFIX): pieces/walks/radial.c pieces/walks/radial.h \
 solving/move_generator.h solving/solve.h py.h utilities/boolean.h \
 position/position.h position/board.h utilities/bitmask.h \
 pieces/walks/vectors.h utilities/boolean.h utilities/enumeration.h \
 pylang.h stipulation/slice_type.h debugging/trace.h pydata.h \
 pieces/walks/roses.h position/position.h pyproc.h pieces/walks/vectors.h \
 stipulation/goals/goals.h pieces/walks/bouncer.h pyproc.h

pieces/walks/radial.h:

solving/move_generator.h:

solving/solve.h:

py.h:

utilities/boolean.h:

position/position.h:

position/board.h:

utilities/bitmask.h:

pieces/walks/vectors.h:

utilities/boolean.h:

utilities/enumeration.h:

pylang.h:

stipulation/slice_type.h:

debugging/trace.h:

pydata.h:

pieces/walks/roses.h:

position/position.h:

pyproc.h:

pieces/walks/vectors.h:

stipulation/goals/goals.h:

pieces/walks/bouncer.h:

pyproc.h:
pieces/walks/edgehog$(OBJ_SUFFIX): pieces/walks/edgehog.c pieces/walks/edgehog.h \
 position/board.h utilities/bitmask.h solving/move_generator.h \
 solving/solve.h py.h utilities/boolean.h position/position.h \
 pieces/walks/vectors.h utilities/boolean.h utilities/enumeration.h \
 pylang.h stipulation/slice_type.h solving/observation.h pyproc.h \
 pieces/walks/vectors.h stipulation/goals/goals.h debugging/trace.h \
 pydata.h pieces/walks/roses.h position/position.h pieces/walks/bouncer.h \
 pyproc.h

pieces/walks/edgehog.h:

position/board.h:

utilities/bitmask.h:

solving/move_generator.h:

solving/solve.h:

py.h:

utilities/boolean.h:

position/position.h:

pieces/walks/vectors.h:

utilities/boolean.h:

utilities/enumeration.h:

pylang.h:

stipulation/slice_type.h:

solving/observation.h:

pyproc.h:

pieces/walks/vectors.h:

stipulation/goals/goals.h:

debugging/trace.h:

pydata.h:

pieces/walks/roses.h:

position/position.h:

pieces/walks/bouncer.h:

pyproc.h:
pieces/walks/friend$(OBJ_SUFFIX): pieces/walks/friend.c pieces/walks/friend.h \
 position/board.h utilities/bitmask.h position/position.h \
 pieces/walks/vectors.h utilities/boolean.h utilities/enumeration.h \
 pyproc.h pieces/walks/vectors.h stipulation/goals/goals.h py.h \
 utilities/boolean.h position/position.h pylang.h \
 pieces/walks/generate_moves.h solving/move_generator.h solving/solve.h \
 stipulation/slice_type.h solving/observation.h \
 solving/find_square_observer_tracking_back_from_target.h \
 debugging/trace.h pydata.h pieces/walks/roses.h pieces/walks/bouncer.h \
 pyproc.h

pieces/walks/friend.h:

position/board.h:

utilities/bitmask.h:

position/position.h:

pieces/walks/vectors.h:

utilities/boolean.h:

utilities/enumeration.h:

pyproc.h:

pieces/walks/vectors.h:

stipulation/goals/goals.h:

py.h:

utilities/boolean.h:

position/position.h:

pylang.h:

pieces/walks/generate_moves.h:

solving/move_generator.h:

solving/solve.h:

stipulation/slice_type.h:

solving/observation.h:

solving/find_square_observer_tracking_back_from_target.h:

debugging/trace.h:

pydata.h:

pieces/walks/roses.h:

pieces/walks/bouncer.h:

pyproc.h:
pieces/walks/orphan$(OBJ_SUFFIX): pieces/walks/orphan.c pieces/walks/orphan.h \
 position/board.h utilities/bitmask.h position/position.h \
 pieces/walks/vectors.h utilities/boolean.h utilities/enumeration.h \
 pyproc.h pieces/walks/vectors.h stipulation/goals/goals.h py.h \
 utilities/boolean.h position/position.h pylang.h \
 pieces/walks/generate_moves.h solving/move_generator.h solving/solve.h \
 stipulation/slice_type.h solving/observation.h debugging/trace.h \
 pydata.h pieces/walks/roses.h pieces/walks/bouncer.h pyproc.h

pieces/walks/orphan.h:

position/board.h:

utilities/bitmask.h:

position/position.h:

pieces/walks/vectors.h:

utilities/boolean.h:

utilities/enumeration.h:

pyproc.h:

pieces/walks/vectors.h:

stipulation/goals/goals.h:

py.h:

utilities/boolean.h:

position/position.h:

pylang.h:

pieces/walks/generate_moves.h:

solving/move_generator.h:

solving/solve.h:

stipulation/slice_type.h:

solving/observation.h:

debugging/trace.h:

pydata.h:

pieces/walks/roses.h:

pieces/walks/bouncer.h:

pyproc.h:
pieces/walks/cat$(OBJ_SUFFIX): pieces/walks/cat.c pieces/walks/cat.h \
 position/board.h utilities/bitmask.h solving/move_generator.h \
 solving/solve.h py.h utilities/boolean.h position/position.h \
 pieces/walks/vectors.h utilities/boolean.h utilities/enumeration.h \
 pylang.h stipulation/slice_type.h debugging/trace.h pydata.h \
 pieces/walks/roses.h position/position.h pyproc.h pieces/walks/vectors.h \
 stipulation/goals/goals.h pieces/walks/bouncer.h pyproc.h

pieces/walks/cat.h:

position/board.h:

utilities/bitmask.h:

solving/move_generator.h:

solving/solve.h:

py.h:

utilities/boolean.h:

position/position.h:

pieces/walks/vectors.h:

utilities/boolean.h:

utilities/enumeration.h:

pylang.h:

stipulation/slice_type.h:

debugging/trace.h:

pydata.h:

pieces/walks/roses.h:

position/position.h:

pyproc.h:

pieces/walks/vectors.h:

stipulation/goals/goals.h:

pieces/walks/bouncer.h:

pyproc.h:
pieces/walks/bouncy$(OBJ_SUFFIX): pieces/walks/bouncy.c pieces/walks/bouncy.h \
 position/board.h utilities/bitmask.h utilities/boolean.h \
 solving/move_generator.h solving/solve.h py.h utilities/boolean.h \
 position/position.h pieces/walks/vectors.h utilities/enumeration.h \
 pylang.h stipulation/slice_type.h debugging/trace.h pydata.h \
 pieces/walks/roses.h position/position.h pyproc.h pieces/walks/vectors.h \
 stipulation/goals/goals.h pieces/walks/bouncer.h pyproc.h

pieces/walks/bouncy.h:

position/board.h:

utilities/bitmask.h:

utilities/boolean.h:

solving/move_generator.h:

solving/solve.h:

py.h:

utilities/boolean.h:

position/position.h:

pieces/walks/vectors.h:

utilities/enumeration.h:

pylang.h:

stipulation/slice_type.h:

debugging/trace.h:

pydata.h:

pieces/walks/roses.h:

position/position.h:

pyproc.h:

pieces/walks/vectors.h:

stipulation/goals/goals.h:

pieces/walks/bouncer.h:

pyproc.h:
pieces/walks/cardinal$(OBJ_SUFFIX): pieces/walks/cardinal.c pieces/walks/cardinal.h \
 position/board.h utilities/bitmask.h pieces/walks/angle/angles.h \
 pieces/walks/vectors.h solving/move_generator.h solving/solve.h py.h \
 utilities/boolean.h position/position.h utilities/boolean.h \
 utilities/enumeration.h pylang.h stipulation/slice_type.h \
 debugging/trace.h pydata.h pieces/walks/roses.h position/position.h \
 pyproc.h pieces/walks/vectors.h stipulation/goals/goals.h \
 pieces/walks/bouncer.h pyproc.h

pieces/walks/cardinal.h:

position/board.h:

utilities/bitmask.h:

pieces/walks/angle/angles.h:

pieces/walks/vectors.h:

solving/move_generator.h:

solving/solve.h:

py.h:

utilities/boolean.h:

position/position.h:

utilities/boolean.h:

utilities/enumeration.h:

pylang.h:

stipulation/slice_type.h:

debugging/trace.h:

pydata.h:

pieces/walks/roses.h:

position/position.h:

pyproc.h:

pieces/walks/vectors.h:

stipulation/goals/goals.h:

pieces/walks/bouncer.h:

pyproc.h:
pieces/walks/reflecting_bishop$(OBJ_SUFFIX): pieces/walks/reflecting_bishop.c \
 pieces/walks/reflecting_bishop.h position/board.h utilities/bitmask.h \
 pieces/walks/angle/angles.h pieces/walks/vectors.h \
 solving/move_generator.h solving/solve.h py.h utilities/boolean.h \
 position/position.h utilities/boolean.h utilities/enumeration.h pylang.h \
 stipulation/slice_type.h debugging/trace.h pydata.h pieces/walks/roses.h \
 position/position.h pyproc.h pieces/walks/vectors.h \
 stipulation/goals/goals.h pieces/walks/bouncer.h pyproc.h

pieces/walks/reflecting_bishop.h:

position/board.h:

utilities/bitmask.h:

pieces/walks/angle/angles.h:

pieces/walks/vectors.h:

solving/move_generator.h:

solving/solve.h:

py.h:

utilities/boolean.h:

position/position.h:

utilities/boolean.h:

utilities/enumeration.h:

pylang.h:

stipulation/slice_type.h:

debugging/trace.h:

pydata.h:

pieces/walks/roses.h:

position/position.h:

pyproc.h:

pieces/walks/vectors.h:

stipulation/goals/goals.h:

pieces/walks/bouncer.h:

pyproc.h:
pieces/walks/bob$(OBJ_SUFFIX): pieces/walks/bob.c pieces/walks/bob.h \
 position/board.h utilities/bitmask.h pieces/walks/riders.h \
 position/position.h pieces/walks/vectors.h utilities/boolean.h \
 utilities/enumeration.h pyproc.h pieces/walks/vectors.h \
 stipulation/goals/goals.h py.h utilities/boolean.h position/position.h \
 pylang.h solving/move_generator.h solving/solve.h \
 stipulation/slice_type.h solving/observation.h debugging/trace.h \
 pydata.h pieces/walks/roses.h pieces/walks/bouncer.h pyproc.h

pieces/walks/bob.h:

position/board.h:

utilities/bitmask.h:

pieces/walks/riders.h:

position/position.h:

pieces/walks/vectors.h:

utilities/boolean.h:

utilities/enumeration.h:

pyproc.h:

pieces/walks/vectors.h:

stipulation/goals/goals.h:

py.h:

utilities/boolean.h:

position/position.h:

pylang.h:

solving/move_generator.h:

solving/solve.h:

stipulation/slice_type.h:

solving/observation.h:

debugging/trace.h:

pydata.h:

pieces/walks/roses.h:

pieces/walks/bouncer.h:

pyproc.h:
pieces/walks/rabbit$(OBJ_SUFFIX): pieces/walks/rabbit.c pieces/walks/rabbit.h \
 pieces/walks/riders.h position/board.h utilities/bitmask.h \
 position/position.h pieces/walks/vectors.h utilities/boolean.h \
 utilities/enumeration.h pyproc.h pieces/walks/vectors.h \
 stipulation/goals/goals.h py.h utilities/boolean.h position/position.h \
 pylang.h solving/move_generator.h solving/solve.h \
 stipulation/slice_type.h debugging/trace.h pydata.h pieces/walks/roses.h \
 pieces/walks/bouncer.h pyproc.h

pieces/walks/rabbit.h:

pieces/walks/riders.h:

position/board.h:

utilities/bitmask.h:

position/position.h:

pieces/walks/vectors.h:

utilities/boolean.h:

utilities/enumeration.h:

pyproc.h:

pieces/walks/vectors.h:

stipulation/goals/goals.h:

py.h:

utilities/boolean.h:

position/position.h:

pylang.h:

solving/move_generator.h:

solving/solve.h:

stipulation/slice_type.h:

debugging/trace.h:

pydata.h:

pieces/walks/roses.h:

pieces/walks/bouncer.h:

pyproc.h:
pieces/walks/kangaroo$(OBJ_SUFFIX): pieces/walks/kangaroo.c pieces/walks/kangaroo.h \
 position/board.h utilities/bitmask.h solving/move_generator.h \
 solving/solve.h py.h utilities/boolean.h position/position.h \
 pieces/walks/vectors.h utilities/boolean.h utilities/enumeration.h \
 pylang.h stipulation/slice_type.h solving/observation.h pyproc.h \
 pieces/walks/vectors.h stipulation/goals/goals.h debugging/trace.h \
 pydata.h pieces/walks/roses.h position/position.h pieces/walks/bouncer.h \
 pyproc.h

pieces/walks/kangaroo.h:

position/board.h:

utilities/bitmask.h:

solving/move_generator.h:

solving/solve.h:

py.h:

utilities/boolean.h:

position/position.h:

pieces/walks/vectors.h:

utilities/boolean.h:

utilities/enumeration.h:

pylang.h:

stipulation/slice_type.h:

solving/observation.h:

pyproc.h:

pieces/walks/vectors.h:

stipulation/goals/goals.h:

debugging/trace.h:

pydata.h:

pieces/walks/roses.h:

position/position.h:

pieces/walks/bouncer.h:

pyproc.h:
pieces/walks/locusts$(OBJ_SUFFIX): pieces/walks/locusts.c pieces/walks/locusts.h \
 position/board.h utilities/bitmask.h position/position.h \
 pieces/walks/vectors.h utilities/boolean.h utilities/enumeration.h \
 solving/move_generator.h solving/solve.h py.h utilities/boolean.h \
 position/position.h pylang.h stipulation/slice_type.h debugging/trace.h \
 pydata.h pieces/walks/roses.h pyproc.h pieces/walks/vectors.h \
 stipulation/goals/goals.h pieces/walks/bouncer.h pyproc.h

pieces/walks/locusts.h:

position/board.h:

utilities/bitmask.h:

position/position.h:

pieces/walks/vectors.h:

utilities/boolean.h:

utilities/enumeration.h:

solving/move_generator.h:

solving/solve.h:

py.h:

utilities/boolean.h:

position/position.h:

pylang.h:

stipulation/slice_type.h:

debugging/trace.h:

pydata.h:

pieces/walks/roses.h:

pyproc.h:

pieces/walks/vectors.h:

stipulation/goals/goals.h:

pieces/walks/bouncer.h:

pyproc.h:
pieces/walks/hamster$(OBJ_SUFFIX): pieces/walks/hamster.c pieces/walks/hamster.h \
 solving/move_generator.h solving/solve.h py.h utilities/boolean.h \
 position/position.h position/board.h utilities/bitmask.h \
 pieces/walks/vectors.h utilities/boolean.h utilities/enumeration.h \
 pylang.h stipulation/slice_type.h debugging/trace.h pydata.h \
 pieces/walks/roses.h position/position.h pyproc.h pieces/walks/vectors.h \
 stipulation/goals/goals.h pieces/walks/bouncer.h pyproc.h

pieces/walks/hamster.h:

solving/move_generator.h:

solving/solve.h:

py.h:

utilities/boolean.h:

position/position.h:

position/board.h:

utilities/bitmask.h:

pieces/walks/vectors.h:

utilities/boolean.h:

utilities/enumeration.h:

pylang.h:

stipulation/slice_type.h:

debugging/trace.h:

pydata.h:

pieces/walks/roses.h:

position/position.h:

pyproc.h:

pieces/walks/vectors.h:

stipulation/goals/goals.h:

pieces/walks/bouncer.h:

pyproc.h:
pieces/walks/bouncer$(OBJ_SUFFIX): pieces/walks/bouncer.c pieces/walks/bouncer.h \
 position/board.h utilities/bitmask.h position/position.h \
 pieces/walks/vectors.h utilities/boolean.h utilities/enumeration.h \
 pyproc.h pieces/walks/vectors.h stipulation/goals/goals.h py.h \
 utilities/boolean.h position/position.h pylang.h \
 solving/move_generator.h solving/solve.h stipulation/slice_type.h \
 solving/observation.h debugging/trace.h pydata.h pieces/walks/roses.h \
 pieces/walks/bouncer.h pyproc.h

pieces/walks/bouncer.h:

position/board.h:

utilities/bitmask.h:

position/position.h:

pieces/walks/vectors.h:

utilities/boolean.h:

utilities/enumeration.h:

pyproc.h:

pieces/walks/vectors.h:

stipulation/goals/goals.h:

py.h:

utilities/boolean.h:

position/position.h:

pylang.h:

solving/move_generator.h:

solving/solve.h:

stipulation/slice_type.h:

solving/observation.h:

debugging/trace.h:

pydata.h:

pieces/walks/roses.h:

pieces/walks/bouncer.h:

pyproc.h:
pieces/walks/querquisite$(OBJ_SUFFIX): pieces/walks/querquisite.c \
 pieces/walks/querquisite.h position/board.h utilities/bitmask.h \
 pieces/walks/leapers.h position/position.h pieces/walks/vectors.h \
 utilities/boolean.h utilities/enumeration.h pieces/walks/riders.h \
 pyproc.h pieces/walks/vectors.h stipulation/goals/goals.h py.h \
 utilities/boolean.h position/position.h pylang.h \
 solving/move_generator.h solving/solve.h stipulation/slice_type.h \
 debugging/trace.h pydata.h pieces/walks/roses.h pieces/walks/bouncer.h \
 pyproc.h

pieces/walks/querquisite.h:

position/board.h:

utilities/bitmask.h:

pieces/walks/leapers.h:

position/position.h:

pieces/walks/vectors.h:

utilities/boolean.h:

utilities/enumeration.h:

pieces/walks/riders.h:

pyproc.h:

pieces/walks/vectors.h:

stipulation/goals/goals.h:

py.h:

utilities/boolean.h:

position/position.h:

pylang.h:

solving/move_generator.h:

solving/solve.h:

stipulation/slice_type.h:

debugging/trace.h:

pydata.h:

pieces/walks/roses.h:

pieces/walks/bouncer.h:

pyproc.h:
pieces/walks/generate_moves$(OBJ_SUFFIX): pieces/walks/generate_moves.c \
 pieces/walks/generate_moves.h position/position.h position/board.h \
 utilities/bitmask.h pieces/walks/vectors.h utilities/boolean.h \
 utilities/enumeration.h pieces/walks/pawns/en_passant.h pyproc.h \
 pieces/walks/vectors.h stipulation/goals/goals.h py.h \
 utilities/boolean.h position/position.h pylang.h solving/solve.h \
 solving/move_effect_journal.h solving/castling_rights.h \
 position/pieceid.h pieces/walks/hoppers.h pieces/walks/leapers.h \
 pieces/walks/riders.h pieces/walks/pawns/pawns.h \
 pieces/walks/pawns/pawn.h pieces/walks/pawns/reverse.h \
 pieces/walks/pawns/berolina.h pieces/walks/lions.h \
 pieces/walks/hunters.h pieces/walks/roses.h \
 pieces/walks/spiral_springers.h pieces/walks/marine.h \
 pieces/walks/ubiubi.h pieces/walks/angle/angles.h \
 pieces/walks/angle/hoppers.h pieces/walks/chinese/riders.h \
 pieces/walks/chinese/leapers.h pieces/walks/chinese/pawn.h \
 pieces/walks/skylla_charybdis.h pieces/walks/radial.h \
 pieces/walks/edgehog.h pieces/walks/friend.h pieces/walks/orphan.h \
 pieces/walks/pawns/super.h pieces/walks/pawns/combined.h \
 pieces/walks/chinese/mao.h pieces/walks/cat.h pieces/walks/bouncy.h \
 pieces/walks/cardinal.h pieces/walks/reflecting_bishop.h \
 pieces/walks/bob.h pieces/walks/rabbit.h pieces/walks/kangaroo.h \
 pieces/walks/locusts.h pieces/walks/hamster.h pieces/walks/bouncer.h \
 pieces/walks/querquisite.h debugging/trace.h pydata.h \
 pieces/walks/roses.h pieces/walks/bouncer.h pyproc.h

pieces/walks/generate_moves.h:

position/position.h:

position/board.h:

utilities/bitmask.h:

pieces/walks/vectors.h:

utilities/boolean.h:

utilities/enumeration.h:

pieces/walks/pawns/en_passant.h:

pyproc.h:

pieces/walks/vectors.h:

stipulation/goals/goals.h:

py.h:

utilities/boolean.h:

position/position.h:

pylang.h:

solving/solve.h:

solving/move_effect_journal.h:

solving/castling_rights.h:

position/pieceid.h:

pieces/walks/hoppers.h:

pieces/walks/leapers.h:

pieces/walks/riders.h:

pieces/walks/pawns/pawns.h:

pieces/walks/pawns/pawn.h:

pieces/walks/pawns/reverse.h:

pieces/walks/pawns/berolina.h:

pieces/walks/lions.h:

pieces/walks/hunters.h:

pieces/walks/roses.h:

pieces/walks/spiral_springers.h:

pieces/walks/marine.h:

pieces/walks/ubiubi.h:

pieces/walks/angle/angles.h:

pieces/walks/angle/hoppers.h:

pieces/walks/chinese/riders.h:

pieces/walks/chinese/leapers.h:

pieces/walks/chinese/pawn.h:

pieces/walks/skylla_charybdis.h:

pieces/walks/radial.h:

pieces/walks/edgehog.h:

pieces/walks/friend.h:

pieces/walks/orphan.h:

pieces/walks/pawns/super.h:

pieces/walks/pawns/combined.h:

pieces/walks/chinese/mao.h:

pieces/walks/cat.h:

pieces/walks/bouncy.h:

pieces/walks/cardinal.h:

pieces/walks/reflecting_bishop.h:

pieces/walks/bob.h:

pieces/walks/rabbit.h:

pieces/walks/kangaroo.h:

pieces/walks/locusts.h:

pieces/walks/hamster.h:

pieces/walks/bouncer.h:

pieces/walks/querquisite.h:

debugging/trace.h:

pydata.h:

pieces/walks/roses.h:

pieces/walks/bouncer.h:

pyproc.h:
